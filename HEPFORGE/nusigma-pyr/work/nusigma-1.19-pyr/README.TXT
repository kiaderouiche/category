README for nusigma
==================

[scroll down for compiling instructions]

The first version of nusigma in the svn repository DarkSIMS is
nusigma-1.15-pyr.

This directory contains routines to calculate the neutrino-nucleon cross
section on neutrons or protons. Both charged current and neutral current
cross sections are calculated for both neutrinos and antineutrinos. 

The program uses explicit cross section expressions, summing over parton
distributions in the proton and neutron (assuming isospin symmetry).

Currently, the program uses the CTEQ6 parton distributions (from 2004), where
the CTEQ6-DIS distribution is chosen as a default.

Nusigma also contains a Monte Carlo part that can generate events for any given
energy and interaction type.

These calculations are then used in wimpann and other codes.

*** NOTE: *** 

* If you haven't changed in nusigma, you can just compile and run as is,
but if you have changed things that affect the cross sections and you use
the interpolated cross sections in your code (nusigint), you need to 
compile and run the main program nusigma (in mains) to update the
total cross section tables used by the interpolation routine.

* The same is true if you use the Monte Carlo part and have changed
things that affect the cross section, in which case you need
to compile and run nusigmaxfind (in mains) to update tables needed
by the Monte Carlo.

Layout
======

Subroutines
-----------

In src/ the cross section routines (and CTEQ6 functions) are found. Compile
with 'make' in the src/ directory to create a library in lib/. 
The most important routines are

dsdxdy - the differential cross section (used in integration routins and
   therefore some arguments are passed in common blocks).

Nudsdxdy - wrapper file for dsdxdy that passes its arguments to the
   appropriate common blocks before calling dsdxdy.

NuCross - calculates the total cross section at a given energy

NuCrossDiff - calculates the total cross section, differential in 
   final lepton energy

nusigint - reads the tables generated by the program nusigma (below) and
   returns the total cross section at the given energy and for the given
   interaction type. This is the main routine to use to get the total cross
   section fast. Accurate to within 1% in the range 1-10^12 GeV.

nusig - returns the total cross section as given by parameterizations of
   the form sigma = a * E^b. Within the range 10-10000 GeV, these are good
   to within 10%. Except for simplicity, there is no need to use this
   routine. Instead use nusigint that is much more accurate.

nuNevent - generates one event at the specified energy and for the given
   interaction type. This is the main routine used for Monte Carlo
   generation of events.


Main programs
-------------

In mains/, main programs are found. The most important are

nusigma: calculates the total cross section for all processes for different
   energies and stores the result in data files in dat/sig*.dat

nudsde: calculates the differential (differential in final lepton energy)
   cross section at a given energy

nudsdesim: Uses the Monte Carlo routine nuNevent to select events and then
   fills a table of energy and angular distributions. The energy distribution
   generated here should be the same as the one form nudsde (apart from
   statistical fluctuations). This program is mainly used to test the
   nuNevent Monte Carlo code and compare with Pythia. This program can also
   be seen as an example program on how to use the nuNevent Monte Carlo.

nusigcheck: program to check the accuracy of the parameterizations of
   the total cross sections.

nusigcheck2: program to check the accuracy of the interpolations.

nusigmaxfind: program to find the maximum of the differential cross
   section (differential in ln(x) and ln(y)). This program stores the result
   in dat/dsdlxdlymax-*.dat, which are later read by dsdlxdlymax to interpolate
   and get the maximum of the differential cross section (needed for nuNevent).


Compilation
===========

Configure by typing

./configure DARKSUSY_DIR=<Darksusy 6 dir> PYTHIA=<pythia 6 .o file path>

Note that you need to provide paths to the DarkSUSY 6 directory and the
compiled pythia.o file. An example on how this can be done and how you can
modify e.g. the compiler used is in the script

conf.gfortran

This script calls configure with specific options. Change to your liking.

Then compile by typing 

    make

in the nusigma root directory. Then both the library libnusigma.a and
the main programs will be compiled. If you after this only
want to compile a specific program, go to the mains directory and type 
'make <name>' where <name> is the program you want to compile. Included in
the dat/ directory are pre-created tables of total cross sections and
maxima of cross sections. If you want to re-create these, type

    make create_tables

in the nusigma root directory (this takes about an hour). If you make changes
to the default parameters, like choosing a different PDF or change Qmin, the
tables need to be recreated. This is not done automatically, but has to be
performed manually by the user.

Notes
=====

* The CTEQ6 routines need to read the data file cteq6d.tbl and some of nusigma's
routines need to read data files in the dat/ directory. To accomodate this, a
script config.pl is run from the makefile in the nusigma root directory. This
script puts information about where nusigma is installed into the files
inc/nuroot.f and inc/nuver.f. These files are then loaded into common blocks
and nusigma knows where to load these data files from. Hence, if you move
nusigma after you have compiled it, you need to recompile by typing 'make' in
the nusigma root directory.

* Currently, the nuNevent Monte Carlo code uses the built in random number
generator rand(). For serious production runs, you might want to change this
to something more sophisticated, e.g. the random number generator PYR
included with Pythia.

2018-06-19
Joakim Edsjö
edsjo@fysik.su.se


