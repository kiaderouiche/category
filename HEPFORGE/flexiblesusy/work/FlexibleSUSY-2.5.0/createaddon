#!/bin/sh

# addon creation script for FlexibleSUSY
# Author: Alexander Voigt

# directory of this script
BASEDIR=$(dirname $0)

overwrite="no"
name=""

# exit codes
exit_ok="0"
exit_syntax_error="1"
exit_addon_dir_exists="2"
exit_no_default_addon="3"

#_____________________________________________________________________
help() {
cat <<EOF
Usage: ./`basename $0` [options] --name=<addon-name>
Options:
  --name=            Name of the FlexibleSUSY addon
                     Example: --name=MyAddon

  --force,-f         Overwrite existing addon files.

  --help,-h          Print this help message.

This script creates the directory addons/<addon-name>/
and the makefile module addons/<addon-name>/module.mk

Example:

   ./createaddon --name=MyMSSMExtension
EOF
}

if test $# -lt 1 ; then
    echo "Error: Too few arguments"
    help
    exit ${exit_syntax_error}
fi

if test $# -gt 0 ; then
    while test ! "x$1" = "x" ; do
        case "$1" in
            -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
            *)    optarg= ;;
        esac

        case $1 in
            --force|-f)              overwrite="yes" ;;
            --help|-h)               help; exit ${exit_ok} ;;
            --name=*)                name="$optarg" ;;
            *)  echo "Invalid option '$1'. Try $0 --help" ; exit ${exit_syntax_error} ;;
        esac
        shift
    done
fi

if [ -z "$name" ] ; then
    echo "Error: no addon specified!"
    help
    exit ${exit_syntax_error}
fi

# create target directory name
targetdir="addons/${name}"

if test -d "$targetdir" -a "x$overwrite" = "xno" ; then
    echo "Error: directory $targetdir already exists!"
    echo "Please chose another addon name or use the --force option."
    echo "See ./`basename $0` --help for more information."
    exit ${exit_addon_dir_exists}
fi

echo "Creating addon $name"

if test ! -d "$targetdir" ; then
    printf "  Creating addon directory %s ... " "$targetdir"
    mkdir -p $targetdir
    echo "done"
fi

printf "  Creating Makefile module %s/module.mk ... " "$targetdir"
sed -e "s|@DIR@|$targetdir|g"			  \
    -e "s|@ADDON@|$name|g"		          \
    < templates/module.addon.mk.in > $targetdir/module.mk
echo "done"
