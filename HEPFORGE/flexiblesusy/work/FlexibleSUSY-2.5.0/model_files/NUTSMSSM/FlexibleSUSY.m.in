
FSModelName = "@CLASSNAME@";
FSEigenstates = SARAH`EWSB;
FSDefaultSARAHModel = SMSSM;

(* CSMSSM input parameters *)

MINPAR = { {1, m0},
           {2, m12},
           {3, TanBeta},
           {5, Azero}
         };

EXTPAR = { {61, LambdaInput},
           {62, KappaInput},
           {65, LambdaSInput},
           {66, L1Input},
           {68, MSInput},
           {69, BInput},
           {70, MuInput},
           {71, LInput}
         };

EWSBOutputParameters = { mHd2, mHu2, ms2 };

SUSYScale = Sqrt[Product[M[Su[i]]^(Abs[ZU[i,3]]^2 + Abs[ZU[i,6]]^2), {i,6}]];

SUSYScaleFirstGuess = Sqrt[m0^2 + 4 m12^2];

SUSYScaleInput = {
   {vS, LambdaSInput / \[Lambda]}
};

HighScale = g1 == g2;

HighScaleFirstGuess = 1.0 10^16;

HighScaleInput={
   {T[Ye], Azero*Ye},
   {T[Yd], Azero*Yd},
   {T[Yu], Azero*Yu},
   {mq2, UNITMATRIX[3] m0^2},
   {ml2, UNITMATRIX[3] m0^2},
   {md2, UNITMATRIX[3] m0^2},
   {mu2, UNITMATRIX[3] m0^2},
   {me2, UNITMATRIX[3] m0^2},
   {\[Lambda], LambdaInput},
   {\[Kappa], KappaInput},
   {T[\[Kappa]], Azero \[Kappa]},
   {T[\[Lambda]], Azero LambdaInput},
   {MassB, m12},
   {MassWB,m12},
   {MassG,m12},
   {L1, L1Input},
   {L[L1], LInput L1},
   {MS, MSInput},
   {B[MS], BInput MS},
   {\[Mu], MuInput},
   {B[\[Mu]], BInput \[Mu]}
};

LowScale = LowEnergyConstant[MZ];

LowScaleFirstGuess = LowEnergyConstant[MZ];

LowScaleInput = {
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Automatic},
   {vd, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Cos[ArcTan[TanBeta]]},
   {vu, 2 MZDRbar / Sqrt[GUTNormalization[g1]^2 g1^2 + g2^2] Sin[ArcTan[TanBeta]]}
};

InitialGuessAtLowScale = {
   {vd, LowEnergyConstant[vev] Cos[ArcTan[TanBeta]]},
   {vu, LowEnergyConstant[vev] Sin[ArcTan[TanBeta]]},
   {\[Lambda], LambdaInput},
   {Yu, Automatic},
   {Yd, Automatic},
   {Ye, Automatic}
};

InitialGuessAtHighScale = {};

UseHiggs2LoopNMSSM = True;
EffectiveMu = \[Mu] + \[Lambda] vS / Sqrt[2];
EffectiveBMu = (B[\[Mu]] + \[Lambda] (MS vS / Sqrt[2] + L1)
    + T[\[Lambda]] vS / Sqrt[2] + 0.5 \[Lambda] \[Kappa] vS^2);
EffectiveMASqr = EffectiveBMu (vu^2 + vd^2) / (vu vd);

PotentialLSPParticles = { Chi, Sv, Su, Sd, Se, Cha, Glu };

DefaultPoleMassPrecision = MediumPrecision;
HighPoleMassPrecision    = {hh, Ah, Hpm};
MediumPoleMassPrecision  = {};
LowPoleMassPrecision     = {};

ExtraSLHAOutputBlocks = {
   {FlexibleSUSYOutput, NoScale,
           {{0, Hold[HighScale]},
            {1, Hold[SUSYScale]},
            {2, Hold[LowScale]} } },
   {NMSSMRUN,
           {{1, \[Lambda]},
            {2, \[Kappa]},
            {3, T[\[Lambda]] / \[Lambda]},
            {4, T[\[Kappa]] / \[Kappa]},
            {5, \[Lambda] vS / Sqrt[2]},
            {6, L1},
            {7, L[L1]},
            {8, MS},
            {9, B[MS]},
            {10, ms2} } }
};
