// ====================================================================
// This file is part of FlexibleSUSY.
//
// FlexibleSUSY is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published
// by the Free Software Foundation, either version 3 of the License,
// or (at your option) any later version.
//
// FlexibleSUSY is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with FlexibleSUSY.  If not, see
// <http://www.gnu.org/licenses/>.
// ====================================================================

#ifndef LOGGER_H
#define LOGGER_H

#include <functional>
#include <iostream>

/**
 * The following message logger macros are available:
 *
 * VERBOSE_MSG(message)  only printed if VERBOSE is defined
 * DEBUG_MSG(message)    only printed if DEBUG is defined
 * INFO(message)
 * WARNING(message)
 * ERROR(message)
 * FATAL(message)        aborts program execution
 *
 * All macros print to std::cerr .
 *
 * All output can be disabled if ENABLE_SILENT is defined.
 *
 * The preprocessor symbols ENABLE_DEBUG, ENABLE_SILENT and
 * ENABLE_VERBOSE are defined/undefined in config.h, which is
 * generated by the configure script.  Please refer to the configure
 * script options to control the definition/undefinition of the
 * preprocessor symbols.
 */

namespace flexiblesusy {

void print_verbose(std::function<void()>&&, const char*, int);
void print_debug(std::function<void()>&&, const char*, int);
void print_info(std::function<void()>&&, const char*, int);
void print_warning(std::function<void()>&&, const char*, int);
void print_error(std::function<void()>&&, const char*, int);
void print_fatal(std::function<void()>&&, const char*, int);

} // namespace flexiblesusy

#define VERBOSE_MSG(msg)                                                       \
   flexiblesusy::print_verbose([&] { std::cerr << msg; }, __FILE__, __LINE__)
#define DEBUG_MSG(msg)                                                         \
   flexiblesusy::print_debug([&] { std::cerr << msg; }, __FILE__, __LINE__)
#define INFO(msg)                                                              \
   flexiblesusy::print_info([&] { std::cerr << msg; }, __FILE__, __LINE__)
#define WARNING(msg)                                                           \
   flexiblesusy::print_warning([&] { std::cerr << msg; }, __FILE__, __LINE__)
#define ERROR(msg)                                                             \
   flexiblesusy::print_error([&] { std::cerr << msg; }, __FILE__, __LINE__)
#define FATAL(msg)                                                             \
   flexiblesusy::print_fatal([&] { std::cerr << msg; }, __FILE__, __LINE__)

#endif
