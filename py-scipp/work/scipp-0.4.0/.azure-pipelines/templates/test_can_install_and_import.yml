jobs:
  - job: 'install_and_import_linux'
    displayName: 'Can Install and Import - Linux'
    timeoutInMinutes: 10
    pool:
      vmImage: 'ubuntu-18.04'
    variables:
      packages_dir: '$(Build.StagingDirectory)/packages'
    steps:
      - checkout: none
      - bash: |
          echo "##vso[task.prependpath]$CONDA/bin"
        displayName: 'Configure Conda directories'
      - bash: |
          set -ex
          conda config --set always_yes yes
          conda install conda-build
        displayName: 'Conda configuration'
      - bash: |
          set -x
          mkdir -p "$(packages_dir)"
        displayName: 'Make directories'
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          specificBuildWithTriggering: true
          downloadType: 'single'
          artifactName: 'linux-64'
          downloadPath: '$(packages_dir)'
        displayName: 'Download previously built Conda package'
      - bash: |
          set -x
          conda index "$(packages_dir)"
        displayName: 'Index local Conda repo'
      - bash: |
          set -ex
          conda create -n test python=3.7
          source activate test
          conda install -c "$(packages_dir)" -c conda-forge scipp
        displayName: 'Install Conda package'
      - bash: |
          set -ex
          source activate test
          (echo 'import scipp'; echo 'print(scipp.__version__)') | python
        displayName: 'Check Scipp is importable'

  - job: 'install_and_import_macos'
    displayName: 'Can Install and Import - Mac OS'
    timeoutInMinutes: 10
    pool:
      vmImage: 'macOS-10.14'
    variables:
      packages_dir: '$(Build.StagingDirectory)/packages'
    steps:
      - checkout: none
      - bash: |
          echo "##vso[task.prependpath]$CONDA/bin"
          echo "##vso[task.setvariable variable=conda_dir]$CONDA"
        displayName: 'Configure Conda directories'
      - bash: |
          sudo chown -R $USER $CONDA
        displayName: 'Take ownership of Conda installation'
      - bash: |
          set -ex
          conda config --set always_yes yes
          conda install conda-build
        displayName: 'Conda configuration'
      - bash: |
          set -x
          mkdir -p "$(packages_dir)"
        displayName: 'Make directories'
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          specificBuildWithTriggering: true
          downloadType: 'single'
          artifactName: 'osx-64'
          downloadPath: '$(packages_dir)'
        displayName: 'Download previously built Conda package'
      - bash: |
          set -x
          conda index "$(packages_dir)"
        displayName: 'Index local Conda repo'
      - bash: |
          set -ex
          conda create -n test python=3.7
          source activate test
          conda install -c "$(packages_dir)" -c conda-forge scipp
        displayName: 'Install Conda package'
      - bash: |
          set -ex
          source activate test
          (echo 'import scipp'; echo 'print(scipp.__version__)') | python
        displayName: 'Check Scipp is importable'

  - job: 'install_and_import_windows'
    displayName: 'Can Install and Import - Windows'
    timeoutInMinutes: 60
    pool:
      vmImage: 'windows-latest'
    variables:
      packages_dir: '$(Build.StagingDirectory)/packages'
    steps:
      - checkout: self
        submodules: true
      - powershell: |
          Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
          Write-Host "##vso[task.setvariable variable=conda_dir]$env:CONDA"
        displayName: 'Configure Conda directories'
      - script: |
          conda --version
          conda config --set always_yes yes
          conda install conda-build
        displayName: 'Conda configuration'
      - bash: |
          set -x
          mkdir -p "$(packages_dir)"
        displayName: 'Make directories'
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          specificBuildWithTriggering: true
          downloadType: 'single'
          artifactName: 'win-64'
          downloadPath: '$(packages_dir)'
        displayName: 'Download previously built Conda package'
      - bash: |
          set -x
          conda index "$(packages_dir)"
        displayName: 'Index local Conda repo'
      - bash: |
          set -ex
          conda create -n test python=3.7
          source activate test
          conda install -c "$(packages_dir)" -c conda-forge scipp
        displayName: 'Install Conda package'
      - bash: |
          set -ex
          source activate test
          (echo 'import scipp'; echo 'print(scipp.__version__)') | python
        displayName: 'Check Scipp is importable'
