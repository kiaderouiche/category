//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_f "bytes";_e "errors";_dc "github.com/unidoc/unipdf/v3/common";_a "github.com/unidoc/unipdf/v3/contentstream";_ed "github.com/unidoc/unipdf/v3/contentstream/draw";_bc "github.com/unidoc/unipdf/v3/core";_dd "github.com/unidoc/unipdf/v3/internal/textencoding";_gc "github.com/unidoc/unipdf/v3/model";_cf "image";_b "math";_g "strings";_c "unicode";);

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specify a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_gc .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_gc .PdfColorDeviceRGB ;Opacity float64 ;};func _ebe (_feae *_gc .PdfAnnotationWidget ,_gac *_gc .PdfFieldText ,_cgb *_gc .PdfPageResources ,_agb AppearanceStyle )(*_bc .PdfObjectDictionary ,error ){_fca :=_gc .NewPdfPageResources ();_efag ,_afga :=_bc .GetArray (_feae .Rect );if !_afga {return nil ,_e .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_aae ,_cea :=_gc .NewPdfRectangle (*_efag );if _cea !=nil {return nil ,_cea ;};_gff ,_dee :=_aae .Width (),_aae .Height ();_fbba ,_cbf :=_gff ,_dee ;_bgg ,_bddf :=_bc .GetDict (_feae .MK );if _bddf {_fddd ,_ :=_bc .GetDict (_feae .BS );_eed :=_agb .applyAppearanceCharacteristics (_bgg ,_fddd ,nil );if _eed !=nil {return nil ,_eed ;};};_ddga ,_bddf :=_bc .GetIntVal (_gac .MaxLen );if !_bddf {return nil ,_e .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _ddga <=0{return nil ,_e .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_aeae :=_gff /float64 (_ddga );_agf ,_cea :=_a .NewContentStreamParser (_afda (_gac .PdfField )).Parse ();if _cea !=nil {return nil ,_cea ;};_ebg :=_a .NewContentCreator ();if _agb .BorderSize > 0{_bdgd (_ebg ,_agb ,_gff ,_dee );};if _agb .DrawAlignmentReticle {_ddbd :=_agb ;_ddbd .BorderSize =0.2;_gea (_ebg ,_ddbd ,_gff ,_dee );};_ebg .Add_BMC ("\u0054\u0078");_ebg .Add_q ();_ ,_dee =_agb .applyRotation (_bgg ,_gff ,_dee ,_ebg );_ebg .Add_BT ();_dfb ,_bba ,_cea :=_agb .processDA (_gac .PdfField ,_agf ,_cgb ,_fca ,_ebg );if _cea !=nil {return nil ,_cea ;};_fcd :=_dfb .Font ;_gacf :=_bc .MakeName (_dfb .Name );_aefd :=_dfb .Size ;_afgb :=_aefd ==0;if _afgb &&_bba {_aefd =_dee *_agb .AutoFontSizeFraction ;};_gae :=_fcd .Encoder ();if _gae ==nil {_dc .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_gae =_dd .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _ba string ;if _gbaa ,_bag :=_bc .GetString (_gac .V );_bag {_ba =_gbaa .Decoded ();};_ebg .Add_Tf (*_gacf ,_aefd );var _ggf float64 ;for _ ,_bae :=range _ba {_dbg ,_afc :=_fcd .GetRuneMetrics (_bae );if !_afc {_dc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_bae );continue ;};_acd :=_dbg .Wy ;if int (_acd )<=0{_acd =_dbg .Wx ;};if _acd > _ggf {_ggf =_acd ;};};if int (_ggf )==0{_dc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");_ggf =1000;};_eec ,_cea :=_fcd .GetFontDescriptor ();if _cea !=nil {_dc .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _cag float64 ;if _eec !=nil {_cag ,_cea =_eec .GetCapHeight ();if _cea !=nil {_dc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_cea );};};if int (_cag )<=0{_dc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_cag =1000.0;};_agd :=_cag /1000.0*_aefd ;_gec :=0.0;_dcf :=1.0*_aefd *(_ggf /1000.0);{_cgge :=_dcf ;if _afgb &&_gec +_cgge > _dee {_aefd =0.95*(_dee -_gec );_agd =_cag /1000.0*_aefd ;};if _dee > _agd {_gec =(_dee -_agd )/2.0;};};_ebg .Add_Td (0,_gec );if _ddbf ,_ccf :=_bc .GetIntVal (_gac .Q );_ccf {switch _ddbf {case 2:if len (_ba )< _ddga {_cfg :=float64 (_ddga -len (_ba ))*_aeae ;_ebg .Add_Td (_cfg ,0);};};};for _efac ,_fbd :=range _ba {_cac :=2.0;_cbaa :=string (_fbd );if _gae !=nil {_adg ,_bbg :=_fcd .GetRuneMetrics (_fbd );if !_bbg {_dc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_fbd );continue ;};_cbaa =string (_gae .Encode (_cbaa ));_dbb :=_aefd *_adg .Wx /1000.0;_fee :=(_aeae -_dbb )/2;_cac =_fee ;};_ebg .Add_Td (_cac ,0);_ebg .Add_Tj (*_bc .MakeString (_cbaa ));if _efac !=len (_ba )-1{_ebg .Add_Td (_aeae -_cac ,0);};};_ebg .Add_ET ();_ebg .Add_Q ();_ebg .Add_EMC ();_dca :=_gc .NewXObjectForm ();_dca .Resources =_fca ;_dca .BBox =_bc .MakeArrayFromFloats ([]float64 {0,0,_fbba ,_cbf });_dca .SetContentStream (_ebg .Bytes (),_daa ());_bab :=_bc .MakeDict ();_bab .Set ("\u004e",_dca .ToPdfObject ());return _bab ,nil ;};func _gffg (_ggb *_gc .PdfField ,_aegd ,_cgec float64 ,_fgc string ,_bca AppearanceStyle ,_dea *_a .ContentStreamOperations ,_edc *_gc .PdfPageResources ,_fac *_bc .PdfObjectDictionary )(*_gc .XObjectForm ,error ){_cdad :=_gc .NewPdfPageResources ();_gbe ,_add :=_aegd ,_cgec ;_egd :=_a .NewContentCreator ();if _bca .BorderSize > 0{_bdgd (_egd ,_bca ,_aegd ,_cgec );};if _bca .DrawAlignmentReticle {_gega :=_bca ;_gega .BorderSize =0.2;_gea (_egd ,_gega ,_aegd ,_cgec );};_egd .Add_BMC ("\u0054\u0078");_egd .Add_q ();_egd .Add_BT ();_aegd ,_cgec =_bca .applyRotation (_fac ,_aegd ,_cgec ,_egd );_ddfe ,_ebef ,_cgff :=_bca .processDA (_ggb ,_dea ,_edc ,_cdad ,_egd );if _cgff !=nil {return nil ,_cgff ;};_eecc :=_ddfe .Font ;_eda :=_ddfe .Size ;_dfcf :=_bc .MakeName (_ddfe .Name );_efae :=_eda ==0;if _efae &&_ebef {_eda =_cgec *_bca .AutoFontSizeFraction ;};_ecca :=_eecc .Encoder ();if _ecca ==nil {_dc .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_ecca =_dd .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_fgc )==0{return nil ,nil ;};_abe :=2.0;_aac :=0.0;if _ecca !=nil {for _ ,_eee :=range _fgc {_egc ,_cbad :=_eecc .GetRuneMetrics (_eee );if !_cbad {_dc .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_eee );continue ;};_aac +=_egc .Wx ;};_fgc =string (_ecca .Encode (_fgc ));};if _eda ==0||_efae &&_aac > 0&&_abe +_aac *_eda /1000.0> _aegd {_eda =0.95*1000.0*(_aegd -_abe )/_aac ;};_ddgg :=1.0*_eda ;_cec :=2.0;{_dbgd :=_ddgg ;if _efae &&_cec +_dbgd > _cgec {_eda =0.95*(_cgec -_cec );_ddgg =1.0*_eda ;_dbgd =_ddgg ;};if _cgec > _dbgd {_cec =(_cgec -_dbgd )/2.0;_cec +=1.50;};};_egd .Add_Tf (*_dfcf ,_eda );_egd .Add_Td (_abe ,_cec );_egd .Add_Tj (*_bc .MakeString (_fgc ));_egd .Add_ET ();_egd .Add_Q ();_egd .Add_EMC ();_caa :=_gc .NewXObjectForm ();_caa .Resources =_cdad ;_caa .BBox =_bc .MakeArrayFromFloats ([]float64 {0,0,_gbe ,_add });_caa .SetContentStream (_egd .Bytes (),_daa ());return _caa ,nil ;};func _ecce (_eedg LineAnnotationDef ,_cfaf string )([]byte ,*_gc .PdfRectangle ,*_gc .PdfRectangle ,error ){_eaf :=_ed .Line {X1 :0,Y1 :0,X2 :_eedg .X2 -_eedg .X1 ,Y2 :_eedg .Y2 -_eedg .Y1 ,LineColor :_eedg .LineColor ,Opacity :_eedg .Opacity ,LineWidth :_eedg .LineWidth ,LineEndingStyle1 :_eedg .LineEndingStyle1 ,LineEndingStyle2 :_eedg .LineEndingStyle2 };_cacd ,_ffg ,_ddce :=_eaf .Draw (_cfaf );if _ddce !=nil {return nil ,nil ,nil ,_ddce ;};_adggg :=&_gc .PdfRectangle {};_adggg .Llx =_eedg .X1 +_ffg .Llx ;_adggg .Lly =_eedg .Y1 +_ffg .Lly ;_adggg .Urx =_eedg .X1 +_ffg .Urx ;_adggg .Ury =_eedg .Y1 +_ffg .Ury ;return _cacd ,_ffg ,_adggg ,nil ;};func _ebf (_facg _cf .Image ,_babc string ,_deaf *SignatureFieldOpts ,_fdb []float64 ,_adgf *_a .ContentCreator )(*_bc .PdfObjectName ,*_gc .XObjectImage ,error ){_gfad ,_dcag :=_gc .DefaultImageHandler {}.NewImageFromGoImage (_facg );if _dcag !=nil {return nil ,nil ,_dcag ;};_bfbf ,_dcag :=_gc .NewXObjectImageFromImage (_gfad ,nil ,_deaf .Encoder );if _dcag !=nil {return nil ,nil ,_dcag ;};_aabg ,_dbbc :=float64 (*_bfbf .Width ),float64 (*_bfbf .Height );_aga :=_fdb [2]-_fdb [0];_fgcd :=_fdb [3]-_fdb [1];if _deaf .AutoSize {_fdbf :=_b .Min (_aga /_aabg ,_fgcd /_dbbc );_aabg *=_fdbf ;_dbbc *=_fdbf ;_fdb [0]=_fdb [0]+(_aga /2)-(_aabg /2);_fdb [1]=_fdb [1]+(_fgcd /2)-(_dbbc /2);};var _ede *_bc .PdfObjectName ;if _dda ,_gcff :=_bc .GetName (_bfbf .Name );_gcff {_ede =_dda ;}else {_ede =_bc .MakeName (_babc );};if _adgf !=nil {_adgf .Add_q ().Translate (_fdb [0],_fdb [1]).Scale (_aabg ,_dbbc ).Add_Do (*_ede ).Add_Q ();}else {return nil ,nil ,_e .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");};return _ede ,_bfbf ,nil ;};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_bgc FieldAppearance )GenerateAppearanceDict (form *_gc .PdfAcroForm ,field *_gc .PdfField ,wa *_gc .PdfAnnotationWidget )(*_bc .PdfObjectDictionary ,error ){_dc .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );_ ,_fdd :=field .GetContext ().(*_gc .PdfFieldText );_ffe ,_fec :=_bc .GetDict (wa .AP );if _fec &&_bgc .OnlyIfMissing &&(!_fdd ||!_bgc .RegenerateTextFields ){_dc .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");return _ffe ,nil ;};if form .DR ==nil {form .DR =_gc .NewPdfPageResources ();};switch _efe :=field .GetContext ().(type ){case *_gc .PdfFieldText :_efd :=_efe ;switch {case _efd .Flags ().Has (_gc .FieldFlagPassword ):return nil ,nil ;case _efd .Flags ().Has (_gc .FieldFlagFileSelect ):return nil ,nil ;case _efd .Flags ().Has (_gc .FieldFlagComb ):if _efd .MaxLen !=nil {_cfd ,_gd :=_ebe (wa ,_efd ,form .DR ,_bgc .Style ());if _gd !=nil {return nil ,_gd ;};return _cfd ,nil ;};};_ad ,_fag :=_ca (wa ,_efd ,form .DR ,_bgc .Style ());if _fag !=nil {return nil ,_fag ;};return _ad ,nil ;case *_gc .PdfFieldButton :_af :=_efe ;if _af .IsCheckbox (){_fff ,_bcbc :=_dde (wa ,_af ,form .DR ,_bgc .Style ());if _bcbc !=nil {return nil ,_bcbc ;};return _fff ,nil ;};_dc .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_af .GetType ());case *_gc .PdfFieldChoice :_aea :=_efe ;switch {case _aea .Flags ().Has (_gc .FieldFlagCombo ):_bcbcc ,_gfd :=_fba (form ,wa ,_aea ,_bgc .Style ());if _gfd !=nil {return nil ,_gfd ;};return _bcbcc ,nil ;default:_dc .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_aea .Flags ().String ());};default:_dc .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_efe );};return nil ,nil ;};func _fbf (_bg CircleAnnotationDef ,_bec string )([]byte ,*_gc .PdfRectangle ,*_gc .PdfRectangle ,error ){_ae :=_ed .Circle {X :_bg .X ,Y :_bg .Y ,Width :_bg .Width ,Height :_bg .Height ,FillEnabled :_bg .FillEnabled ,FillColor :_bg .FillColor ,BorderEnabled :_bg .BorderEnabled ,BorderWidth :_bg .BorderWidth ,BorderColor :_bg .BorderColor ,Opacity :_bg .Opacity };_ddb ,_ff ,_aab :=_ae .Draw (_bec );if _aab !=nil {return nil ,nil ,nil ,_aab ;};_fga :=&_gc .PdfRectangle {};_fga .Llx =_bg .X +_ff .Llx ;_fga .Lly =_bg .Y +_ff .Lly ;_fga .Urx =_bg .X +_ff .Urx ;_fga .Ury =_bg .Y +_ff .Ury ;return _ddb ,_ff ,_fga ,nil ;};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_fda *AppearanceStyle ;};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_gc .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_gc .NewPdfColorDeviceGray (0),BorderColor :_gc .NewPdfColorDeviceGray (0),FillColor :_gc .NewPdfColorDeviceGray (1),Encoder :_bc .NewFlateEncoder (),ImagePosition :SignatureImageLeft };};func (_dcdd *AppearanceStyle )applyAppearanceCharacteristics (_ade *_bc .PdfObjectDictionary ,_dbc *_bc .PdfObjectDictionary ,_ced *_gc .PdfFont )error {if !_dcdd .AllowMK {return nil ;};if CA ,_gedb :=_bc .GetString (_ade .Get ("\u0043\u0041"));_gedb &&_ced !=nil {_faa :=CA .Bytes ();if len (_faa )!=0{_afgd :=[]rune (_ced .Encoder ().Decode (_faa ));if len (_afgd )==1{_dcdd .CheckmarkRune =_afgd [0];};};};if BC ,_caca :=_bc .GetArray (_ade .Get ("\u0042\u0043"));_caca {_gffd ,_dgc :=BC .ToFloat64Array ();if _dgc !=nil {return _dgc ;};switch len (_gffd ){case 1:_dcdd .BorderColor =_gc .NewPdfColorDeviceGray (_gffd [0]);case 3:_dcdd .BorderColor =_gc .NewPdfColorDeviceRGB (_gffd [0],_gffd [1],_gffd [2]);case 4:_dcdd .BorderColor =_gc .NewPdfColorDeviceCMYK (_gffd [0],_gffd [1],_gffd [2],_gffd [3]);default:_dc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_gffd ));};if _dbc !=nil {if _gafc ,_abad :=_bc .GetNumberAsFloat (_dbc .Get ("\u0057"));_abad ==nil {_dcdd .BorderSize =_gafc ;};};};if BG ,_fcbf :=_bc .GetArray (_ade .Get ("\u0042\u0047"));_fcbf {_gge ,_geac :=BG .ToFloat64Array ();if _geac !=nil {return _geac ;};switch len (_gge ){case 1:_dcdd .FillColor =_gc .NewPdfColorDeviceGray (_gge [0]);case 3:_dcdd .FillColor =_gc .NewPdfColorDeviceRGB (_gge [0],_gge [1],_gge [2]);case 4:_dcdd .FillColor =_gc .NewPdfColorDeviceCMYK (_gge [0],_gge [1],_gge [2],_gge [3]);default:_dc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_gge ));};};return nil ;};func _daa ()_bc .StreamEncoder {return _bc .NewFlateEncoder ()};func _fecge (_fcaa []*SignatureLine ,_deg *SignatureFieldOpts )(*_bc .PdfObjectDictionary ,error ){if _deg ==nil {_deg =NewSignatureFieldOpts ();};var _gceg error ;var _caag *_bc .PdfObjectName ;_bdfa :=_deg .Font ;if _bdfa !=nil {_bea ,_ :=_bdfa .GetFontDescriptor ();if _bea !=nil {if _egce ,_gbec :=_bea .FontName .(*_bc .PdfObjectName );_gbec {_caag =_egce ;};};if _caag ==nil {_caag =_bc .MakeName ("\u0046\u006f\u006et\u0031");};}else {if _bdfa ,_gceg =_gc .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_gceg !=nil {return nil ,_gceg ;};_caag =_bc .MakeName ("\u0048\u0065\u006c\u0076");};_aaf :=_deg .FontSize ;if _aaf <=0{_aaf =10;};if _deg .LineHeight <=0{_deg .LineHeight =1;};_cee :=_deg .LineHeight *_aaf ;_abadg ,_adgg :=_bdfa .GetRuneMetrics (' ');if !_adgg {return nil ,_e .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");};_fce :=_abadg .Wx ;var _fbcf float64 ;var _fcdb []string ;for _ ,_gag :=range _fcaa {if _gag .Text ==""{continue ;};_egg :=_gag .Text ;if _gag .Desc !=""{_egg =_gag .Desc +"\u003a\u0020"+_egg ;};_fcdb =append (_fcdb ,_egg );var _bbf float64 ;for _ ,_bedd :=range _egg {_bad ,_agge :=_bdfa .GetRuneMetrics (_bedd );if !_agge {continue ;};_bbf +=_bad .Wx ;};if _bbf > _fbcf {_fbcf =_bbf ;};};_fbcf =_fbcf *_aaf /1000.0;_eadf :=float64 (len (_fcdb ))*_cee ;_gbg :=_deg .Image !=nil ;_bdde :=_deg .Rect ;if _bdde ==nil {_bdde =[]float64 {0,0,_fbcf ,_eadf };if _gbg {_bdde [2]=_fbcf *2;_bdde [3]=_eadf *2;};_deg .Rect =_bdde ;};_bddd :=_bdde [2]-_bdde [0];_ebgd :=_bdde [3]-_bdde [1];_dbbb ,_ace :=_bdde ,_bdde ;var _eaac ,_fcg float64 ;if _gbg &&len (_fcdb )> 0{if _deg .ImagePosition <=SignatureImageRight {_gdcd :=[]float64 {_bdde [0],_bdde [1],_bdde [0]+(_bddd /2),_bdde [3]};_bfe :=[]float64 {_bdde [0]+(_bddd /2),_bdde [1],_bdde [2],_bdde [3]};if _deg .ImagePosition ==SignatureImageLeft {_dbbb ,_ace =_gdcd ,_bfe ;}else {_dbbb ,_ace =_bfe ,_gdcd ;};}else {_fcf :=[]float64 {_bdde [0],_bdde [1],_bdde [2],_bdde [1]+(_ebgd /2)};_efccd :=[]float64 {_bdde [0],_bdde [1]+(_ebgd /2),_bdde [2],_bdde [3]};if _deg .ImagePosition ==SignatureImageTop {_dbbb ,_ace =_efccd ,_fcf ;}else {_dbbb ,_ace =_fcf ,_efccd ;};};};_eaac =_ace [2]-_ace [0];_fcg =_ace [3]-_ace [1];var _gbd float64 ;if _deg .AutoSize {if _fbcf > _eaac ||_eadf > _fcg {_fbed :=_b .Min (_eaac /_fbcf ,_fcg /_eadf );_aaf *=_fbed ;};_cee =_deg .LineHeight *_aaf ;_gbd +=(_fcg -float64 (len (_fcdb ))*_cee )/2;};_adb :=_a .NewContentCreator ();_geec :=_gc .NewPdfPageResources ();_geec .SetFontByName (*_caag ,_bdfa .ToPdfObject ());if _deg .BorderSize <=0{_deg .BorderSize =0;_deg .BorderColor =_gc .NewPdfColorDeviceGray (1);};if _deg .BorderColor ==nil {_deg .BorderColor =_gc .NewPdfColorDeviceGray (1);};if _deg .FillColor ==nil {_deg .FillColor =_gc .NewPdfColorDeviceGray (1);};_adb .Add_q ().SetNonStrokingColor (_deg .FillColor ).SetStrokingColor (_deg .BorderColor ).Add_w (_deg .BorderSize ).Add_re (_bdde [0],_bdde [1],_bddd ,_ebgd ).Add_B ().Add_Q ();if _deg .WatermarkImage !=nil {_cgeg :=[]float64 {_bdde [0],_bdde [1],_bdde [2],_bdde [3]};_gcea ,_ecge ,_fed :=_ebf (_deg .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_deg ,_cgeg ,_adb );if _fed !=nil {return nil ,_fed ;};_geec .SetXObjectImageByName (*_gcea ,_ecge );};_adb .Add_q ();_adb .Translate (_ace [0],_ace [3]-_cee -_gbd );_adb .Add_BT ();_gegd :=_bdfa .Encoder ();for _ ,_dbd :=range _fcdb {var _acg []byte ;for _ ,_efea :=range _dbd {if _c .IsSpace (_efea ){if len (_acg )> 0{_adb .SetNonStrokingColor (_deg .TextColor ).Add_Tf (*_caag ,_aaf ).Add_TL (_cee ).Add_TJ ([]_bc .PdfObject {_bc .MakeStringFromBytes (_acg )}...);_acg =nil ;};_adb .Add_Tf (*_caag ,_aaf ).Add_TL (_cee ).Add_TJ ([]_bc .PdfObject {_bc .MakeFloat (-_fce )}...);}else {_acg =append (_acg ,_gegd .Encode (string (_efea ))...);};};if len (_acg )> 0{_adb .SetNonStrokingColor (_deg .TextColor ).Add_Tf (*_caag ,_aaf ).Add_TL (_cee ).Add_TJ ([]_bc .PdfObject {_bc .MakeStringFromBytes (_acg )}...);};_adb .Add_Td (0,-_cee );};_adb .Add_ET ();_adb .Add_Q ();if _gbg {_ccbd ,_bagaa ,_abef :=_ebf (_deg .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_deg ,_dbbb ,_adb );if _abef !=nil {return nil ,_abef ;};_geec .SetXObjectImageByName (*_ccbd ,_bagaa );};_ggba :=_gc .NewXObjectForm ();_ggba .Resources =_geec ;_ggba .BBox =_bc .MakeArrayFromFloats (_bdde );_ggba .SetContentStream (_adb .Bytes (),_daa ());_dcc :=_bc .MakeDict ();_dcc .Set ("\u004e",_ggba .ToPdfObject ());return _dcc ,nil ;};func (_dag *AppearanceStyle )processDA (_adad *_gc .PdfField ,_dggb *_a .ContentStreamOperations ,_ceg ,_eedd *_gc .PdfPageResources ,_ffbd *_a .ContentCreator )(*AppearanceFont ,bool ,error ){var _afdag *AppearanceFont ;var _aed bool ;if _dag .Fonts !=nil {if _dag .Fonts .Fallback !=nil {_afdag =_dag .Fonts .Fallback ;};if _caff :=_dag .Fonts .FieldFallbacks ;_caff !=nil {if _afb ,_feed :=_caff [_adad .PartialName ()];_feed {_afdag =_afb ;}else if _fdac ,_aca :=_adad .FullName ();_aca ==nil {if _abc ,_cdf :=_caff [_fdac ];_cdf {_afdag =_abc ;};};};_aed =_dag .Fonts .ForceReplace ;};var _caffb string ;var _deab float64 ;var _geae bool ;if _dggb !=nil {for _ ,_ffd :=range *_dggb {if _ffd .Operand =="\u0054\u0066"&&len (_ffd .Params )==2{if _aff ,_dab :=_bc .GetNameVal (_ffd .Params [0]);_dab {_caffb =_aff ;};if _ggef ,_cggc :=_bc .GetNumberAsFloat (_ffd .Params [1]);_cggc ==nil {_deab =_ggef ;};_geae =true ;continue ;};_ffbd .AddOperand (*_ffd );};};var _bcgc *AppearanceFont ;var _befd _bc .PdfObject ;if _aed &&_afdag !=nil {_bcgc =_afdag ;}else {if _ceg !=nil &&_caffb !=""{if _dad ,_aggb :=_ceg .GetFontByName (*_bc .MakeName (_caffb ));_aggb {if _adgc ,_dfcd :=_gc .NewPdfFontFromPdfObject (_dad );_dfcd ==nil {_befd =_dad ;_bcgc =&AppearanceFont {Name :_caffb ,Font :_adgc ,Size :_deab };}else {_dc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_dfcd );};};};if _bcgc ==nil &&_afdag !=nil {_bcgc =_afdag ;};if _bcgc ==nil {_bdf ,_edf :=_gc .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _edf !=nil {return nil ,false ,_edf ;};_bcgc =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_bdf ,Size :_deab };};};_caffc :=*_bc .MakeName (_bcgc .Name );if _befd ==nil {_befd =_bcgc .Font .ToPdfObject ();};if _ceg !=nil &&!_ceg .HasFontByName (_caffc ){_ceg .SetFontByName (_caffc ,_befd );};if _eedd !=nil &&!_eedd .HasFontByName (_caffc ){_eedd .SetFontByName (_caffc ,_befd );};return _bcgc ,_geae ,nil ;};func _dde (_efaa *_gc .PdfAnnotationWidget ,_cdc *_gc .PdfFieldButton ,_dfc *_gc .PdfPageResources ,_fdf AppearanceStyle )(*_bc .PdfObjectDictionary ,error ){_aec ,_ggc :=_bc .GetArray (_efaa .Rect );if !_ggc {return nil ,_e .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_bfg ,_dfff :=_gc .NewPdfRectangle (*_aec );if _dfff !=nil {return nil ,_dfff ;};_bced ,_cda :=_bfg .Width (),_bfg .Height ();_ec ,_afd :=_bced ,_cda ;_dc .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_efaa .BS );_cadc ,_dfff :=_gc .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _dfff !=nil {return nil ,_dfff ;};_efde ,_bbab :=_bc .GetDict (_efaa .MK );if _bbab {_ecg ,_ :=_bc .GetDict (_efaa .BS );_ffed :=_fdf .applyAppearanceCharacteristics (_efde ,_ecg ,_cadc );if _ffed !=nil {return nil ,_ffed ;};};_fdda :=_gc .NewXObjectForm ();{_agfa :=_a .NewContentCreator ();if _fdf .BorderSize > 0{_bdgd (_agfa ,_fdf ,_bced ,_cda );};if _fdf .DrawAlignmentReticle {_cff :=_fdf ;_cff .BorderSize =0.2;_gea (_agfa ,_cff ,_bced ,_cda );};_bced ,_cda =_fdf .applyRotation (_efde ,_bced ,_cda ,_agfa );_bda :=_fdf .AutoFontSizeFraction *_cda ;_gdf ,_cfgb :=_cadc .GetRuneMetrics (_fdf .CheckmarkRune );if !_cfgb {return nil ,_e .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_gef :=_cadc .Encoder ();_geg :=_gef .Encode (string (_fdf .CheckmarkRune ));_abb :=_gdf .Wx *_bda /1000.0;_gace :=705.0;_eaa :=_gace /1000.0*_bda ;_cfgc :=2.0;_eea :=1.0;if _abb < _bced {_cfgc =(_bced -_abb )/2.0;};if _eaa < _cda {_eea =(_cda -_eaa )/2.0;};_agfa .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_bda ).Add_Td (_cfgc ,_eea ).Add_Tj (*_bc .MakeStringFromBytes (_geg )).Add_ET ().Add_Q ();_fdda .Resources =_gc .NewPdfPageResources ();_fdda .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_cadc .ToPdfObject ());_fdda .BBox =_bc .MakeArrayFromFloats ([]float64 {0,0,_ec ,_afd });_fdda .SetContentStream (_agfa .Bytes (),_daa ());};_dba :=_gc .NewXObjectForm ();{_dgef :=_a .NewContentCreator ();if _fdf .BorderSize > 0{_bdgd (_dgef ,_fdf ,_bced ,_cda );};_dba .BBox =_bc .MakeArrayFromFloats ([]float64 {0,0,_ec ,_afd });_dba .SetContentStream (_dgef .Bytes (),_daa ());};_cgef :=_bc .MakeDict ();_cgef .Set ("\u004f\u0066\u0066",_dba .ToPdfObject ());_cgef .Set ("\u0059\u0065\u0073",_fdda .ToPdfObject ());_ecc :=_bc .MakeDict ();_ecc .Set ("\u004e",_cgef );return _ecc ,nil ;};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_gc .PdfAnnotation ,error ){_faf :=_gc .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_abf ,_bbad ,_bgef :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();_faf .C =_bc .MakeArrayFromFloats ([]float64 {_abf ,_bbad ,_bgef });_fcae :=_gc .NewBorderStyle ();_fcae .SetBorderWidth (rectDef .BorderWidth );_faf .BS =_fcae .ToPdfObject ();};if rectDef .FillEnabled {_dfba ,_aefeb ,_eac :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();_faf .IC =_bc .MakeArrayFromFloats ([]float64 {_dfba ,_aefeb ,_eac });}else {_faf .IC =_bc .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_faf .CA =_bc .MakeFloat (rectDef .Opacity );};_cdae ,_ggfg ,_agfe :=_dcad (rectDef );if _agfe !=nil {return nil ,_agfe ;};_faf .AP =_cdae ;_faf .Rect =_bc .MakeArrayFromFloats ([]float64 {_ggfg .Llx ,_ggfg .Lly ,_ggfg .Urx ,_ggfg .Ury });return _faf .PdfAnnotation ,nil ;};func _fd (_cg CircleAnnotationDef )(*_bc .PdfObjectDictionary ,*_gc .PdfRectangle ,error ){_dge :=_gc .NewXObjectForm ();_dge .Resources =_gc .NewPdfPageResources ();_fg :="";if _cg .Opacity < 1.0{_bcb :=_bc .MakeDict ();_bcb .Set ("\u0063\u0061",_bc .MakeFloat (_cg .Opacity ));_bcb .Set ("\u0043\u0041",_bc .MakeFloat (_cg .Opacity ));_fb :=_dge .Resources .AddExtGState ("\u0067\u0073\u0031",_bcb );if _fb !=nil {_dc .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_fb ;};_fg ="\u0067\u0073\u0031";};_ab ,_aa ,_cgc ,_dfe :=_fbf (_cg ,_fg );if _dfe !=nil {return nil ,nil ,_dfe ;};_dfe =_dge .SetContentStream (_ab ,nil );if _dfe !=nil {return nil ,nil ,_dfe ;};_dge .BBox =_aa .ToPdfObject ();_ea :=_bc .MakeDict ();_ea .Set ("\u004e",_dge .ToPdfObject ());return _ea ,_cgc ,nil ;};const (SignatureImageLeft SignatureImagePosition =iota ;SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_gc .PdfAnnotation ,error ){_bac :=_gc .NewPdfAnnotationLine ();_bac .L =_bc .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_dcaf :=_bc .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle1 ==_ed .LineEndingStyleArrow {_dcaf =_bc .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_ggbe :=_bc .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_ed .LineEndingStyleArrow {_ggbe =_bc .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_bac .LE =_bc .MakeArray (_dcaf ,_ggbe );if lineDef .Opacity < 1.0{_bac .CA =_bc .MakeFloat (lineDef .Opacity );};_abg ,_agfaf ,_deae :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_bac .IC =_bc .MakeArrayFromFloats ([]float64 {_abg ,_agfaf ,_deae });_bac .C =_bc .MakeArrayFromFloats ([]float64 {_abg ,_agfaf ,_deae });_bfbd :=_gc .NewBorderStyle ();_bfbd .SetBorderWidth (lineDef .LineWidth );_bac .BS =_bfbd .ToPdfObject ();_ecd ,_caaf ,_efgb :=_fgg (lineDef );if _efgb !=nil {return nil ,_efgb ;};_bac .AP =_ecd ;_bac .Rect =_bc .MakeArrayFromFloats ([]float64 {_caaf .Llx ,_caaf .Lly ,_caaf .Urx ,_caaf .Ury });return _bac .PdfAnnotation ,nil ;};func _afda (_afag *_gc .PdfField )string {if _afag ==nil {return "";};_cbac ,_fffg :=_afag .GetContext ().(*_gc .PdfFieldText );if !_fffg {return _afda (_afag .Parent );};if _cbac .DA !=nil {return _cbac .DA .Str ();};return _afda (_cbac .Parent );};func _bdgd (_gdd *_a .ContentCreator ,_ffb AppearanceStyle ,_gdfg ,_defb float64 ){_gdd .Add_q ().Add_re (0,0,_gdfg ,_defb ).Add_w (_ffb .BorderSize ).SetStrokingColor (_ffb .BorderColor ).SetNonStrokingColor (_ffb .FillColor ).Add_B ().Add_Q ();};

// SetStyle applies appearance `style` to `fa`.
func (_feg *FieldAppearance )SetStyle (style AppearanceStyle ){_feg ._fda =&style };

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_gc .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _gc .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _gc .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _gc .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _cf .Image ;

// Image represents the image used for the signature appearance.
Image _cf .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _bc .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};func (_ccb *AppearanceStyle )applyRotation (_bgd *_bc .PdfObjectDictionary ,_bcc ,_agg float64 ,_baa *_a .ContentCreator )(float64 ,float64 ){if !_ccb .AllowMK {return _bcc ,_agg ;};if _bgd ==nil {return _bcc ,_agg ;};_bge ,_ :=_bc .GetNumberAsFloat (_bgd .Get ("\u0052"));if _bge ==0{return _bcc ,_agg ;};_eeca :=-_bge ;_bfgg :=_ed .Path {Points :[]_ed .Point {_ed .NewPoint (0,0).Rotate (_eeca ),_ed .NewPoint (_bcc ,0).Rotate (_eeca ),_ed .NewPoint (0,_agg ).Rotate (_eeca ),_ed .NewPoint (_bcc ,_agg ).Rotate (_eeca )}}.GetBoundingBox ();_baa .RotateDeg (_bge );_baa .Translate (_bfgg .X ,_bfgg .Y );return _bfgg .Width ,_bfgg .Height ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_gc .PdfAnnotation ,error ){_fe :=_gc .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_bb ,_dg ,_df :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_fe .C =_bc .MakeArrayFromFloats ([]float64 {_bb ,_dg ,_df });_be :=_gc .NewBorderStyle ();_be .SetBorderWidth (circDef .BorderWidth );_fe .BS =_be .ToPdfObject ();};if circDef .FillEnabled {_ga ,_bf ,_gg :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_fe .IC =_bc .MakeArrayFromFloats ([]float64 {_ga ,_bf ,_gg });}else {_fe .IC =_bc .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_fe .CA =_bc .MakeFloat (circDef .Opacity );};_ef ,_dcd ,_gb :=_fd (circDef );if _gb !=nil {return nil ,_gb ;};_fe .AP =_ef ;_fe .Rect =_bc .MakeArrayFromFloats ([]float64 {_dcd .Llx ,_dcd .Lly ,_dcd .Urx ,_dcd .Ury });return _fe .PdfAnnotation ,nil ;};func _dcad (_aag RectangleAnnotationDef )(*_bc .PdfObjectDictionary ,*_gc .PdfRectangle ,error ){_ega :=_gc .NewXObjectForm ();_ega .Resources =_gc .NewPdfPageResources ();_cbcc :="";if _aag .Opacity < 1.0{_ffgd :=_bc .MakeDict ();_ffgd .Set ("\u0063\u0061",_bc .MakeFloat (_aag .Opacity ));_ffgd .Set ("\u0043\u0041",_bc .MakeFloat (_aag .Opacity ));_fgce :=_ega .Resources .AddExtGState ("\u0067\u0073\u0031",_ffgd );if _fgce !=nil {_dc .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_fgce ;};_cbcc ="\u0067\u0073\u0031";};_aee ,_gbde ,_fcaee ,_bgcc :=_adbe (_aag ,_cbcc );if _bgcc !=nil {return nil ,nil ,_bgcc ;};_bgcc =_ega .SetContentStream (_aee ,nil );if _bgcc !=nil {return nil ,nil ,_bgcc ;};_ega .BBox =_gbde .ToPdfObject ();_dbac :=_bc .MakeDict ();_dbac .Set ("\u004e",_ega .ToPdfObject ());return _dbac ,_fcaee ,nil ;};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};func _gea (_gce *_a .ContentCreator ,_cbc AppearanceStyle ,_bfd ,_fbg float64 ){_gce .Add_q ().Add_re (0,0,_bfd ,_fbg ).Add_re (0,_fbg /2,_bfd ,_fbg /2).Add_re (0,0,_bfd ,_fbg ).Add_re (_bfd /2,0,_bfd /2,_fbg ).Add_w (_cbc .BorderSize ).SetStrokingColor (_cbc .BorderColor ).SetNonStrokingColor (_cbc .FillColor ).Add_B ().Add_Q ();};

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_gc .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_gc .PdfColorDeviceRGB ;Opacity float64 ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_gc .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_gc .PdfFieldSignature ,error ){if signature ==nil {return nil ,_e .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_daef ,_faec :=_fecge (lines ,opts );if _faec !=nil {return nil ,_faec ;};_gfg :=_gc .NewPdfFieldSignature (signature );_gfg .Rect =_bc .MakeArrayFromFloats (opts .Rect );_gfg .AP =_daef ;return _gfg ,nil ;};func _ca (_caf *_gc .PdfAnnotationWidget ,_cgca *_gc .PdfFieldText ,_ddg *_gc .PdfPageResources ,_aef AppearanceStyle )(*_bc .PdfObjectDictionary ,error ){_bd :=_gc .NewPdfPageResources ();_ddc ,_dff :=_bc .GetArray (_caf .Rect );if !_dff {return nil ,_e .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ac ,_cd :=_gc .NewPdfRectangle (*_ddc );if _cd !=nil {return nil ,_cd ;};_bdb ,_gca :=_ac .Width (),_ac .Height ();_gdc ,_ddcb :=_bdb ,_gca ;_aefe ,_fbe :=_bc .GetDict (_caf .MK );if _fbe {_bee ,_ :=_bc .GetDict (_caf .BS );_aeg :=_aef .applyAppearanceCharacteristics (_aefe ,_bee ,nil );if _aeg !=nil {return nil ,_aeg ;};};_cfa ,_cd :=_a .NewContentStreamParser (_afda (_cgca .PdfField )).Parse ();if _cd !=nil {return nil ,_cd ;};_de :=_a .NewContentCreator ();if _aef .BorderSize > 0{_bdgd (_de ,_aef ,_bdb ,_gca );};if _aef .DrawAlignmentReticle {_ce :=_aef ;_ce .BorderSize =0.2;_gea (_de ,_ce ,_bdb ,_gca );};_de .Add_BMC ("\u0054\u0078");_de .Add_q ();_bdb ,_gca =_aef .applyRotation (_aefe ,_bdb ,_gca ,_de );_de .Add_BT ();_fgad ,_gfe ,_cd :=_aef .processDA (_cgca .PdfField ,_cfa ,_ddg ,_bd ,_de );if _cd !=nil {return nil ,_cd ;};_cc :=_fgad .Font ;_ge :=_fgad .Size ;_cge :=_bc .MakeName (_fgad .Name );_afa :=_ge ==0;if _afa &&_gfe {_ge =_gca *_aef .AutoFontSizeFraction ;};_cgg :=_cc .Encoder ();if _cgg ==nil {_dc .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_cgg =_dd .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_gcd ,_cd :=_cc .GetFontDescriptor ();if _cd !=nil {_dc .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _cad string ;if _ee ,_def :=_bc .GetString (_cgca .V );_def {_cad =_ee .Decoded ();};if len (_cad )==0{return nil ,nil ;};_fdg :=[]string {_cad };_ged :=false ;if _cgca .Flags ().Has (_gc .FieldFlagMultiline ){_ged =true ;_cad =_g .Replace (_cad ,"\u000d\u000a","\u000a",-1);_cad =_g .Replace (_cad ,"\u000d","\u000a",-1);_fdg =_g .Split (_cad ,"\u000a");};_afg :=0.0;_ddcf :=0;if _cgg !=nil {_efg :=len (_fdg );_gba :=0;for _gba < _efg {var _cdg float64 ;_fc :=-1;_bef :=0.0;for _ggg ,_cca :=range _fdg [_gba ]{if _cca ==' '{_fc =_ggg ;_cdg =_bef ;};_bed ,_aba :=_cc .GetRuneMetrics (_cca );if !_aba {_dc .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_cca );continue ;};_bef +=_bed .Wx ;if _ged &&!_afa &&_ge *_bef /1000.0> _bdb &&_fc > 0{_ffff :=_fdg [_gba ][_fc +1:];if _gba < len (_fdg )-1{_fdg =append (_fdg [:_gba +1],_fdg [_gba :]...);_fdg [_gba +1]=_ffff ;}else {_fdg =append (_fdg ,_ffff );};_efg ++;_fdg [_gba ]=_fdg [_gba ][0:_fc ];_bef =_cdg ;break ;};};if _bef > _afg {_afg =_bef ;};_fdg [_gba ]=string (_cgg .Encode (_fdg [_gba ]));if len (_fdg [_gba ])> 0{_ddcf ++;};_gba ++;};};_cba :=2.0;if _ge ==0||_afa &&_afg > 0&&_cba +_afg *_ge /1000.0> _bdb {_ge =0.95*1000.0*(_bdb -_cba )/_afg ;};_gdb :=_gf ;{if _fbc ,_bde :=_bc .GetIntVal (_cgca .Q );_bde {switch _fbc {case 0:_gdb =_gf ;case 1:_gdb =_becf ;case 2:_gdb =_bce ;default:_dc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_fbc );};};};_fbcg :=_aef .MultilineLineHeight ;_fea :=_ge ;if _ged &&_ddcf > 1{_fea =_fbcg *_ge ;};var _acb float64 ;if _gcd !=nil {_acb ,_cd =_gcd .GetCapHeight ();if _cd !=nil {_dc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_cd );};};if int (_acb )<=0{_dc .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_acb =1000;};_eb :=_acb /1000.0*_ge ;_eeb :=0.0;{_efc :=float64 (_ddcf )*_fea ;if _afa &&_eeb +_efc > _gca {_ge =0.95*(_gca -_eeb )/float64 (_ddcf );_fea =_ge ;if _ged &&_ddcf > 1{_fea =_fbcg *_ge ;};_eb =_acb /1000.0*_ge ;_efc =float64 (_ddcf )*_fea ;};if _gca > _efc {if _ged {if _aef .MultilineVAlignMiddle {_gee :=(_gca -_efc )/2.0;_acf :=_gee +_efc -_fea ;_eeb =_acf ;}else {_eeb =_gca -_fea ;_eeb -=_ge *0.5;};}else {_eeb =(_gca -_eb )/2.0;};};};_de .Add_Tf (*_cge ,_ge );_de .Add_Td (_cba ,_eeb );_ada :=_cba ;_gcb :=_cba ;for _gedg ,_ddf :=range _fdg {_bcg :=0.0;for _ ,_eeg :=range _ddf {_efcc ,_bdd :=_cc .GetRuneMetrics (_eeg );if !_bdd {continue ;};_bcg +=_efcc .Wx ;};_efa :=_bcg /1000.0*_ge ;_bfb :=_bdb -_efa ;var _fbb float64 ;switch _gdb {case _gf :_fbb =_ada ;case _becf :_fbb =_bfb /2;case _bce :_fbb =_bfb ;};_cba =_fbb -_gcb ;if _cba > 0.0{_de .Add_Td (_cba ,0);};_gcb =_fbb ;_de .Add_Tj (*_bc .MakeString (_ddf ));if _gedg < len (_fdg )-1{_de .Add_Td (0,-_fea *_fbcg );};};_de .Add_ET ();_de .Add_Q ();_de .Add_EMC ();_ag :=_gc .NewXObjectForm ();_ag .Resources =_bd ;_ag .BBox =_bc .MakeArrayFromFloats ([]float64 {0,0,_gdc ,_ddcb });_ag .SetContentStream (_de .Bytes (),_daa ());_cae :=_bc .MakeDict ();_cae .Set ("\u004e",_ag .ToPdfObject ());return _cae ,nil ;};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _gc .PdfColor ;FillColor _gc .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_fa FieldAppearance )Style ()AppearanceStyle {if _fa ._fda !=nil {return *_fa ._fda ;};return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_gc .NewPdfColorDeviceGray (0),FillColor :_gc .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true };};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_gc .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_gc .PdfFieldText ,error ){if page ==nil {return nil ,_e .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_e .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_e .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fbcfc :=_gc .NewPdfField ();_edfb :=&_gc .PdfFieldText {};_fbcfc .SetContext (_edfb );_edfb .PdfField =_fbcfc ;_edfb .T =_bc .MakeString (name );if opt .MaxLen > 0{_edfb .MaxLen =_bc .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_edfb .V =_bc .MakeString (opt .Value );};_bcedb :=_gc .NewPdfAnnotationWidget ();_bcedb .Rect =_bc .MakeArrayFromFloats (rect );_bcedb .P =page .ToPdfObject ();_bcedb .F =_bc .MakeInteger (4);_bcedb .Parent =_edfb .ToPdfObject ();_edfb .Annotations =append (_edfb .Annotations ,_bcedb );return _edfb ,nil ;};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_gc .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _ed .LineEndingStyle ;LineEndingStyle2 _ed .LineEndingStyle ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_cgcb FieldAppearance )WrapContentStream (page *_gc .PdfPage )error {_dfd ,_dddb :=page .GetAllContentStreams ();if _dddb !=nil {return _dddb ;};_agbf :=_a .NewContentStreamParser (_dfd );_baga ,_dddb :=_agbf .Parse ();if _dddb !=nil {return _dddb ;};_baga .WrapIfNeeded ();_bgee :=[]string {_baga .String ()};return page .SetContentStreams (_bgee ,_daa ());};type quadding int ;func _adbe (_ddef RectangleAnnotationDef ,_bfc string )([]byte ,*_gc .PdfRectangle ,*_gc .PdfRectangle ,error ){_dgfa :=_ed .Rectangle {X :0,Y :0,Width :_ddef .Width ,Height :_ddef .Height ,FillEnabled :_ddef .FillEnabled ,FillColor :_ddef .FillColor ,BorderEnabled :_ddef .BorderEnabled ,BorderWidth :2*_ddef .BorderWidth ,BorderColor :_ddef .BorderColor ,Opacity :_ddef .Opacity };_aedd ,_cbb ,_fae :=_dgfa .Draw (_bfc );if _fae !=nil {return nil ,nil ,nil ,_fae ;};_dbag :=&_gc .PdfRectangle {};_dbag .Llx =_ddef .X +_cbb .Llx ;_dbag .Lly =_ddef .Y +_cbb .Lly ;_dbag .Urx =_ddef .X +_cbb .Urx ;_dbag .Ury =_ddef .Y +_cbb .Ury ;return _aedd ,_cbb ,_dbag ,nil ;};

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_gc .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If size is 0, a default font size will be used.
// The default font size is calculated using the available annotation
// height and the AutoFontSizeFraction of the AppearanceStyle.
Size float64 ;};func _fgg (_agdd LineAnnotationDef )(*_bc .PdfObjectDictionary ,*_gc .PdfRectangle ,error ){_bcd :=_gc .NewXObjectForm ();_bcd .Resources =_gc .NewPdfPageResources ();_efgbg :="";if _agdd .Opacity < 1.0{_cbg :=_bc .MakeDict ();_cbg .Set ("\u0063\u0061",_bc .MakeFloat (_agdd .Opacity ));_gad :=_bcd .Resources .AddExtGState ("\u0067\u0073\u0031",_cbg );if _gad !=nil {_dc .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_gad ;};_efgbg ="\u0067\u0073\u0031";};_gfdd ,_gbb ,_dgba ,_caga :=_ecce (_agdd ,_efgbg );if _caga !=nil {return nil ,nil ,_caga ;};_caga =_bcd .SetContentStream (_gfdd ,nil );if _caga !=nil {return nil ,nil ,_caga ;};_bcd .BBox =_gbb .ToPdfObject ();_fbbe :=_bc .MakeDict ();_fbbe .Set ("\u004e",_bcd .ToPdfObject ());return _fbbe ,_dgba ,nil ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};const (_gf quadding =0;_becf quadding =1;_bce quadding =2;);

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};func _fba (_gga *_gc .PdfAcroForm ,_abd *_gc .PdfAnnotationWidget ,_ccd *_gc .PdfFieldChoice ,_ccg AppearanceStyle )(*_bc .PdfObjectDictionary ,error ){_fdde ,_gcf :=_bc .GetArray (_abd .Rect );if !_gcf {return nil ,_e .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_acfe ,_eg :=_gc .NewPdfRectangle (*_fdde );if _eg !=nil {return nil ,_eg ;};_aefc ,_gaf :=_acfe .Width (),_acfe .Height ();_dc .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_abd .BS );_fgd ,_eg :=_a .NewContentStreamParser (_afda (_ccd .PdfField )).Parse ();if _eg !=nil {return nil ,_eg ;};_ead ,_fdad :=_bc .GetDict (_abd .MK );if _fdad {_ggge ,_ :=_bc .GetDict (_abd .BS );_defd :=_ccg .applyAppearanceCharacteristics (_ead ,_ggge ,nil );if _defd !=nil {return nil ,_defd ;};};_fecg :=_bc .MakeDict ();for _ ,_fcb :=range _ccd .Opt .Elements (){if _gbc ,_cgf :=_bc .GetArray (_fcb );_cgf &&_gbc .Len ()==2{_fcb =_gbc .Get (1);};var _dgd string ;if _efaf ,_ebce :=_bc .GetString (_fcb );_ebce {_dgd =_efaf .Decoded ();}else if _dgg ,_fgb :=_bc .GetName (_fcb );_fgb {_dgd =_dgg .String ();}else {_dc .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_fcb );return nil ,_e .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_dgd )> 0{_dged ,_bdg :=_gffg (_ccd .PdfField ,_aefc ,_gaf ,_dgd ,_ccg ,_fgd ,_gga .DR ,_ead );if _bdg !=nil {return nil ,_bdg ;};_fecg .Set (*_bc .MakeName (_dgd ),_dged .ToPdfObject ());};};_eba :=_bc .MakeDict ();_eba .Set ("\u004e",_fecg );return _eba ,nil ;};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_gc .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_gc .PdfFieldChoice ,error ){if page ==nil {return nil ,_e .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_e .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_e .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cfc :=_gc .NewPdfField ();_ccbf :=&_gc .PdfFieldChoice {};_cfc .SetContext (_ccbf );_ccbf .PdfField =_cfc ;_ccbf .T =_bc .MakeString (name );_ccbf .Opt =_bc .MakeArray ();for _ ,_eef :=range opt .Choices {_ccbf .Opt .Append (_bc .MakeString (_eef ));};_ccbf .SetFlag (_gc .FieldFlagCombo );_ecf :=_gc .NewPdfAnnotationWidget ();_ecf .Rect =_bc .MakeArrayFromFloats (rect );_ecf .P =page .ToPdfObject ();_ecf .F =_bc .MakeInteger (4);_ecf .Parent =_ccbf .ToPdfObject ();_ccbf .Annotations =append (_ccbf .Annotations ,_ecf );return _ccbf ,nil ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_gc .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_gc .PdfFieldButton ,error ){if page ==nil {return nil ,_e .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_e .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_e .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_gcef ,_baaa :=_gc .NewStandard14Font (_gc .ZapfDingbatsName );if _baaa !=nil {return nil ,_baaa ;};_edg :=_gc .NewPdfField ();_cfgd :=&_gc .PdfFieldButton {};_edg .SetContext (_cfgd );_cfgd .PdfField =_edg ;_cfgd .T =_bc .MakeString (name );_cfgd .SetType (_gc .ButtonTypeCheckbox );_agac :="\u004f\u0066\u0066";if opt .Checked {_agac ="\u0059\u0065\u0073";};_cfgd .V =_bc .MakeName (_agac );_bggc :=_gc .NewPdfAnnotationWidget ();_bggc .Rect =_bc .MakeArrayFromFloats (rect );_bggc .P =page .ToPdfObject ();_bggc .F =_bc .MakeInteger (4);_bggc .Parent =_cfgd .ToPdfObject ();_bcgb :=rect [2]-rect [0];_edce :=rect [3]-rect [1];var _gde _f .Buffer ;_gde .WriteString ("\u0071\u000a");_gde .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_gde .WriteString ("\u0042\u0054\u000a");_gde .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_gde .WriteString ("\u0045\u0054\u000a");_gde .WriteString ("\u0051\u000a");_cbcd :=_a .NewContentCreator ();_cbcd .Add_q ();_cbcd .Add_rg (0,0,1);_cbcd .Add_BT ();_cbcd .Add_Tf (*_bc .MakeName ("\u005a\u0061\u0044\u0062"),12);_cbcd .Add_Td (0,0);_cbcd .Add_ET ();_cbcd .Add_Q ();_cga :=_gc .NewXObjectForm ();_cga .SetContentStream (_cbcd .Bytes (),_bc .NewRawEncoder ());_cga .BBox =_bc .MakeArrayFromFloats ([]float64 {0,0,_bcgb ,_edce });_cga .Resources =_gc .NewPdfPageResources ();_cga .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_gcef .ToPdfObject ());_cbcd =_a .NewContentCreator ();_cbcd .Add_q ();_cbcd .Add_re (0,0,_bcgb ,_edce );_cbcd .Add_W ().Add_n ();_cbcd .Add_rg (0,0,1);_cbcd .Translate (0,3.0);_cbcd .Add_BT ();_cbcd .Add_Tf (*_bc .MakeName ("\u005a\u0061\u0044\u0062"),12);_cbcd .Add_Td (0,0);_cbcd .Add_Tj (*_bc .MakeString ("\u0034"));_cbcd .Add_ET ();_cbcd .Add_Q ();_dddf :=_gc .NewXObjectForm ();_dddf .SetContentStream (_cbcd .Bytes (),_bc .NewRawEncoder ());_dddf .BBox =_bc .MakeArrayFromFloats ([]float64 {0,0,_bcgb ,_edce });_dddf .Resources =_gc .NewPdfPageResources ();_dddf .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_gcef .ToPdfObject ());_edfbe :=_bc .MakeDict ();_edfbe .Set ("\u004f\u0066\u0066",_cga .ToPdfObject ());_edfbe .Set ("\u0059\u0065\u0073",_dddf .ToPdfObject ());_eebd :=_bc .MakeDict ();_eebd .Set ("\u004e",_edfbe );_bggc .AP =_eebd ;_bggc .AS =_bc .MakeName (_agac );_cfgd .Annotations =append (_cfgd .Annotations ,_bggc );return _cfgd ,nil ;};

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;