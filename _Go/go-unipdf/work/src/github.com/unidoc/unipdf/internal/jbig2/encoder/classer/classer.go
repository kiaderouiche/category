//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_e "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_bb "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_ee "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_b "image";_a "math";);func (_fb *Classer )addPageComponents (_bbg *_bb .Bitmap ,_cg *_bb .Boxes ,_ggd *_bb .Bitmaps ,_bf int ,_fdgd Method )error {const _cf ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";if _bbg ==nil {return _ee .Error (_cf ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _cg ==nil ||_ggd ==nil ||len (*_cg )==0{_e .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_bbg );return nil ;};var _cad error ;switch _fdgd {case RankHaus :_cad =_fb .classifyRankHaus (_cg ,_ggd ,_bf );case Correlation :_cad =_fb .classifyCorrelation (_cg ,_ggd ,_bf );default:_e .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_fdgd );return _ee .Error (_cf ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _cad !=nil {return _ee .Wrap (_cad ,_cf ,"");};if _cad =_fb .getULCorners (_bbg ,_cg );_cad !=nil {return _ee .Wrap (_cad ,_cf ,"");};_eff :=len (*_cg );_fb .BaseIndex +=_eff ;if _cad =_fb .ComponentsNumber .Add (_eff );_cad !=nil {return _ee .Wrap (_cad ,_cf ,"");};return nil ;};const JbAddedPixels =6;func (_dgb *Classer )verifyMethod (_gc Method )error {if _gc !=RankHaus &&_gc !=Correlation {return _ee .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");};return nil ;};const (RankHaus Method =iota ;Correlation ;);type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _bb .Component ;Method Method ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func (_ecag *similarTemplatesFinder )Next ()int {var (_ade ,_bab ,_dbaef ,_fag int ;_fea bool ;_ffb *_bb .Bitmap ;_age error ;);for {if _ecag .Index >=25{return -1;};_bab =_ecag .Width +TwoByTwoWalk [2*_ecag .Index ];_ade =_ecag .Height +TwoByTwoWalk [2*_ecag .Index +1];if _ade < 1||_bab < 1{_ecag .Index ++;continue ;};if len (_ecag .CurrentNumbers )==0{_ecag .CurrentNumbers ,_fea =_ecag .Classer .TemplatesSize .GetSlice (uint64 (_bab )*uint64 (_ade ));if !_fea {_ecag .Index ++;continue ;};_ecag .N =0;};_dbaef =len (_ecag .CurrentNumbers );for ;_ecag .N < _dbaef ;_ecag .N ++{_fag =_ecag .CurrentNumbers [_ecag .N ];_ffb ,_age =_ecag .Classer .DilatedTemplates .GetBitmap (_fag );if _age !=nil {_e .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");return 0;};if _ffb .Width -2*JbAddedPixels ==_bab &&_ffb .Height -2*JbAddedPixels ==_ade {return _fag ;};};_ecag .Index ++;_ecag .CurrentNumbers =nil ;};};func DefaultSettings ()Settings {_abgc :=&Settings {};_abgc .SetDefault ();return *_abgc };const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func _edf (_cc *_bb .Bitmap ,_gfc ,_ggg ,_ge ,_caf int ,_bbd *_bb .Bitmap )(_cd _b .Point ,_aa error ){const _gea ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _cc ==nil {return _cd ,_ee .Error (_gea ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _bbd ==nil {return _cd ,_ee .Error (_gea ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_db ,_fef :=_bbd .Width ,_bbd .Height ;_fgd ,_bgf :=_gfc -_ge -JbAddedPixels ,_ggg -_caf -JbAddedPixels ;_e .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_gfc ,_ggg ,_db ,_fef ,_fgd ,_bgf );_ae ,_aa :=_bb .Rect (_fgd ,_bgf ,_db ,_fef );if _aa !=nil {return _cd ,_ee .Wrap (_aa ,_gea ,"");};_add ,_ ,_aa :=_cc .ClipRectangle (_ae );if _aa !=nil {_e .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_ae );return _cd ,_ee .Wrap (_aa ,_gea ,"");};_gee :=_bb .New (_add .Width ,_add .Height );_dba :=_a .MaxInt32 ;var _aab ,_dgbd ,_ccd ,_fc ,_geae int ;for _aab =-1;_aab <=1;_aab ++{for _dgbd =-1;_dgbd <=1;_dgbd ++{if _ ,_aa =_bb .Copy (_gee ,_add );_aa !=nil {return _cd ,_ee .Wrap (_aa ,_gea ,"");};if _aa =_gee .RasterOperation (_dgbd ,_aab ,_db ,_fef ,_bb .PixSrcXorDst ,_bbd ,0,0);_aa !=nil {return _cd ,_ee .Wrap (_aa ,_gea ,"");};_ccd =_gee .CountPixels ();if _ccd < _dba {_fc =_dgbd ;_geae =_aab ;_dba =_ccd ;};};};_cd .X =_fc ;_cd .Y =_geae ;return _cd ,nil ;};func (_eg *Classer )getULCorners (_gdf *_bb .Bitmap ,_eec *_bb .Boxes )error {const _df ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _gdf ==nil {return _ee .Error (_df ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _eec ==nil {return _ee .Error (_df ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _eg .PtaUL ==nil {_eg .PtaUL =&_bb .Points {};};_egg :=len (*_eec );var (_ec ,_bc ,_ag ,_gb int ;_adf ,_ea ,_eb ,_dfg float32 ;_dgg error ;_ba *_b .Rectangle ;_gff *_bb .Bitmap ;_ecb _b .Point ;);for _af :=0;_af < _egg ;_af ++{_ec =_eg .BaseIndex +_af ;if _adf ,_ea ,_dgg =_eg .CentroidPoints .GetGeometry (_ec );_dgg !=nil {return _ee .Wrap (_dgg ,_df ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _bc ,_dgg =_eg .ClassIDs .Get (_ec );_dgg !=nil {return _ee .Wrap (_dgg ,_df ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _eb ,_dfg ,_dgg =_eg .CentroidPointsTemplates .GetGeometry (_bc );_dgg !=nil {return _ee .Wrap (_dgg ,_df ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_bbbd :=_eb -_adf ;_ff :=_dfg -_ea ;if _bbbd >=0{_ag =int (_bbbd +0.5);}else {_ag =int (_bbbd -0.5);};if _ff >=0{_gb =int (_ff +0.5);}else {_gb =int (_ff -0.5);};if _ba ,_dgg =_eec .Get (_af );_dgg !=nil {return _ee .Wrap (_dgg ,_df ,"");};_fe ,_bgg :=_ba .Min .X ,_ba .Min .Y ;_gff ,_dgg =_eg .UndilatedTemplates .GetBitmap (_bc );if _dgg !=nil {return _ee .Wrap (_dgg ,_df ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");};_ecb ,_dgg =_edf (_gdf ,_fe ,_bgg ,_ag ,_gb ,_gff );if _dgg !=nil {return _ee .Wrap (_dgg ,_df ,"");};_eg .PtaUL .AddPoint (float32 (_fe -_ag +_ecb .X ),float32 (_bgg -_gb +_ecb .Y ));};return nil ;};func (_gcc *Classer )classifyRankHouseNonOne (_cgcf *_bb .Boxes ,_abg ,_gad ,_fga *_bb .Bitmaps ,_gcbf *_bb .Points ,_ffe *_d .NumSlice ,_cff int )(_dagd error ){const _bad ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_ggfe ,_ebfc ,_bgfd ,_agg float32 ;_aee ,_cag ,_fee int ;_ced ,_cdbb ,_bfd ,_bcb ,_afa *_bb .Bitmap ;_beb ,_agdd bool ;);_ecde :=_bb .MakePixelSumTab8 ();for _eda :=0;_eda < len (_abg .Values );_eda ++{if _cdbb ,_dagd =_gad .GetBitmap (_eda );_dagd !=nil {return _ee .Wrap (_dagd ,_bad ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _aee ,_dagd =_ffe .GetInt (_eda );_dagd !=nil {_e .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_eda ,_dagd );};if _bfd ,_dagd =_fga .GetBitmap (_eda );_dagd !=nil {return _ee .Wrap (_dagd ,_bad ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _ggfe ,_ebfc ,_dagd =_gcbf .GetGeometry (_eda );_dagd !=nil {return _ee .Wrapf (_dagd ,_bad ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");};_gfbf :=len (_gcc .UndilatedTemplates .Values );_beb =false ;_cce :=_ead (_gcc ,_cdbb );for _fee =_cce .Next ();_fee > -1;{if _bcb ,_dagd =_gcc .UndilatedTemplates .GetBitmap (_fee );_dagd !=nil {return _ee .Wrap (_dagd ,_bad ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _cag ,_dagd =_gcc .FgTemplates .GetInt (_fee );_dagd !=nil {_e .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fee ,_dagd );};if _afa ,_dagd =_gcc .DilatedTemplates .GetBitmap (_fee );_dagd !=nil {return _ee .Wrap (_dagd ,_bad ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _bgfd ,_agg ,_dagd =_gcc .CentroidPointsTemplates .GetGeometry (_fee );_dagd !=nil {return _ee .Wrap (_dagd ,_bad ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_agdd ,_dagd =_bb .RankHausTest (_cdbb ,_bfd ,_bcb ,_afa ,_ggfe -_bgfd ,_ebfc -_agg ,MaxDiffWidth ,MaxDiffHeight ,_aee ,_cag ,float32 (_gcc .Settings .RankHaus ),_ecde );if _dagd !=nil {return _ee .Wrap (_dagd ,_bad ,"");};if _agdd {_beb =true ;if _dagd =_gcc .ClassIDs .Add (_fee );_dagd !=nil {return _ee .Wrap (_dagd ,_bad ,"");};if _dagd =_gcc .ComponentPageNumbers .Add (_cff );_dagd !=nil {return _ee .Wrap (_dagd ,_bad ,"");};if _gcc .Settings .KeepClassInstances {_dgdb ,_afg :=_gcc .ClassInstances .GetBitmaps (_fee );if _afg !=nil {return _ee .Wrap (_afg ,_bad ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _ced ,_afg =_abg .GetBitmap (_eda );_afg !=nil {return _ee .Wrap (_afg ,_bad ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_dgdb .Values =append (_dgdb .Values ,_ced );_dae ,_afg :=_cgcf .Get (_eda );if _afg !=nil {return _ee .Wrap (_afg ,_bad ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_dgdb .Boxes =append (_dgdb .Boxes ,_dae );};break ;};};if !_beb {if _dagd =_gcc .ClassIDs .Add (_gfbf );_dagd !=nil {return _ee .Wrap (_dagd ,_bad ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _dagd =_gcc .ComponentPageNumbers .Add (_cff );_dagd !=nil {return _ee .Wrap (_dagd ,_bad ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gbg :=&_bb .Bitmaps {};_ced =_abg .Values [_eda ];_gbg .AddBitmap (_ced );_cbf ,_abb :=_ced .Width ,_ced .Height ;_gcc .TemplatesSize .Add (uint64 (_cbf )*uint64 (_abb ),_gfbf );_gac ,_bbef :=_cgcf .Get (_eda );if _bbef !=nil {return _ee .Wrap (_bbef ,_bad ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gbg .AddBox (_gac );_gcc .ClassInstances .AddBitmaps (_gbg );_gcc .CentroidPointsTemplates .AddPoint (_ggfe ,_ebfc );_gcc .UndilatedTemplates .AddBitmap (_cdbb );_gcc .DilatedTemplates .AddBitmap (_bfd );_gcc .FgTemplates .AddInt (_aee );};};_gcc .NumberOfClasses =len (_gcc .UndilatedTemplates .Values );return nil ;};func (_gga *Classer )classifyRankHouseOne (_dff *_bb .Boxes ,_dbc ,_eag ,_fbd *_bb .Bitmaps ,_bbgb *_bb .Points ,_dgd int )(_agc error ){const _gcf ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_bcf ,_geac ,_fdd ,_egf float32 ;_bda int ;_dd ,_dgdf ,_gbc ,_afd ,_cgc *_bb .Bitmap ;_aca ,_edff bool ;);for _fcg :=0;_fcg < len (_dbc .Values );_fcg ++{_dgdf =_eag .Values [_fcg ];_gbc =_fbd .Values [_fcg ];_bcf ,_geac ,_agc =_bbgb .GetGeometry (_fcg );if _agc !=nil {return _ee .Wrapf (_agc ,_gcf ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_gfce :=len (_gga .UndilatedTemplates .Values );_aca =false ;_dcg :=_ead (_gga ,_dgdf );for _bda =_dcg .Next ();_bda > -1;{_afd ,_agc =_gga .UndilatedTemplates .GetBitmap (_bda );if _agc !=nil {return _ee .Wrap (_agc ,_gcf ,"\u0062\u006d\u0033");};_cgc ,_agc =_gga .DilatedTemplates .GetBitmap (_bda );if _agc !=nil {return _ee .Wrap (_agc ,_gcf ,"\u0062\u006d\u0034");};_fdd ,_egf ,_agc =_gga .CentroidPointsTemplates .GetGeometry (_bda );if _agc !=nil {return _ee .Wrap (_agc ,_gcf ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_edff ,_agc =_bb .HausTest (_dgdf ,_gbc ,_afd ,_cgc ,_bcf -_fdd ,_geac -_egf ,MaxDiffWidth ,MaxDiffHeight );if _agc !=nil {return _ee .Wrap (_agc ,_gcf ,"");};if _edff {_aca =true ;if _agc =_gga .ClassIDs .Add (_bda );_agc !=nil {return _ee .Wrap (_agc ,_gcf ,"");};if _agc =_gga .ComponentPageNumbers .Add (_dgd );_agc !=nil {return _ee .Wrap (_agc ,_gcf ,"");};if _gga .Settings .KeepClassInstances {_geg ,_bdgg :=_gga .ClassInstances .GetBitmaps (_bda );if _bdgg !=nil {return _ee .Wrap (_bdgg ,_gcf ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_dd ,_bdgg =_dbc .GetBitmap (_fcg );if _bdgg !=nil {return _ee .Wrap (_bdgg ,_gcf ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_geg .AddBitmap (_dd );_afc ,_bdgg :=_dff .Get (_fcg );if _bdgg !=nil {return _ee .Wrap (_bdgg ,_gcf ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_geg .AddBox (_afc );};break ;};};if !_aca {if _agc =_gga .ClassIDs .Add (_gfce );_agc !=nil {return _ee .Wrap (_agc ,_gcf ,"");};if _agc =_gga .ComponentPageNumbers .Add (_dgd );_agc !=nil {return _ee .Wrap (_agc ,_gcf ,"");};_cafa :=&_bb .Bitmaps {};_dd ,_agc =_dbc .GetBitmap (_fcg );if _agc !=nil {return _ee .Wrap (_agc ,_gcf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cafa .Values =append (_cafa .Values ,_dd );_ede ,_dag :=_dd .Width ,_dd .Height ;_gga .TemplatesSize .Add (uint64 (_dag )*uint64 (_ede ),_gfce );_fdad ,_cfd :=_dff .Get (_fcg );if _cfd !=nil {return _ee .Wrap (_cfd ,_gcf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cafa .AddBox (_fdad );_gga .ClassInstances .AddBitmaps (_cafa );_gga .CentroidPointsTemplates .AddPoint (_bcf ,_geac );_gga .UndilatedTemplates .AddBitmap (_dgdf );_gga .DilatedTemplates .AddBitmap (_gbc );};};return nil ;};func (_ffd *Classer )classifyRankHaus (_cea *_bb .Boxes ,_gbdd *_bb .Bitmaps ,_fgb int )error {const _dac ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _cea ==nil {return _ee .Error (_dac ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _gbdd ==nil {return _ee .Error (_dac ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_ecdg :=len (_gbdd .Values );if _ecdg ==0{return _ee .Error (_dac ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_fbc :=_gbdd .CountPixels ();_cdb :=_ffd .Settings .SizeHaus ;_gdc :=_bb .SelCreateBrick (_cdb ,_cdb ,_cdb /2,_cdb /2,_bb .SelHit );_gfb :=&_bb .Bitmaps {Values :make ([]*_bb .Bitmap ,_ecdg )};_bdg :=&_bb .Bitmaps {Values :make ([]*_bb .Bitmap ,_ecdg )};var (_gef ,_agd ,_ebc *_bb .Bitmap ;_bfg error ;);for _cda :=0;_cda < _ecdg ;_cda ++{_gef ,_bfg =_gbdd .GetBitmap (_cda );if _bfg !=nil {return _ee .Wrap (_bfg ,_dac ,"");};_agd ,_bfg =_gef .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _bfg !=nil {return _ee .Wrap (_bfg ,_dac ,"");};_ebc ,_bfg =_bb .Dilate (nil ,_agd ,_gdc );if _bfg !=nil {return _ee .Wrap (_bfg ,_dac ,"");};_gfb .Values [_ecdg ]=_agd ;_bdg .Values [_ecdg ]=_ebc ;};_dee ,_bfg :=_bb .Centroids (_gfb .Values );if _bfg !=nil {return _ee .Wrap (_bfg ,_dac ,"");};if _bfg =_dee .Add (_ffd .CentroidPoints );_bfg !=nil {_e .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _ffd .Settings .RankHaus ==1.0{_bfg =_ffd .classifyRankHouseOne (_cea ,_gbdd ,_gfb ,_bdg ,_dee ,_fgb );}else {_bfg =_ffd .classifyRankHouseNonOne (_cea ,_gbdd ,_gfb ,_bdg ,_dee ,_fbc ,_fgb );};if _bfg !=nil {return _ee .Wrap (_bfg ,_dac ,"");};return nil ;};type Method int ;func _ead (_gdb *Classer ,_eca *_bb .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_eca .Width ,Height :_eca .Height ,Classer :_gdb };};func (_fcb *Settings )SetDefault (){if _fcb .MaxCompWidth ==0{switch _fcb .Components {case _bb .ComponentConn :_fcb .MaxCompWidth =MaxConnCompWidth ;case _bb .ComponentCharacters :_fcb .MaxCompWidth =MaxCharCompWidth ;case _bb .ComponentWords :_fcb .MaxCompWidth =MaxWordCompWidth ;};};if _fcb .MaxCompHeight ==0{_fcb .MaxCompHeight =MaxCompHeight ;};if _fcb .Thresh ==0.0{_fcb .Thresh =0.9;};if _fcb .WeightFactor ==0.0{_fcb .WeightFactor =0.75;};if _fcb .RankHaus ==0.0{_fcb .RankHaus =0.97;};if _fcb .SizeHaus ==0{_fcb .SizeHaus =2;};};func (_f *Classer )AddPage (inputPage *_bb .Bitmap ,pageNumber int ,method Method )(_gf error ){const _fg ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_f .Widths [pageNumber ]=inputPage .Width ;_f .Heights [pageNumber ]=inputPage .Height ;if _gf =_f .verifyMethod (method );_gf !=nil {return _ee .Wrap (_gf ,_fg ,"");};_c ,_ef ,_gf :=inputPage .GetComponents (_f .Settings .Components ,_f .Settings .MaxCompWidth ,_f .Settings .MaxCompHeight );if _gf !=nil {return _ee .Wrap (_gf ,_fg ,"");};_e .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_c );if _gf =_f .addPageComponents (inputPage ,_ef ,_c ,pageNumber ,method );_gf !=nil {return _ee .Wrap (_gf ,_fg ,"");};return nil ;};func Init (settings Settings )(*Classer ,error ){const _gg ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_dg :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_d .IntsMap {},TemplateAreas :&_d .IntSlice {},ComponentPageNumbers :&_d .IntSlice {},ClassIDs :&_d .IntSlice {},ComponentsNumber :&_d .IntSlice {},CentroidPoints :&_bb .Points {},CentroidPointsTemplates :&_bb .Points {},UndilatedTemplates :&_bb .Bitmaps {},DilatedTemplates :&_bb .Bitmaps {},ClassInstances :&_bb .BitmapsArray {},FgTemplates :&_d .NumSlice {}};if _bbb :=_dg .Settings .Validate ();_bbb !=nil {return nil ,_ee .Wrap (_bbb ,_gg ,"");};return _dg ,nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_aec *Classer )classifyCorrelation (_bd *_bb .Boxes ,_dbae *_bb .Bitmaps ,_eab int )error {const _geb ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _bd ==nil {return _ee .Error (_geb ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");};if _dbae ==nil {return _ee .Error (_geb ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_ecd :=len (_dbae .Values );if _ecd ==0{_e .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");return nil ;};var (_da ,_ccf *_bb .Bitmap ;_bfa error ;);_ac :=&_bb .Bitmaps {Values :make ([]*_bb .Bitmap ,_ecd )};for _ecf ,_ecg :=range _dbae .Values {_ccf ,_bfa =_ecg .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _bfa !=nil {return _ee .Wrap (_bfa ,_geb ,"");};_ac .Values [_ecf ]=_ccf ;};_ccg :=_aec .FgTemplates ;_bee :=_bb .MakePixelSumTab8 ();_afb :=_bb .MakePixelCentroidTab8 ();_ab :=make ([]int ,_ecd );_acc :=make ([][]int ,_ecd );_de :=_bb .Points (make ([]_bb .Point ,_ecd ));_ebd :=&_de ;var (_cb ,_dge int ;_gcb ,_cdc ,_acg int ;_fa ,_egd int ;_eggg byte ;);for _bdd ,_bca :=range _ac .Values {_acc [_bdd ]=make ([]int ,_bca .Height );_cb =0;_dge =0;_cdc =(_bca .Height -1)*_bca .RowStride ;_gcb =0;for _egd =_bca .Height -1;_egd >=0;_egd ,_cdc =_egd -1,_cdc -_bca .RowStride {_acc [_bdd ][_egd ]=_gcb ;_acg =0;for _fa =0;_fa < _bca .RowStride ;_fa ++{_eggg =_bca .Data [_cdc +_fa ];_acg +=_bee [_eggg ];_cb +=_afb [_eggg ]+_fa *8*_bee [_eggg ];};_gcb +=_acg ;_dge +=_acg *_egd ;};_ab [_bdd ]=_gcb ;if _gcb > 0{(*_ebd )[_bdd ]=_bb .Point {X :float32 (_cb )/float32 (_gcb ),Y :float32 (_dge )/float32 (_gcb )};}else {(*_ebd )[_bdd ]=_bb .Point {X :float32 (_bca .Width )/float32 (2),Y :float32 (_bca .Height )/float32 (2)};};};if _bfa =_aec .CentroidPoints .Add (_ebd );_bfa !=nil {return _ee .Wrap (_bfa ,_geb ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_bga ,_ebf ,_fgc int ;_bae float64 ;_adc ,_feb ,_gbd ,_acgb float32 ;_cdg ,_ffg _bb .Point ;_bef bool ;_gaa *similarTemplatesFinder ;_ece int ;_dgf *_bb .Bitmap ;_fad *_b .Rectangle ;_dce *_bb .Bitmaps ;);for _ece ,_ccf =range _ac .Values {_ebf =_ab [_ece ];if _adc ,_feb ,_bfa =_ebd .GetGeometry (_ece );_bfa !=nil {return _ee .Wrap (_bfa ,_geb ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_bef =false ;_ecec :=len (_aec .UndilatedTemplates .Values );_gaa =_ead (_aec ,_ccf );for _bce :=_gaa .Next ();_bce > -1;{if _dgf ,_bfa =_aec .UndilatedTemplates .GetBitmap (_bce );_bfa !=nil {return _ee .Wrap (_bfa ,_geb ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _fgc ,_bfa =_ccg .GetInt (_bce );_bfa !=nil {_e .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bfa );};if _gbd ,_acgb ,_bfa =_aec .CentroidPointsTemplates .GetGeometry (_bce );_bfa !=nil {return _ee .Wrap (_bfa ,_geb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");};if _aec .Settings .WeightFactor > 0.0{if _bga ,_bfa =_aec .TemplateAreas .Get (_bce );_bfa !=nil {_e .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_bfa );};_bae =_aec .Settings .Thresh +(1.0-_aec .Settings .Thresh )*_aec .Settings .WeightFactor *float64 (_fgc )/float64 (_bga );}else {_bae =_aec .Settings .Thresh ;};_fda ,_cge :=_bb .CorrelationScoreThresholded (_ccf ,_dgf ,_ebf ,_fgc ,_cdg .X -_ffg .X ,_cdg .Y -_ffg .Y ,MaxDiffWidth ,MaxDiffHeight ,_bee ,_acc [_ece ],float32 (_bae ));if _cge !=nil {return _ee .Wrap (_cge ,_geb ,"");};if _dc {var (_dfgf ,_fcf float64 ;_cgb ,_bbe int ;);_dfgf ,_cge =_bb .CorrelationScore (_ccf ,_dgf ,_ebf ,_fgc ,_adc -_gbd ,_feb -_acgb ,MaxDiffWidth ,MaxDiffHeight ,_bee );if _cge !=nil {return _ee .Wrap (_cge ,_geb ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_fcf ,_cge =_bb .CorrelationScoreSimple (_ccf ,_dgf ,_ebf ,_fgc ,_adc -_gbd ,_feb -_acgb ,MaxDiffWidth ,MaxDiffHeight ,_bee );if _cge !=nil {return _ee .Wrap (_cge ,_geb ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_cgb =int (_a .Sqrt (_dfgf *float64 (_ebf )*float64 (_fgc )));_bbe =int (_a .Sqrt (_fcf *float64 (_ebf )*float64 (_fgc )));if (_dfgf >=_bae )!=(_fcf >=_bae ){return _ee .Errorf (_geb ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_cgb ,_dfgf ,_dfgf >=_bae ,_bbe ,_fcf ,_fcf >=_bae ,_dfgf -_fcf );};if _dfgf >=_bae !=_fda {return _ee .Errorf (_geb ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_dfgf ,_dfgf *float64 (_ebf )*float64 (_fgc ),_cgb ,_bae ,float32 (_bae )*float32 (_ebf )*float32 (_fgc ),_fda );};};if _fda {_bef =true ;if _cge =_aec .ClassIDs .Add (_bce );_cge !=nil {return _ee .Wrap (_cge ,_geb ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _cge =_aec .ComponentPageNumbers .Add (_eab );_cge !=nil {return _ee .Wrap (_cge ,_geb ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _aec .Settings .KeepClassInstances {if _da ,_cge =_dbae .GetBitmap (_ece );_cge !=nil {return _ee .Wrap (_cge ,_geb ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _dce ,_cge =_aec .ClassInstances .GetBitmaps (_bce );_cge !=nil {return _ee .Wrap (_cge ,_geb ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_dce .AddBitmap (_da );if _fad ,_cge =_bd .Get (_ece );_cge !=nil {return _ee .Wrap (_cge ,_geb ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");};_dce .AddBox (_fad );};break ;};};if !_bef {if _bfa =_aec .ClassIDs .Add (_ecec );_bfa !=nil {return _ee .Wrap (_bfa ,_geb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bfa =_aec .ComponentPageNumbers .Add (_eab );_bfa !=nil {return _ee .Wrap (_bfa ,_geb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dce =&_bb .Bitmaps {};if _da ,_bfa =_dbae .GetBitmap (_ece );_bfa !=nil {return _ee .Wrap (_bfa ,_geb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dce .AddBitmap (_da );_dbg ,_gfa :=_da .Width ,_da .Height ;_aaf :=uint64 (_gfa )*uint64 (_dbg );_aec .TemplatesSize .Add (_aaf ,_ecec );if _fad ,_bfa =_bd .Get (_ece );_bfa !=nil {return _ee .Wrap (_bfa ,_geb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dce .AddBox (_fad );_aec .ClassInstances .AddBitmaps (_dce );_aec .CentroidPointsTemplates .AddPoint (_adc ,_feb );_aec .FgTemplates .AddInt (_ebf );_aec .UndilatedTemplates .AddBitmap (_da );_bga =(_ccf .Width -2*JbAddedPixels )*(_ccf .Height -2*JbAddedPixels );if _bfa =_aec .TemplateAreas .Add (_bga );_bfa !=nil {return _ee .Wrap (_bfa ,_geb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_aec .NumberOfClasses =len (_aec .UndilatedTemplates .Values );return nil ;};func (_bff Settings )Validate ()error {const _aad ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _bff .Thresh < 0.4||_bff .Thresh > 0.98{return _ee .Error (_aad ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");};if _bff .WeightFactor < 0.0||_bff .WeightFactor > 1.0{return _ee .Error (_aad ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _bff .RankHaus < 0.5||_bff .RankHaus > 1.0{return _ee .Error (_aad ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _bff .SizeHaus < 1||_bff .SizeHaus > 10{return _ee .Error (_aad ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");};switch _bff .Components {case _bb .ComponentConn ,_bb .ComponentCharacters ,_bb .ComponentWords :default:return _ee .Error (_aad ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");};return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_gd *Classer )ComputeLLCorners ()(_ad error ){const _ca ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _gd .PtaUL ==nil {return _ee .Error (_ca ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_be :=len (*_gd .PtaUL );_gd .PtaLL =&_bb .Points {};var (_fd ,_fdg float32 ;_ga ,_ed int ;_ggf *_bb .Bitmap ;);for _bg :=0;_bg < _be ;_bg ++{_fd ,_fdg ,_ad =_gd .PtaUL .GetGeometry (_bg );if _ad !=nil {_e .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ad );return _ee .Wrap (_ad ,_ca ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_ga ,_ad =_gd .ClassIDs .Get (_bg );if _ad !=nil {_e .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_ad );return _ee .Wrap (_ad ,_ca ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_ggf ,_ad =_gd .UndilatedTemplates .GetBitmap (_ga );if _ad !=nil {_e .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ad );return _ee .Wrap (_ad ,_ca ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ed =_ggf .Height ;_gd .PtaLL .AddPoint (_fd ,_fdg +float32 (_ed ));};return nil ;};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_d .IntSlice ;TemplateAreas *_d .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_bb .BitmapsArray ;UndilatedTemplates *_bb .Bitmaps ;DilatedTemplates *_bb .Bitmaps ;TemplatesSize _d .IntsMap ;FgTemplates *_d .NumSlice ;CentroidPoints *_bb .Points ;CentroidPointsTemplates *_bb .Points ;ClassIDs *_d .IntSlice ;ComponentPageNumbers *_d .IntSlice ;PtaUL *_bb .Points ;PtaLL *_bb .Points ;};var _dc bool ;