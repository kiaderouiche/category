//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_gc "bytes";_de "compress/gzip";_d "crypto";_bfd "crypto/aes";_bb "crypto/cipher";_gg "crypto/rand";_abf "crypto/rsa";_ggg "crypto/sha512";_ef "crypto/x509";_bf "encoding/base64";_fa "encoding/hex";_cc "encoding/json";_ed "encoding/pem";_ea "errors";_ddc "fmt";_cf "github.com/unidoc/unipdf/v3/common";_dd "io";_f "io/ioutil";_gd "net";_gb "net/http";_e "os";_g "path/filepath";_ab "sort";_c "strings";_a "sync";_ae "time";);var _gecd stateLoader =defaultStateHolder {};func (_fge *LicenseKey )getExpiryDateToCompare ()_ae .Time {if _fge .Trial {return _ae .Now ().UTC ();};return _cf .ReleasedAt ;};func TrackUse (useKey string ){if _gga ==nil {return ;};if !_gga ._af ||len (_gga ._fed )==0{return ;};if len (useKey )==0{return ;};_bgb .Lock ();defer _bgb .Unlock ();if _gba ==nil {_gba =map[string ]int {};};_gba [useKey ]++;};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};func _gae (_eac string )(LicenseKey ,error ){var _bd LicenseKey ;_efc ,_eb :=_bff (_abc ,_abb ,_eac );if _eb !=nil {return _bd ,_eb ;};_gbd ,_eb :=_cbc (_cfeca ,_efc );if _eb !=nil {return _bd ,_eb ;};_eb =_cc .Unmarshal (_gbd ,&_bd );if _eb !=nil {return _bd ,_eb ;};_bd .CreatedAt =_ae .Unix (_bd .CreatedAtInt ,0);if _bd .ExpiresAtInt > 0{_fdd :=_ae .Unix (_bd .ExpiresAtInt ,0);_bd .ExpiresAt =&_fdd ;};return _bd ,nil ;};func (_aff *LicenseKey )Validate ()error {if len (_aff .LicenseId )< 10{return _ddc .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");};if len (_aff .CustomerId )< 10{return _ddc .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_aff .CustomerName )< 1{return _ddc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");};if _dg .After (_aff .CreatedAt ){return _ddc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");};if _aff .ExpiresAt ==nil {_cbf :=_aff .CreatedAt .AddDate (1,0,0);if _da .After (_cbf ){_cbf =_da ;};_aff .ExpiresAt =&_cbf ;};if _aff .CreatedAt .After (*_aff .ExpiresAt ){return _ddc .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");};if _aff .isExpired (){return _ddc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");};if len (_aff .CreatorName )< 1{return _ddc .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_aff .CreatorEmail )< 1{return _ddc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");};if _aff .CreatedAt .After (_ddce ){if !_aff .UniPDF {return _ddc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");};};return nil ;};var _bgb =&_a .Mutex {};func _adb ()(_gd .IP ,error ){_fgc ,_aedf :=_gd .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");if _aedf !=nil {return nil ,_aedf ;};defer _fgc .Close ();_fea :=_fgc .LocalAddr ().(*_gd .UDPAddr );return _fea .IP ,nil ;};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};func _ge (_ba string ,_ded []byte )(string ,error ){_cd ,_ :=_ed .Decode ([]byte (_ba ));if _cd ==nil {return "",_ddc .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");};_df ,_fd :=_ef .ParsePKCS1PrivateKey (_cd .Bytes );if _fd !=nil {return "",_fd ;};_fg :=_ggg .New ();_fg .Write (_ded );_fb :=_fg .Sum (nil );_cb ,_fd :=_abf .SignPKCS1v15 (_gg .Reader ,_df ,_d .SHA512 ,_fb );if _fd !=nil {return "",_fd ;};_dda :=_bf .StdEncoding .EncodeToString (_ded );_dda +="\u000a\u002b\u000a";_dda +=_bf .StdEncoding .EncodeToString (_cb );return _dda ,nil ;};func (_ee *LicenseKey )TypeToString ()string {if _ee ._af {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};if _ee .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";};if _ee .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";};if _ee .Tier ==LicenseTierIndividual ||_ee .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);func SetLicenseKey (content string ,customerName string )error {_ggd ,_baed :=_gae (content );if _baed !=nil {_cf .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_baed );return _baed ;};if !_c .EqualFold (_ggd .CustomerName ,customerName ){_cf .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",customerName ,_ggd .CustomerName );return _ddc .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",customerName ,_ggd .CustomerName );};_baed =_ggd .Validate ();if _baed !=nil {_cf .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_baed );return _baed ;};_gga =&_ggd ;return nil ;};func (_eg *LicenseKey )isExpired ()bool {return _eg .getExpiryDateToCompare ().After (*_eg .ExpiresAt )};const _fcc ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";func _ce ()*meteredClient {_dfb :=meteredClient {_afc :"\u0068t\u0074\u0070\u0073\u003a\u002f\u002f\u0075\u006e\u0069\u0063\u0072m\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_eed :&_gb .Client {Timeout :30*_ae .Second }};return &_dfb ;};func _dfag (_fbb *_gb .Response )([]byte ,error ){var _dfea []byte ;_bfg ,_caf :=_fbec (_fbb );if _caf !=nil {return _dfea ,_caf ;};return _f .ReadAll (_bfg );};type meteredStatusForm struct{};var _gba map[string ]int ;var _ddce =_ae .Date (2019,6,6,0,0,0,0,_ae .UTC );func _gefc (_dfbd ,_fac []byte )([]byte ,error ){_gfaf :=make ([]byte ,_bf .URLEncoding .DecodedLen (len (_fac )));_cadg ,_dcg :=_bf .URLEncoding .Decode (_gfaf ,_fac );if _dcg !=nil {return nil ,_dcg ;};_gfaf =_gfaf [:_cadg ];_afb ,_dcg :=_bfd .NewCipher (_dfbd );if _dcg !=nil {return nil ,_dcg ;};if len (_gfaf )< _bfd .BlockSize {return nil ,_ea .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");};_abab :=_gfaf [:_bfd .BlockSize ];_gfaf =_gfaf [_bfd .BlockSize :];_gde :=_bb .NewCFBDecrypter (_afb ,_abab );_gde .XORKeyStream (_gfaf ,_gfaf );return _gfaf ,nil ;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};func MakeUnlicensedKey ()*LicenseKey {_afd :=LicenseKey {};_afd .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";_afd .Tier =LicenseTierUnlicensed ;_afd .CreatedAt =_ae .Now ().UTC ();_afd .CreatedAtInt =_afd .CreatedAt .Unix ();return &_afd ;};var _dbe map[string ]struct{};const (_abc ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";_abb ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);func _bff (_gggga string ,_db string ,_efa string )(string ,error ){_ac :=_c .Index (_efa ,_gggga );if _ac ==-1{return "",_ddc .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cg :=_c .Index (_efa ,_db );if _cg ==-1{return "",_ddc .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bg :=_ac +len (_gggga )+1;return _efa [_bg :_cg -1],nil ;};type stateLoader interface{loadState (_afg string )(reportState ,error );updateState (_gfd ,_afgc ,_gebb string ,_abe int ,_fbc bool ,_ccg int ,_ff int ,_cfc _ae .Time ,_dca map[string ]int )error ;};func _fbg ()([]string ,[]string ,error ){_gbg ,_afge :=_gd .Interfaces ();if _afge !=nil {return nil ,nil ,_afge ;};var _dbd []string ;var _dbbf []string ;for _ ,_cfcg :=range _gbg {if _cfcg .Flags &_gd .FlagUp ==0||_gc .Equal (_cfcg .HardwareAddr ,nil ){continue ;};if _cfcg .HardwareAddr [0]&2==2{continue ;};_bde ,_fcg :=_cfcg .Addrs ();if _fcg !=nil {return nil ,nil ,_fcg ;};_cdd :=0;for _ ,_bdc :=range _bde {var _dge _gd .IP ;switch _bda :=_bdc .(type ){case *_gd .IPNet :_dge =_bda .IP ;case *_gd .IPAddr :_dge =_bda .IP ;};if _dge .IsLoopback (){continue ;};if _dge .To4 ()==nil {continue ;};_dbbf =append (_dbbf ,_dge .String ());_cdd ++;};_fff :=_cfcg .HardwareAddr .String ();if _fff !=""&&_cdd > 0{_dbd =append (_dbd ,_fff );};};return _dbd ,_dbbf ,nil ;};var _da =_ae .Date (2020,1,1,0,0,0,0,_ae .UTC );func Track (docKey string ,useKey string )error {return _fdc (docKey ,useKey ,false )};func _cbc (_fdg string ,_ad string )([]byte ,error ){var (_ede int ;_dc string ;);for _ ,_dc =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _ede =_c .Index (_ad ,_dc );_ede !=-1{break ;};};if _ede ==-1{return nil ,_ddc .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");};_fgg :=_ad [:_ede ];_geg :=_ede +len (_dc );_cdc :=_ad [_geg :];if _fgg ==""||_cdc ==""{return nil ,_ddc .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");};_ga ,_cda :=_bf .StdEncoding .DecodeString (_fgg );if _cda !=nil {return nil ,_ddc .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_gggg ,_cda :=_bf .StdEncoding .DecodeString (_cdc );if _cda !=nil {return nil ,_ddc .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_fe ,_ :=_ed .Decode ([]byte (_fdg ));if _fe ==nil {return nil ,_ddc .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_fae ,_cda :=_ef .ParsePKIXPublicKey (_fe .Bytes );if _cda !=nil {return nil ,_cda ;};_gcf :=_fae .(*_abf .PublicKey );if _gcf ==nil {return nil ,_ddc .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_fda :=_ggg .New ();_fda .Write (_ga );_dde :=_fda .Sum (nil );_cda =_abf .VerifyPKCS1v15 (_gcf ,_d .SHA512 ,_dde ,_gggg );if _cda !=nil {return nil ,_cda ;};return _ga ,nil ;};type defaultStateHolder struct{};func GetMeteredState ()(MeteredStatus ,error ){if _gga ==nil {return MeteredStatus {},_ea .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};if !_gga ._af ||len (_gga ._fed )==0{return MeteredStatus {},_ea .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_bae ,_ggge :=_gecd .loadState (_gga ._fed );if _ggge !=nil {_cf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggge );return MeteredStatus {},_ggge ;};if _bae .Docs > 0{_eec :=_fdc ("","",true );if _eec !=nil {return MeteredStatus {},_eec ;};};_bgb .Lock ();defer _bgb .Unlock ();_add :=_ce ();_add ._dcd =_gga ._fed ;_gec ,_ggge :=_add .getStatus ();if _ggge !=nil {return MeteredStatus {},_ggge ;};if !_gec .Valid {return MeteredStatus {},_ea .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_aef :=MeteredStatus {OK :true ,Credits :_gec .OrgCredits ,Used :_gec .OrgUsed };return _aef ,nil ;};func GetLicenseKey ()*LicenseKey {if _gga ==nil {return nil ;};_aee :=*_gga ;return &_aee ;};func _fbec (_dcdg *_gb .Response )(_dd .ReadCloser ,error ){var _cgg error ;var _fedb _dd .ReadCloser ;switch _c .ToLower (_dcdg .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_fedb ,_cgg =_de .NewReader (_dcdg .Body );if _cgg !=nil {return _fedb ,_cgg ;};defer _fedb .Close ();default:_fedb =_dcdg .Body ;};return _fedb ,nil ;};func (_fcfg defaultStateHolder )loadState (_dcb string )(reportState ,error ){_dgdb :=_e .Getenv ("\u0048\u004f\u004d\u0045");if len (_dgdb )==0{return reportState {},_ea .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_fag :=_g .Join (_dgdb ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_acf :=_e .MkdirAll (_fag ,0777);if _acf !=nil {return reportState {},_acf ;};if len (_dcb )< 20{return reportState {},_ea .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_dfa :=[]byte (_dcb );_gdg :=_ggg .Sum512_256 (_dfa [:20]);_dee :=_fa .EncodeToString (_gdg [:]);_bddb :=_g .Join (_fag ,_dee );_daf ,_acf :=_f .ReadFile (_bddb );if _acf !=nil {if _e .IsNotExist (_acf ){return reportState {},nil ;};_cf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_acf );return reportState {},_ea .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _caa ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_daf ,_acf =_gefc ([]byte (_caa ),_daf );if _acf !=nil {return reportState {},_acf ;};var _afff reportState ;_acf =_cc .Unmarshal (_daf ,&_afff );if _acf !=nil {_cf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_acf );return reportState {},_ea .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};return _afff ,nil ;};type meteredClient struct{_afc string ;_dcd string ;_eed *_gb .Client ;};type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _ae .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_ae .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;Trial bool `json:"trial"`;_af bool ;_fed string ;};func _fbcf (_ebg ,_fba []byte )([]byte ,error ){_gff ,_eca :=_bfd .NewCipher (_ebg );if _eca !=nil {return nil ,_eca ;};_fgd :=make ([]byte ,_bfd .BlockSize +len (_fba ));_bcc :=_fgd [:_bfd .BlockSize ];if _ ,_afdc :=_dd .ReadFull (_gg .Reader ,_bcc );_afdc !=nil {return nil ,_afdc ;};_eggf :=_bb .NewCFBEncrypter (_gff ,_bcc );_eggf .XORKeyStream (_fgd [_bfd .BlockSize :],_fba );_afga :=make ([]byte ,_bf .URLEncoding .EncodedLen (len (_fgd )));_bf .URLEncoding .Encode (_afga ,_fgd );return _afga ,nil ;};var _dg =_ae .Date (2010,1,1,0,0,0,0,_ae .UTC );func SetMeteredKey (apiKey string )error {_abbe :=_ce ();_abbe ._dcd =apiKey ;_fcf ,_feb :=_abbe .getStatus ();if _feb !=nil {return _feb ;};if !_fcf .Valid {return _ea .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_ccd :=&LicenseKey {_af :true ,_fed :apiKey };_gga =_ccd ;return nil ;};var _gga =MakeUnlicensedKey ();func _fdc (_egg string ,_gcfa string ,_gda bool )error {if _gga ==nil {return _ea .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");};if !_gga ._af ||len (_gga ._fed )==0{return nil ;};if len (_egg )==0&&!_gda {return _ea .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_bgb .Lock ();defer _bgb .Unlock ();if _dbe ==nil {_dbe =map[string ]struct{}{};};if _gba ==nil {_gba =map[string ]int {};};_ege :=0;if !_gda {_ ,_fdcf :=_dbe [_egg ];if !_fdcf {_dbe [_egg ]=struct{}{};_ege ++;};if _ege ==0&&!_gda {return nil ;};_gba [_gcfa ]++;};_aed :=_ae .Now ();_cad ,_bgfc :=_gecd .loadState (_gga ._fed );if _bgfc !=nil {_cf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgfc );return _bgfc ;};if _cad .Usage ==nil {_cad .Usage =map[string ]int {};};for _cfec ,_gac :=range _gba {_cad .Usage [_cfec ]+=_gac ;};_gba =nil ;const _gfg =24*_ae .Hour ;const _aag =3*24*_ae .Hour ;if len (_cad .Instance )==0||_aed .Sub (_cad .LastReported )> _gfg ||(_cad .LimitDocs &&_cad .RemainingDocs <=_cad .Docs +int64 (_ege ))||_gda {_cbg ,_eea :=_e .Hostname ();if _eea !=nil {return _eea ;};_cfa :=_cad .Docs ;_ec ,_fdadb ,_eea :=_fbg ();if _eea !=nil {return _eea ;};_ab .Strings (_fdadb );_ab .Strings (_ec );_bdb ,_eea :=_adb ();if _eea !=nil {return _eea ;};_afe :=false ;for _ ,_adg :=range _fdadb {if _adg ==_bdb .String (){_afe =true ;};};if !_afe {_fdadb =append (_fdadb ,_bdb .String ());};_acb :=_ce ();_acb ._dcd =_gga ._fed ;_cfa +=int64 (_ege );_ced :=meteredUsageCheckinForm {Instance :_cad .Instance ,Next :_cad .Next ,UsageNumber :int (_cfa ),NumFailed :_cad .NumErrors ,Hostname :_cbg ,LocalIP :_c .Join (_fdadb ,"\u002c\u0020"),MacAddress :_c .Join (_ec ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_cf .Version ,Usage :_cad .Usage };_adc :=int64 (0);_ceg :=_cad .NumErrors ;_def :=_aed ;_agec :=0;_cge :=_cad .LimitDocs ;_agf ,_eea :=_acb .checkinUsage (_ced );if _eea !=nil {if _aed .Sub (_cad .LastReported )> _aag {return _ea .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");};_adc =_cfa ;_ceg ++;_def =_cad .LastReported ;}else {_cge =_agf .LimitDocs ;_agec =_agf .RemainingDocs ;_ceg =0;};if len (_agf .Instance )==0{_agf .Instance =_ced .Instance ;};if len (_agf .Next )==0{_agf .Next =_ced .Next ;};_eea =_gecd .updateState (_acb ._dcd ,_agf .Instance ,_agf .Next ,int (_adc ),_cge ,_agec ,int (_ceg ),_def ,nil );if _eea !=nil {return _eea ;};if !_agf .Success {return _ddc .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_agf .Message );};}else {_bgfc =_gecd .updateState (_gga ._fed ,_cad .Instance ,_cad .Next ,int (_cad .Docs )+_ege ,_cad .LimitDocs ,int (_cad .RemainingDocs ),int (_cad .NumErrors ),_cad .LastReported ,_cad .Usage );if _bgfc !=nil {return _bgfc ;};};return nil ;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;Usage map[string ]int `json:"u"`;};func _ead (_aeb []byte )(_dd .Reader ,error ){_gcc :=new (_gc .Buffer );_bgbb :=_de .NewWriter (_gcc );_bgbb .Write (_aeb );_cgc :=_bgbb .Close ();if _cgc !=nil {return nil ,_cgc ;};return _gcc ,nil ;};func (_gaed *LicenseKey )ToString ()string {if _gaed ._af {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};_gbc :=_ddc .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_gaed .LicenseId );_gbc +=_ddc .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_gaed .CustomerId );_gbc +=_ddc .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_gaed .CustomerName );_gbc +=_ddc .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_gaed .Tier );_gbc +=_ddc .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_cf .UtcTimeFormat (_gaed .CreatedAt ));if _gaed .ExpiresAt ==nil {_gbc +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";}else {_gbc +=_ddc .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_cf .UtcTimeFormat (*_gaed .ExpiresAt ));};_gbc +=_ddc .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_gaed .CreatorName ,_gaed .CreatorEmail );return _gbc ;};func (_ag *meteredClient )checkinUsage (_baf meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_baf .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";_baf .PackageVersion =_cf .Version ;var _bgd meteredUsageCheckinResp ;_geb :=_ag ._afc +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_bdd ,_fdad :=_cc .Marshal (_baf );if _fdad !=nil {return _bgd ,_fdad ;};_gf ,_fdad :=_ead (_bdd );if _fdad !=nil {return _bgd ,_fdad ;};_gef ,_fdad :=_gb .NewRequest ("\u0050\u004f\u0053\u0054",_geb ,_gf );if _fdad !=nil {return _bgd ,_fdad ;};_gef .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");_gef .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_gef .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_gef .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_ag ._dcd );_aa ,_fdad :=_ag ._eed .Do (_gef );if _fdad !=nil {return _bgd ,_fdad ;};defer _aa .Body .Close ();if _aa .StatusCode !=200{return _bgd ,_ddc .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_aa .StatusCode );};_cdcf ,_fdad :=_dfag (_aa );if _fdad !=nil {return _bgd ,_fdad ;};_fdad =_cc .Unmarshal (_cdcf ,&_bgd );if _fdad !=nil {return _bgd ,_fdad ;};return _bgd ,nil ;};func init (){_faga :=_e .Getenv (_fdb );_fef :=_e .Getenv (_fcc );if len (_faga )==0||len (_fef )==0{return ;};_gce ,_aeff :=_f .ReadFile (_faga );if _aeff !=nil {_cf .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_aeff );return ;};_aeff =SetLicenseKey (string (_gce ),_fef );if _aeff !=nil {_cf .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_aeff );return ;};};const _cfeca ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";func (_cba *LicenseKey )IsLicensed ()bool {return _cba .Tier !=LicenseTierUnlicensed ||_cba ._af };type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _ae .Time `json:"lr"`;LastWritten _ae .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};func (_bbdd defaultStateHolder )updateState (_bbb ,_dgd ,_ddaf string ,_eaab int ,_dad bool ,_faa int ,_aae int ,_bba _ae .Time ,_dfef map[string ]int )error {_aba :=_e .Getenv ("\u0048\u004f\u004d\u0045");if len (_aba )==0{return _ea .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_cfe :=_g .Join (_aba ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_fbff :=_e .MkdirAll (_cfe ,0777);if _fbff !=nil {return _fbff ;};if len (_bbb )< 20{return _ea .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_bgf :=[]byte (_bbb );_dbg :=_ggg .Sum512_256 (_bgf [:20]);_eaca :=_fa .EncodeToString (_dbg [:]);_afde :=_g .Join (_cfe ,_eaca );var _ffe reportState ;_ffe .Docs =int64 (_eaab );_ffe .NumErrors =int64 (_aae );_ffe .LimitDocs =_dad ;_ffe .RemainingDocs =int64 (_faa );_ffe .LastWritten =_ae .Now ().UTC ();_ffe .LastReported =_bba ;_ffe .Instance =_dgd ;_ffe .Next =_ddaf ;_ffe .Usage =_dfef ;_age ,_fbff :=_cc .Marshal (_ffe );if _fbff !=nil {return _fbff ;};const _gfa ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_age ,_fbff =_fbcf ([]byte (_gfa ),_age );if _fbff !=nil {return _fbff ;};_fbff =_f .WriteFile (_afde ,_age ,0600);if _fbff !=nil {return _fbff ;};return nil ;};func (_ada *meteredClient )getStatus ()(meteredStatusResp ,error ){var _fbf meteredStatusResp ;_dfe :=_ada ._afc +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _dbb meteredStatusForm ;_ca ,_bge :=_cc .Marshal (_dbb );if _bge !=nil {return _fbf ,_bge ;};_bfe ,_bge :=_ead (_ca );if _bge !=nil {return _fbf ,_bge ;};_fc ,_bge :=_gb .NewRequest ("\u0050\u004f\u0053\u0054",_dfe ,_bfe );if _bge !=nil {return _fbf ,_bge ;};_fc .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");_fc .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_fc .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_fc .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_ada ._dcd );_cde ,_bge :=_ada ._eed .Do (_fc );if _bge !=nil {return _fbf ,_bge ;};defer _cde .Body .Close ();if _cde .StatusCode !=200{return _fbf ,_ddc .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_cde .StatusCode );};_bbd ,_bge :=_dfag (_cde );if _bge !=nil {return _fbf ,_bge ;};_bge =_cc .Unmarshal (_bbd ,&_fbf );if _bge !=nil {return _fbf ,_bge ;};return _fbf ,nil ;};const _fdb ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";