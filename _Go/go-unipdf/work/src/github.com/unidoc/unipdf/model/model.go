//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_bg "bufio";_gf "bytes";_bgb "crypto/rand";_e "crypto/sha1";_ga "crypto/x509";_d "encoding/binary";_g "encoding/hex";_fe "errors";_b "fmt";_ccc "github.com/unidoc/pkcs7";_bfg "github.com/unidoc/unipdf/v3/common";_eec "github.com/unidoc/unipdf/v3/core";_bfb "github.com/unidoc/unipdf/v3/core/security";_ddd "github.com/unidoc/unipdf/v3/core/security/crypt";_cf "github.com/unidoc/unipdf/v3/internal/cmap";_fc "github.com/unidoc/unipdf/v3/internal/imageutil";_ea "github.com/unidoc/unipdf/v3/internal/license";_efe "github.com/unidoc/unipdf/v3/internal/sampling";_fcb "github.com/unidoc/unipdf/v3/internal/textencoding";_de "github.com/unidoc/unipdf/v3/model/internal/fonts";_dea "github.com/unidoc/unipdf/v3/model/sigutil";_ca "github.com/unidoc/unipdf/v3/ps";_df "github.com/unidoc/unitype";_fg "golang.org/x/xerrors";_ac "image";_ee "image/color";_ "image/gif";_ "image/png";_dd "io";_gag "io/ioutil";_fba "math";_cc "math/rand";_cd "os";_ef "regexp";_fb "sort";_fd "strconv";_beb "strings";_ae "sync";_bf "time";_be "unicode";_af "unicode/utf8";);

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_gbgf *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aaf :=vals [0];if _aaf < 0.0||_aaf > 1.0{_bfg .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");};if _aaf < 0.0{_aaf =0.0;}else if _aaf > 1.0{_aaf =1.0;};return NewPdfColorDeviceGray (_aaf ),nil ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_de .CharMetrics ;

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_eccc *PdfPattern )SetContext (ctx PdfModel ){_eccc ._cdbgf =ctx };

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_aae :=NewPdfAction ();_fbac :=&PdfActionGoToE {};_fbac .PdfAction =_aae ;_aae .SetContext (_fbac );return _fbac ;};func _fbada (_fcef _eec .PdfObject )(*PdfColorspaceCalGray ,error ){_agbd :=NewPdfColorspaceCalGray ();if _dddgf ,_bgbc :=_fcef .(*_eec .PdfIndirectObject );_bgbc {_agbd ._fecd =_dddgf ;};_fcef =_eec .TraceToDirectObject (_fcef );_fedc ,_eaecea :=_fcef .(*_eec .PdfObjectArray );if !_eaecea {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fedc .Len ()!=2{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_fcef =_eec .TraceToDirectObject (_fedc .Get (0));_ebba ,_eaecea :=_fcef .(*_eec .PdfObjectName );if !_eaecea {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_ebba !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_b .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_fcef =_eec .TraceToDirectObject (_fedc .Get (1));_aaee ,_eaecea :=_fcef .(*_eec .PdfObjectDictionary );if !_eaecea {return nil ,_b .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};_fcef =_aaee .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fcef =_eec .TraceToDirectObject (_fcef );_cbeg ,_eaecea :=_fcef .(*_eec .PdfObjectArray );if !_eaecea {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");};if _cbeg .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_fbc ,_ccb :=_cbeg .GetAsFloat64Slice ();if _ccb !=nil {return nil ,_ccb ;};_agbd .WhitePoint =_fbc ;_fcef =_aaee .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fcef !=nil {_fcef =_eec .TraceToDirectObject (_fcef );_cgfc ,_adad :=_fcef .(*_eec .PdfObjectArray );if !_adad {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _cgfc .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_gdef ,_fdfa :=_cgfc .GetAsFloat64Slice ();if _fdfa !=nil {return nil ,_fdfa ;};_agbd .BlackPoint =_gdef ;};_fcef =_aaee .Get ("\u0047\u0061\u006dm\u0061");if _fcef !=nil {_fcef =_eec .TraceToDirectObject (_fcef );_gca ,_dfbe :=_eec .GetNumberAsFloat (_fcef );if _dfbe !=nil {return nil ,_b .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_agbd .Gamma =_gca ;};return _agbd ,nil ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_aafbed .Lock ();defer _aafbed .Unlock ();_bbdfb =keywords };

// B returns the value of the blue component of the color.
func (_gbfa *PdfColorDeviceRGB )B ()float64 {return _gbfa [2]};func (_ggebf *PdfReader )newPdfPageFromDict (_badag *_eec .PdfObjectDictionary )(*PdfPage ,error ){_aafd :=NewPdfPage ();_aafd ._acfcf =_badag ;_egdce :=*_badag ;_cdgde ,_gffac :=_egdce .Get ("\u0054\u0079\u0070\u0065").(*_eec .PdfObjectName );if !_gffac {return nil ,_fe .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_cdgde !="\u0050\u0061\u0067\u0065"{return nil ,_fe .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _eefg :=_egdce .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_eefg !=nil {_aafd .Parent =_eefg ;};if _fccac :=_egdce .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_fccac !=nil {_dffeeg ,_edbae :=_eec .GetString (_fccac );if !_edbae {return nil ,_fe .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_dbafe ,_edgac :=NewPdfDate (_dffeeg .Str ());if _edgac !=nil {return nil ,_edgac ;};_aafd .LastModified =&_dbafe ;};if _bfbfb :=_egdce .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bfbfb !=nil &&!_eec .IsNullObject (_bfbfb ){_acab ,_eggbb :=_eec .GetDict (_bfbfb );if !_eggbb {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bfbfb );};var _aafgd error ;_aafd .Resources ,_aafgd =NewPdfPageResourcesFromDict (_acab );if _aafgd !=nil {return nil ,_aafgd ;};}else {_aaddc ,_gbffg :=_aafd .getParentResources ();if _gbffg !=nil {return nil ,_gbffg ;};if _aaddc ==nil {_aaddc =NewPdfPageResources ();};_aafd .Resources =_aaddc ;};if _febgg :=_egdce .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_febgg !=nil {_feccd ,_acbc :=_eec .GetArray (_febgg );if !_acbc {return nil ,_fe .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _babcd error ;_aafd .MediaBox ,_babcd =NewPdfRectangle (*_feccd );if _babcd !=nil {return nil ,_babcd ;};};if _bggac :=_egdce .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_bggac !=nil {_cgbd ,_cdfbe :=_eec .GetArray (_bggac );if !_cdfbe {return nil ,_fe .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _fece error ;_aafd .CropBox ,_fece =NewPdfRectangle (*_cgbd );if _fece !=nil {return nil ,_fece ;};};if _cdef :=_egdce .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_cdef !=nil {_ebcce ,_fbfbd :=_eec .GetArray (_cdef );if !_fbfbd {return nil ,_fe .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _cbbdb error ;_aafd .BleedBox ,_cbbdb =NewPdfRectangle (*_ebcce );if _cbbdb !=nil {return nil ,_cbbdb ;};};if _gccee :=_egdce .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_gccee !=nil {_gbad ,_bdcb :=_eec .GetArray (_gccee );if !_bdcb {return nil ,_fe .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _gbffe error ;_aafd .TrimBox ,_gbffe =NewPdfRectangle (*_gbad );if _gbffe !=nil {return nil ,_gbffe ;};};if _gfccf :=_egdce .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_gfccf !=nil {_faafg ,_ddcb :=_eec .GetArray (_gfccf );if !_ddcb {return nil ,_fe .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _gede error ;_aafd .ArtBox ,_gede =NewPdfRectangle (*_faafg );if _gede !=nil {return nil ,_gede ;};};if _eedg :=_egdce .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_eedg !=nil {_aafd .BoxColorInfo =_eedg ;};if _faacb :=_egdce .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_faacb !=nil {_aafd .Contents =_faacb ;};if _dgaae :=_egdce .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_dgaae !=nil {_cggfb ,_cdegg :=_eec .GetInt (_dgaae );if !_cdegg {return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_feeada :=int64 (*_cggfb );_aafd .Rotate =&_feeada ;};if _gagcf :=_egdce .Get ("\u0047\u0072\u006fu\u0070");_gagcf !=nil {_aafd .Group =_gagcf ;};if _edbea :=_egdce .Get ("\u0054\u0068\u0075m\u0062");_edbea !=nil {_aafd .Thumb =_edbea ;};if _dadd :=_egdce .Get ("\u0042");_dadd !=nil {_aafd .B =_dadd ;};if _aecb :=_egdce .Get ("\u0044\u0075\u0072");_aecb !=nil {_aafd .Dur =_aecb ;};if _gecfg :=_egdce .Get ("\u0054\u0072\u0061n\u0073");_gecfg !=nil {_aafd .Trans =_gecfg ;};if _baagcd :=_egdce .Get ("\u0041\u0041");_baagcd !=nil {_aafd .AA =_baagcd ;};if _baea :=_egdce .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_baea !=nil {_aafd .Metadata =_baea ;};if _dccbb :=_egdce .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_dccbb !=nil {_aafd .PieceInfo =_dccbb ;};if _dgedc :=_egdce .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_dgedc !=nil {_aafd .StructParents =_dgedc ;};if _bbfcb :=_egdce .Get ("\u0049\u0044");_bbfcb !=nil {_aafd .ID =_bbfcb ;};if _bdbfd :=_egdce .Get ("\u0050\u005a");_bdbfd !=nil {_aafd .PZ =_bdbfd ;};if _gbgc :=_egdce .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_gbgc !=nil {_aafd .SeparationInfo =_gbgc ;};if _ecec :=_egdce .Get ("\u0054\u0061\u0062\u0073");_ecec !=nil {_aafd .Tabs =_ecec ;};if _dabf :=_egdce .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_dabf !=nil {_aafd .TemplateInstantiated =_dabf ;};if _bdee :=_egdce .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_bdee !=nil {_aafd .PresSteps =_bdee ;};if _bdbfc :=_egdce .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_bdbfc !=nil {_aafd .UserUnit =_bdbfc ;};if _edfgca :=_egdce .Get ("\u0056\u0050");_edfgca !=nil {_aafd .VP =_edfgca ;};if _afda :=_egdce .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_afda !=nil {_aafd .Annots =_afda ;};_aafd ._dgefg =_ggebf ;return _aafd ,nil ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_eggd :_eec .MakeIndirectObject (_eec .MakeDict ())};};func (_fecdf *LTV )getCRLs (_fbcb []*_ga .Certificate )([][]byte ,error ){_gbgegc :=make ([][]byte ,0,len (_fbcb ));for _ ,_beegcf :=range _fbcb {for _ ,_fggad :=range _beegcf .CRLDistributionPoints {if _fecdf .CertClient .IsCA (_beegcf ){continue ;};_eafgc ,_gddbe :=_fecdf .CRLClient .MakeRequest (_fggad ,_beegcf );if _gddbe !=nil {_bfg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_gddbe );continue ;};_gbgegc =append (_gbgegc ,_eafgc );};};return _gbgegc ,nil ;};func (_dcef *PdfReader )newPdfAnnotationStrikeOut (_fgdf *_eec .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_abf :=PdfAnnotationStrikeOut {};_aacf ,_ece :=_dcef .newPdfAnnotationMarkupFromDict (_fgdf );if _ece !=nil {return nil ,_ece ;};_abf .PdfAnnotationMarkup =_aacf ;_abf .QuadPoints =_fgdf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_abf ,nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_gabg *pdfFontType0 )ToPdfObject ()_eec .PdfObject {if _gabg ._aebd ==nil {_gabg ._aebd =&_eec .PdfIndirectObject {};};_eabd :=_gabg .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_gabg ._aebd .PdfObject =_eabd ;if _gabg .Encoding !=nil {_eabd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gabg .Encoding );}else if _gabg ._edff !=nil {_eabd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gabg ._edff .ToPdfObject ());};if _gabg .DescendantFont !=nil {_eabd .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_eec .MakeArray (_gabg .DescendantFont .ToPdfObject ()));};return _gabg ._aebd ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _eec .PdfObject ;BS _eec .PdfObject ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _bf .Time ;};

// Val returns the color value.
func (_ggfca *PdfColorDeviceGray )Val ()float64 {return float64 (*_ggfca )};

// ToPdfObject implements interface PdfModel.
func (_eee *PdfActionImportData )ToPdfObject ()_eec .PdfObject {_eee .PdfAction .ToPdfObject ();_ddea :=_eee ._aa ;_dcc :=_ddea .PdfObject .(*_eec .PdfObjectDictionary );_dcc .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeImportData )));if _eee .F !=nil {_dcc .Set ("\u0046",_eee .F .ToPdfObject ());};return _ddea ;};func (_aac *PdfReader )newPdfActionJavaScriptFromDict (_dbc *_eec .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_dbc .Get ("\u004a\u0053")},nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_gdagf *PdfFunctionType0 )ToPdfObject ()_eec .PdfObject {if _gdagf ._deae ==nil {_gdagf ._deae =&_eec .PdfObjectStream {};};_dcbc :=_eec .MakeDict ();_dcbc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_eec .MakeInteger (0));_ccfga :=&_eec .PdfObjectArray {};for _ ,_cggagc :=range _gdagf .Domain {_ccfga .Append (_eec .MakeFloat (_cggagc ));};_dcbc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ccfga );_dbef :=&_eec .PdfObjectArray {};for _ ,_adaab :=range _gdagf .Range {_dbef .Append (_eec .MakeFloat (_adaab ));};_dcbc .Set ("\u0052\u0061\u006eg\u0065",_dbef );_cgedf :=&_eec .PdfObjectArray {};for _ ,_gggd :=range _gdagf .Size {_cgedf .Append (_eec .MakeInteger (int64 (_gggd )));};_dcbc .Set ("\u0053\u0069\u007a\u0065",_cgedf );_dcbc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_eec .MakeInteger (int64 (_gdagf .BitsPerSample )));if _gdagf .Order !=1{_dcbc .Set ("\u004f\u0072\u0064e\u0072",_eec .MakeInteger (int64 (_gdagf .Order )));};_dcbc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_eec .MakeInteger (int64 (len (_gdagf ._bfgd ))));_gdagf ._deae .Stream =_gdagf ._bfgd ;_gdagf ._deae .PdfObjectDictionary =_dcbc ;return _gdagf ._deae ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_gbcg *PdfColorspaceCalRGB )ToPdfObject ()_eec .PdfObject {_cebc :=&_eec .PdfObjectArray {};_cebc .Append (_eec .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_acbe :=_eec .MakeDict ();if _gbcg .WhitePoint !=nil {_gfaf :=_eec .MakeArray (_eec .MakeFloat (_gbcg .WhitePoint [0]),_eec .MakeFloat (_gbcg .WhitePoint [1]),_eec .MakeFloat (_gbcg .WhitePoint [2]));_acbe .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gfaf );}else {_bfg .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");};if _gbcg .BlackPoint !=nil {_eaea :=_eec .MakeArray (_eec .MakeFloat (_gbcg .BlackPoint [0]),_eec .MakeFloat (_gbcg .BlackPoint [1]),_eec .MakeFloat (_gbcg .BlackPoint [2]));_acbe .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_eaea );};if _gbcg .Gamma !=nil {_afgb :=_eec .MakeArray (_eec .MakeFloat (_gbcg .Gamma [0]),_eec .MakeFloat (_gbcg .Gamma [1]),_eec .MakeFloat (_gbcg .Gamma [2]));_acbe .Set ("\u0047\u0061\u006dm\u0061",_afgb );};if _gbcg .Matrix !=nil {_fcag :=_eec .MakeArray (_eec .MakeFloat (_gbcg .Matrix [0]),_eec .MakeFloat (_gbcg .Matrix [1]),_eec .MakeFloat (_gbcg .Matrix [2]),_eec .MakeFloat (_gbcg .Matrix [3]),_eec .MakeFloat (_gbcg .Matrix [4]),_eec .MakeFloat (_gbcg .Matrix [5]),_eec .MakeFloat (_gbcg .Matrix [6]),_eec .MakeFloat (_gbcg .Matrix [7]),_eec .MakeFloat (_gbcg .Matrix [8]));_acbe .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fcag );};_cebc .Append (_acbe );if _gbcg ._bag !=nil {_gbcg ._bag .PdfObject =_cebc ;return _gbcg ._bag ;};return _cebc ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bbfefb *PdfShadingType3 )ToPdfObject ()_eec .PdfObject {_bbfefb .PdfShading .ToPdfObject ();_baead ,_ddgc :=_bbfefb .getShadingDict ();if _ddgc !=nil {_bfg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _bbfefb .Coords !=nil {_baead .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_bbfefb .Coords );};if _bbfefb .Domain !=nil {_baead .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bbfefb .Domain );};if _bbfefb .Function !=nil {if len (_bbfefb .Function )==1{_baead .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bbfefb .Function [0].ToPdfObject ());}else {_egdcc :=_eec .MakeArray ();for _ ,_aaef :=range _bbfefb .Function {_egdcc .Append (_aaef .ToPdfObject ());};_baead .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egdcc );};};if _bbfefb .Extend !=nil {_baead .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_bbfefb .Extend );};return _bbfefb ._fbeg ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_eec .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_beaf *_eec .PdfIndirectObject ;};func _bafd (_cegc *PdfPage )map[_eec .PdfObjectName ]_eec .PdfObject {_eac :=make (map[_eec .PdfObjectName ]_eec .PdfObject );if _cegc .Resources ==nil {return _eac ;};if _cegc .Resources .Font !=nil {if _face ,_bfad :=_eec .GetDict (_cegc .Resources .Font );_bfad {for _ ,_bgdd :=range _face .Keys (){_eac [_bgdd ]=_face .Get (_bgdd );};};};if _cegc .Resources .ExtGState !=nil {if _dacc ,_eaac :=_eec .GetDict (_cegc .Resources .ExtGState );_eaac {for _ ,_cgce :=range _dacc .Keys (){_eac [_cgce ]=_dacc .Get (_cgce );};};};if _cegc .Resources .XObject !=nil {if _gfac ,_fbee :=_eec .GetDict (_cegc .Resources .XObject );_fbee {for _ ,_cfdc :=range _gfac .Keys (){_eac [_cfdc ]=_gfac .Get (_cfdc );};};};if _cegc .Resources .Pattern !=nil {if _addgb ,_fafc :=_eec .GetDict (_cegc .Resources .Pattern );_fafc {for _ ,_aff :=range _addgb .Keys (){_eac [_aff ]=_addgb .Get (_aff );};};};if _cegc .Resources .Shading !=nil {if _afcb ,_bcfg :=_eec .GetDict (_cegc .Resources .Shading );_bcfg {for _ ,_cdca :=range _afcb .Keys (){_eac [_cdca ]=_afcb .Get (_cdca );};};};if _cegc .Resources .ProcSet !=nil {if _aeec ,_gcgc :=_eec .GetDict (_cegc .Resources .ProcSet );_gcgc {for _ ,_aabb :=range _aeec .Keys (){_eac [_aabb ]=_aeec .Get (_aabb );};};};if _cegc .Resources .Properties !=nil {if _egfd ,_gedag :=_eec .GetDict (_cegc .Resources .Properties );_gedag {for _ ,_ggfg :=range _egfd .Keys (){_eac [_ggfg ]=_egfd .Get (_ggfg );};};};return _eac ;};func (_gbdf *PdfReader )resolveReference (_abbae *_eec .PdfObjectReference )(_eec .PdfObject ,bool ,error ){_ccfa ,_gggde :=_gbdf ._ggagaa .ObjCache [int (_abbae .ObjectNumber )];if !_gggde {_bfg .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_abbae );_bbece ,_gaea :=_gbdf ._ggagaa .LookupByReference (*_abbae );if _gaea !=nil {return nil ,false ,_gaea ;};_gbdf ._ggagaa .ObjCache [int (_abbae .ObjectNumber )]=_bbece ;return _bbece ,false ,nil ;};return _ccfa ,true ,nil ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _eec .PdfObject ;IC _eec .PdfObject ;BE _eec .PdfObject ;RD _eec .PdfObject ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_gaaed *PdfPageResources )GenerateXObjectName ()_eec .PdfObjectName {_bgdbd :=1;for {_dcga :=_eec .MakeName (_b .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_bgdbd ));if !_gaaed .HasXObjectByName (*_dcga ){return *_dcga ;};_bgdbd ++;};};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_cadcf :=&XObjectImage {};_bgcdc :=&_eec .PdfObjectStream {};_bgcdc .PdfObjectDictionary =_eec .MakeDict ();_cadcf ._cgdaf =_bgcdc ;return _cadcf ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_eacc :=&PdfColorspaceCalRGB {};_eacc .BlackPoint =[]float64 {0.0,0.0,0.0};_eacc .Gamma =[]float64 {1.0,1.0,1.0};_eacc .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _eacc ;};

// String implements interface PdfObject.
func (_eae *PdfAction )String ()string {_eadc ,_eg :=_eae .ToPdfObject ().(*_eec .PdfIndirectObject );if _eg {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_eae ._ce ,_eadc .PdfObject .String ());};return "";};func (_eagbe *PdfShading )getShadingDict ()(*_eec .PdfObjectDictionary ,error ){_dgced :=_eagbe ._fbeg ;if _efdc ,_egaf :=_dgced .(*_eec .PdfIndirectObject );_egaf {_ddfdc ,_bcee :=_efdc .PdfObject .(*_eec .PdfObjectDictionary );if !_bcee {return nil ,_eec .ErrTypeError ;};return _ddfdc ,nil ;}else if _aeeag ,_dbgc :=_dgced .(*_eec .PdfObjectStream );_dbgc {return _aeeag .PdfObjectDictionary ,nil ;}else if _egbd ,_dbgga :=_dgced .(*_eec .PdfObjectDictionary );_dbgga {return _egbd ,nil ;}else {_bfg .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_eec .ErrTypeError ;};};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_fcb .SimpleEncoder ,error ){_cadc ,_dfga :=_fdfec (basefont );if _dfga !=nil {return nil ,nil ,_dfga ;};_efddf ,_efefa :=_cadc .Encoder ().(_fcb .SimpleEncoder );if !_efefa {return nil ,nil ,_b .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_cadc .Encoder ());};_aca :=make (map[rune ]_fcb .GlyphName );for _gbcgf :=range alphabet {if _ ,_dbfa :=_efddf .RuneToCharcode (_gbcgf );!_dbfa {_ ,_caaa :=_cadc ._fcage [_gbcgf ];if !_caaa {_bfg .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_gbcgf ,_gbcgf );continue ;};_acba ,_caaa :=_fcb .RuneToGlyph (_gbcgf );if !_caaa {_bfg .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_gbcgf ,_gbcgf );continue ;};if len (_aca )>=255{return nil ,nil ,_fe .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");};_aca [_gbcgf ]=_acba ;};};var (_cfcd []_fcb .CharCode ;_ceeeg []_fcb .CharCode ;);for _bffe :=_fcb .CharCode (1);_bffe <=0xff;_bffe ++{_efgd ,_fdac :=_efddf .CharcodeToRune (_bffe );if !_fdac {_cfcd =append (_cfcd ,_bffe );continue ;};if _ ,_fdac =alphabet [_efgd ];!_fdac {_ceeeg =append (_ceeeg ,_bffe );};};_cbgf :=append (_cfcd ,_ceeeg ...);if len (_cbgf )< len (_aca ){return nil ,nil ,_b .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_aca ),len (_cbgf ));};_dabaa :=make ([]rune ,0,len (_aca ));for _gddef :=range _aca {_dabaa =append (_dabaa ,_gddef );};_fb .Slice (_dabaa ,func (_cgdc ,_ffgc int )bool {return _dabaa [_cgdc ]< _dabaa [_ffgc ]});_ccba :=make (map[_fcb .CharCode ]_fcb .GlyphName ,len (_dabaa ));for _ ,_abdee :=range _dabaa {_cegcf :=_cbgf [0];_cbgf =_cbgf [1:];_ccba [_cegcf ]=_aca [_abdee ];};_efddf =_fcb .ApplyDifferences (_efddf ,_ccba );_cadc .SetEncoder (_efddf );return &PdfFont {_baaf :&_cadc },_efddf ,nil ;};func (_cbca *DSS )generateHashMap (_fcfec []*_eec .PdfObjectStream )(map[string ]*_eec .PdfObjectStream ,error ){_agbg :=map[string ]*_eec .PdfObjectStream {};for _ ,_febg :=range _fcfec {_bdda ,_adaf :=_eec .DecodeStream (_febg );if _adaf !=nil {return nil ,_adaf ;};_eaag ,_adaf :=_edgdg (_bdda );if _adaf !=nil {return nil ,_adaf ;};_agbg [string (_eaag )]=_febg ;};return _agbg ,nil ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_gaad *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_bfab :=0.3*_gaad .R ()+0.59*_gaad .G ()+0.11*_gaad .B ();_bfab =_fba .Min (_fba .Max (_bfab ,0.0),1.0);return NewPdfColorDeviceGray (_bfab );};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_dffgb *PdfField )Flags ()FieldFlag {var _fabb FieldFlag ;_cadec ,_ffdcb :=_dffgb .inherit (func (_edgcg *PdfField )bool {if _edgcg .Ff !=nil {_fabb =FieldFlag (*_dffgb .Ff );return true ;};return false ;});if _ffdcb !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_ffdcb );};if !_cadec {_bfg .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _fabb ;};

// SetAction sets the PDF action for the annotation link.
func (_adbe *PdfAnnotationLink )SetAction (action *PdfAction ){_adbe ._gdf =action ;if action ==nil {_adbe .A =nil ;};};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_bfgda *PdfPattern )GetContext ()PdfModel {return _bfgda ._cdbgf };

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_cbfg ,_abcc :=_cd .Open (filePath );if _abcc !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_abcc );return nil ,_abcc ;};defer _cbfg .Close ();return NewPdfFontFromTTF (_cbfg );};func (_ggdca fontCommon )fontFlags ()int {if _ggdca ._cddbf ==nil {return 0;};return _ggdca ._cddbf ._fcdcb ;};func (_bece *PdfReader )newPdfFieldSignatureFromDict (_abca *_eec .PdfObjectDictionary )(*PdfFieldSignature ,error ){_beab :=&PdfFieldSignature {};_cbeaa ,_fddf :=_eec .GetIndirect (_abca .Get ("\u0056"));if _fddf {var _bcdfa error ;_beab .V ,_bcdfa =_bece .newPdfSignatureFromIndirect (_cbeaa );if _bcdfa !=nil {return nil ,_bcdfa ;};};_beab .Lock ,_ =_eec .GetIndirect (_abca .Get ("\u004c\u006f\u0063\u006b"));_beab .SV ,_ =_eec .GetIndirect (_abca .Get ("\u0053\u0056"));return _beab ,nil ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_caddd *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _eec .GetNumberAsFloat (_caddd .Descent );};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_bgcc int64 ;_dbbdc int64 ;_dbcbf int64 ;_dbfcf int64 ;_bebab int64 ;_gdfec int64 ;_caab byte ;_acbag int64 ;_dege int64 ;};func (_agf *PdfReader )newPdfAnnotationCircleFromDict (_daf *_eec .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_gdb :=PdfAnnotationCircle {};_eeec ,_fed :=_agf .newPdfAnnotationMarkupFromDict (_daf );if _fed !=nil {return nil ,_fed ;};_gdb .PdfAnnotationMarkup =_eeec ;_gdb .BS =_daf .Get ("\u0042\u0053");_gdb .IC =_daf .Get ("\u0049\u0043");_gdb .BE =_daf .Get ("\u0042\u0045");_gdb .RD =_daf .Get ("\u0052\u0044");return &_gdb ,nil ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_ddfa *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_gda PdfModel ;Rect _eec .PdfObject ;Contents _eec .PdfObject ;P _eec .PdfObject ;NM _eec .PdfObject ;M _eec .PdfObject ;F _eec .PdfObject ;AP _eec .PdfObject ;AS _eec .PdfObject ;Border _eec .PdfObject ;C _eec .PdfObject ;StructParent _eec .PdfObject ;OC _eec .PdfObject ;_dge *_eec .PdfIndirectObject ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _eec .PdfObject ;FS _eec .PdfObject ;F _eec .PdfObject ;UF _eec .PdfObject ;DOS _eec .PdfObject ;Mac _eec .PdfObject ;Unix _eec .PdfObject ;ID _eec .PdfObject ;V _eec .PdfObject ;EF _eec .PdfObject ;RF _eec .PdfObject ;Desc _eec .PdfObject ;CI _eec .PdfObject ;_fdecf _eec .PdfObject ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_cadg *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_gcgb :=func (_bebge float64 )float64 {if _bebge >=6.0/29{return _bebge *_bebge *_bebge ;};return 108.0/841*(_bebge -4/29);};_gegf :=img ._cbacg ;if len (_gegf )!=6{_bfg .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");_gegf =_cadg .DecodeArray ();};_cebf :=_efe .NewReader (img .getBase ());_ccgb :=_fc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._gfbc ,img ._cbacg );_aace :=_efe .NewWriter (_ccgb );_edbf :=_fba .Pow (2,float64 (img .BitsPerComponent ))-1;_gdcbf :=make ([]uint32 ,3);var (_dddb error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_ccgbc ,_fgde ,_aabbc float64 ;);for {_dddb =_cebf .ReadSamples (_gdcbf );if _dddb ==_dd .EOF {break ;}else if _dddb !=nil {return img ,_dddb ;};Ls =float64 (_gdcbf [0])/_edbf ;As =float64 (_gdcbf [1])/_edbf ;Bs =float64 (_gdcbf [2])/_edbf ;Ls =_fc .LinearInterpolate (Ls ,0.0,1.0,_gegf [0],_gegf [1]);As =_fc .LinearInterpolate (As ,0.0,1.0,_gegf [2],_gegf [3]);Bs =_fc .LinearInterpolate (Bs ,0.0,1.0,_gegf [4],_gegf [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_cadg .WhitePoint [0]*_gcgb (L );Y =_cadg .WhitePoint [1]*_gcgb (M );Z =_cadg .WhitePoint [2]*_gcgb (N );_ccgbc =3.240479*X +-1.537150*Y +-0.498535*Z ;_fgde =-0.969256*X +1.875992*Y +0.041556*Z ;_aabbc =0.055648*X +-0.204043*Y +1.057311*Z ;_ccgbc =_fba .Min (_fba .Max (_ccgbc ,0),1.0);_fgde =_fba .Min (_fba .Max (_fgde ,0),1.0);_aabbc =_fba .Min (_fba .Max (_aabbc ,0),1.0);_gdcbf [0]=uint32 (_ccgbc *_edbf );_gdcbf [1]=uint32 (_fgde *_edbf );_gdcbf [2]=uint32 (_aabbc *_edbf );if _dddb =_aace .WriteSamples (_gdcbf );_dddb !=nil {return img ,_dddb ;};};return _bffcg (&_ccgb ),nil ;};

// SetForms sets the Acroform for a PDF file.
func (_cgdcd *PdfWriter )SetForms (form *PdfAcroForm )error {_cgdcd ._fcgga =form ;return nil };

// ToPdfObject converts rectangle to a PDF object.
func (_acbd *PdfRectangle )ToPdfObject ()_eec .PdfObject {return _eec .MakeArray (_eec .MakeFloat (_acbd .Llx ),_eec .MakeFloat (_acbd .Lly ),_eec .MakeFloat (_acbd .Urx ),_eec .MakeFloat (_acbd .Ury ));};func _fcede (_dgcb *_eec .PdfIndirectObject ,_fdfef *_eec .PdfObjectDictionary )(*DSS ,error ){if _dgcb ==nil {_dgcb =_eec .MakeIndirectObject (nil );};_dgcb .PdfObject =_eec .MakeDict ();_fdcg :=map[string ]*VRI {};if _fdfdg ,_afed :=_eec .GetDict (_fdfef .Get ("\u0056\u0052\u0049"));_afed {for _ ,_dgde :=range _fdfdg .Keys (){if _bbfaf ,_dgdf :=_eec .GetDict (_fdfdg .Get (_dgde ));_dgdf {_fdcg [_beb .ToUpper (_dgde .String ())]=_ggg (_bbfaf );};};};return &DSS {Certs :_decbb (_fdfef .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_decbb (_fdfef .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_decbb (_fdfef .Get ("\u0043\u0052\u004c\u0073")),VRI :_fdcg ,_ggaf :_dgcb },nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_bedbf *PdfReader )GetOutlines ()(*Outline ,error ){if _bedbf ==nil {return nil ,_fe .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");};_bccbc :=_bedbf .GetOutlineTree ();if _bccbc ==nil {return nil ,_fe .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");};var _cdffda func (_ecca *PdfOutlineTreeNode ,_gdgg *[]*OutlineItem );_cdffda =func (_gdgff *PdfOutlineTreeNode ,_ggdcg *[]*OutlineItem ){if _gdgff ==nil {return ;};if _gdgff ._geaac ==nil {_bfg .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");return ;};var _aadca *OutlineItem ;if _fbfc ,_bfde :=_gdgff ._geaac .(*PdfOutlineItem );_bfde {_edace :=_fbfc .Dest ;if (_edace ==nil ||_eec .IsNullObject (_edace ))&&_fbfc .A !=nil {if _ceffe ,_egeed :=_eec .GetDict (_fbfc .A );_egeed {_edace ,_ =_eec .GetArray (_ceffe .Get ("\u0044"));};};var _ddbed OutlineDest ;if _edace !=nil &&!_eec .IsNullObject (_edace ){if _cbecc ,_dfcdc :=_ccbga (_edace ,_bedbf );_dfcdc ==nil {_ddbed =*_cbecc ;}else {_bfg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_edace ,_dfcdc );};};_aadca =NewOutlineItem (_fbfc .Title .Decoded (),_ddbed );*_ggdcg =append (*_ggdcg ,_aadca );if _fbfc .Next !=nil {_cdffda (_fbfc .Next ,_ggdcg );};};if _gdgff .First !=nil {if _aadca !=nil {_ggdcg =&_aadca .Entries ;};_cdffda (_gdgff .First ,_ggdcg );};};_cabgce :=NewOutline ();_cdffda (_bccbc ,&_cabgce .Entries );return _cabgce ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cfad *PdfAnnotationCircle )ToPdfObject ()_eec .PdfObject {_cfad .PdfAnnotation .ToPdfObject ();_cbcd :=_cfad ._dge ;_abgf :=_cbcd .PdfObject .(*_eec .PdfObjectDictionary );_cfad .PdfAnnotationMarkup .appendToPdfDictionary (_abgf );_abgf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));_abgf .SetIfNotNil ("\u0042\u0053",_cfad .BS );_abgf .SetIfNotNil ("\u0049\u0043",_cfad .IC );_abgf .SetIfNotNil ("\u0042\u0045",_cfad .BE );_abgf .SetIfNotNil ("\u0052\u0044",_cfad .RD );return _cbcd ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_dbgg *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dbgg .Alternate ==nil {_bfg .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _dbgg .N ==1{_bfg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_ggbb :=NewPdfColorspaceDeviceGray ();return _ggbb .ColorToRGB (color );}else if _dbgg .N ==3{_bfg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return color ,nil ;}else if _dbgg .N ==4{_bfg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_ffec :=NewPdfColorspaceDeviceCMYK ();return _ffec .ColorToRGB (color );}else {return nil ,_fe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_bfg .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_dbgg );return _dbgg .Alternate .ColorToRGB (color );};func (_cdbbb fontCommon )asPdfObjectDictionary (_ccfb string )*_eec .PdfObjectDictionary {if _ccfb !=""&&_cdbbb ._bgga !=""&&_ccfb !=_cdbbb ._bgga {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_ccfb ,_cdbbb );}else if _ccfb ==""&&_cdbbb ._bgga ==""{_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cdbbb );}else if _cdbbb ._bgga ==""{_cdbbb ._bgga =_ccfb ;};_cabbc :=_eec .MakeDict ();_cabbc .Set ("\u0054\u0079\u0070\u0065",_eec .MakeName ("\u0046\u006f\u006e\u0074"));_cabbc .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_eec .MakeName (_cdbbb ._cefc ));_cabbc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName (_cdbbb ._bgga ));if _cdbbb ._cddbf !=nil {_cabbc .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_cdbbb ._cddbf .ToPdfObject ());};if _cdbbb ._fbgg !=nil {_cabbc .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_cdbbb ._fbgg );}else if _cdbbb ._ecab !=nil {_fgcb ,_gddcd :=_cdbbb ._ecab .Stream ();if _gddcd !=nil {_bfg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_gddcd );}else {_cabbc .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_fgcb );};};return _cabbc ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_bcgd *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_cbgd ,_bcce :=color .(*PdfColorDeviceCMYK );if !_bcce {_bfg .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cacfd :=_cbgd .C ();_abdf :=_cbgd .M ();_bebgg :=_cbgd .Y ();_bab :=_cbgd .K ();_cacfd =_cacfd *(1-_bab )+_bab ;_abdf =_abdf *(1-_bab )+_bab ;_bebgg =_bebgg *(1-_bab )+_bab ;_gddea :=1-_cacfd ;_bfaa :=1-_abdf ;_aabd :=1-_bebgg ;return NewPdfColorDeviceRGB (_gddea ,_bfaa ,_aabd ),nil ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_adab *PdfReader )GetTrailer ()(*_eec .PdfObjectDictionary ,error ){_fbfbb :=_adab ._ggagaa .GetTrailer ();if _fbfbb ==nil {return nil ,_fe .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _fbfbb ,nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_beegd PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _beegd ._baaf .getFontDescriptor (),nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_acce *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func _bgbef (_afcc *_eec .PdfObjectDictionary )(*PdfShadingType1 ,error ){_aeff :=PdfShadingType1 {};if _feabf :=_afcc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_feabf !=nil {_feabf =_eec .TraceToDirectObject (_feabf );_abae ,_gbbb :=_feabf .(*_eec .PdfObjectArray );if !_gbbb {_bfg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_feabf );return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aeff .Domain =_abae ;};if _gaee :=_afcc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gaee !=nil {_gaee =_eec .TraceToDirectObject (_gaee );_ddae ,_daff :=_gaee .(*_eec .PdfObjectArray );if !_daff {_bfg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gaee );return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aeff .Matrix =_ddae ;};_degcf :=_afcc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _degcf ==nil {_bfg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_aeff .Function =[]PdfFunction {};if _dagg ,_faag :=_degcf .(*_eec .PdfObjectArray );_faag {for _ ,_gcff :=range _dagg .Elements (){_afac ,_ebecb :=_bdfbe (_gcff );if _ebecb !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebecb );return nil ,_ebecb ;};_aeff .Function =append (_aeff .Function ,_afac );};}else {_fedcd ,_cegac :=_bdfbe (_degcf );if _cegac !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cegac );return nil ,_cegac ;};_aeff .Function =append (_aeff .Function ,_fedcd );};return &_aeff ,nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _eec .PdfObject ;H _eec .PdfObject ;};func (_cggd *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// String returns a string that describes `base`.
func (_bced fontCommon )String ()string {return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_bced .coreString ());};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_cffc *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_cfaf *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _eec .GetNumberAsFloat (_cfaf .CapHeight );};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_bedf :_eec .MakeIndirectObject (_eec .MakeDict ())}};

// ToInteger convert to an integer format.
func (_dafd *PdfColorLab )ToInteger (bits int )[3]uint32 {_efef :=_fba .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_efef *_dafd .L ()),uint32 (_efef *_dafd .A ()),uint32 (_efef *_dafd .B ())};};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_ebcg ,_eddbb :=_de .NewStdFontByName (HelveticaName );if !_eddbb {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");};_bded :=_degfg (_ebcg );return &PdfFont {_baaf :&_bded };};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_feae *Image )Resample (targetBitsPerComponent int64 ){if _feae .BitsPerComponent ==targetBitsPerComponent {return ;};_ffaf :=_feae .GetSamples ();if targetBitsPerComponent < _feae .BitsPerComponent {_ecddgc :=_feae .BitsPerComponent -targetBitsPerComponent ;for _gfdab :=range _ffaf {_ffaf [_gfdab ]>>=uint (_ecddgc );};}else if targetBitsPerComponent > _feae .BitsPerComponent {_fdbda :=targetBitsPerComponent -_feae .BitsPerComponent ;for _aebaf :=range _ffaf {_ffaf [_aebaf ]<<=uint (_fdbda );};};_feae .BitsPerComponent =targetBitsPerComponent ;if _feae .BitsPerComponent < 8{_feae .resampleLowBits (_ffaf );return ;};_fafd :=_fc .BytesPerLine (int (_feae .Width ),int (_feae .BitsPerComponent ),_feae .ColorComponents );_bgaff :=make ([]byte ,_fafd *int (_feae .Height ));var (_dgec ,_agdc ,_dfee ,_febae int ;_fbgba uint32 ;);for _dfee =0;_dfee < int (_feae .Height );_dfee ++{_dgec =_dfee *_fafd ;_agdc =(_dfee +1)*_fafd -1;_dfgfd :=_efe .ResampleUint32 (_ffaf [_dgec :_agdc ],int (targetBitsPerComponent ),8);for _febae ,_fbgba =range _dfgfd {_bgaff [_febae +_dgec ]=byte (_fbgba );};};_feae .Data =_bgaff ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _eec .PdfObject ;};

// SetContentStream sets the pattern cell's content stream.
func (_dbfbc *PdfTilingPattern )SetContentStream (content []byte ,encoder _eec .StreamEncoder )error {_bggfd ,_gdece :=_dbfbc ._ggede .(*_eec .PdfObjectStream );if !_gdece {_bfg .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbfbc ._ggede );return _eec .ErrTypeError ;};if encoder ==nil {encoder =_eec .NewRawEncoder ();};_bfaae :=_bggfd .PdfObjectDictionary ;_ggaff :=encoder .MakeStreamDict ();_bfaae .Merge (_ggaff );_eagcce ,_egfeg :=encoder .EncodeBytes (content );if _egfeg !=nil {return _egfeg ;};_bfaae .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_eec .MakeInteger (int64 (len (_eagcce ))));_bggfd .Stream =_eagcce ;return nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_bdegf *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _bdegf .RunesToCharcodeBytes ([]rune (str ));};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_bfafc *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _badf []float64 ;for _gfef :=0;_gfef < _bfafc .GetNumComponents ();_gfef ++{_badf =append (_badf ,0.0,1.0);};return _badf ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ecgc *PdfAnnotation )GetContainingPdfObject ()_eec .PdfObject {return _ecgc ._dge };func _ddgd (_ffgbc _eec .PdfObject ,_fefcf bool )(*PdfFont ,error ){_cacdf ,_gdgb ,_bddg :=_agead (_ffgbc );if _bddg !=nil {if _bddg ==ErrType3FontNotSupported ||_bddg ==ErrType1CFontNotSupported {_eeefd ,_ddffg :=_fbfaf (_cacdf ,_gdgb ,nil );if _ddffg !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_gdgb ,_ddffg );return nil ,_bddg ;};return &PdfFont {_baaf :_eeefd },_bddg ;};return nil ,_bddg ;};_ecbcgg :=&PdfFont {};switch _gdgb ._bgga {case "\u0054\u0079\u0070e\u0030":if !_fefcf {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gdgb );return nil ,_fe .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_dgag ,_aafgg :=_bbfcf (_cacdf ,_gdgb );if _aafgg !=nil {_bfg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gdgb ,_aafgg );return nil ,_aafgg ;};_ecbcgg ._baaf =_dgag ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _ggecf *pdfFontSimple ;_aece ,_fcefc :=_de .NewStdFontByName (_de .StdFontName (_gdgb ._cefc ));if _fcefc {_eeabe :=_degfg (_aece );_ecbcgg ._baaf =&_eeabe ;_aaaaf :=_eec .TraceToDirectObject (_eeabe .ToPdfObject ());_bbef ,_gfda ,_ddebg :=_agead (_aaaaf );if _ddebg !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_gdgb ,_eeabe );return nil ,_ddebg ;};for _ ,_eggf :=range _cacdf .Keys (){_bbef .Set (_eggf ,_cacdf .Get (_eggf ));};_ggecf ,_ddebg =_fbfaf (_bbef ,_gfda ,_eeabe ._gdbead );if _ddebg !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_gdgb ,_eeabe );return nil ,_ddebg ;};_ggecf ._fgabb =_eeabe ._fgabb ;_ggecf ._fcage =_eeabe ._fcage ;}else {_ggecf ,_bddg =_fbfaf (_cacdf ,_gdgb ,nil );if _bddg !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_gdgb ,_bddg );return nil ,_bddg ;};};_bddg =_ggecf .addEncoding ();if _bddg !=nil {return nil ,_bddg ;};if _fcefc {_ggecf .updateStandard14Font ();};if _fcefc &&_ggecf ._acfd ==nil &&_ggecf ._gdbead ==nil {_bfg .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ggecf );_bfg .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_aece );};if len (_ggecf ._fgabb )==0{_bfg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_ggecf );};_ecbcgg ._baaf =_ggecf ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_edgf ,_ffdaf :=_bbge (_cacdf ,_gdgb );if _ffdaf !=nil {_bfg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_ffdaf );return nil ,_ffdaf ;};_ecbcgg ._baaf =_edgf ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_eeba ,_dgce :=_agedb (_cacdf ,_gdgb );if _dgce !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gdgb ,_dgce );return nil ,_dgce ;};_ecbcgg ._baaf =_eeba ;default:_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_gdgb );return nil ,_b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gdgb );};return _ecbcgg ,nil ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_gacf *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func (_gdac *PdfReader )newPdfAnnotationTextFromDict (_daaa *_eec .PdfObjectDictionary )(*PdfAnnotationText ,error ){_eeef :=PdfAnnotationText {};_gafd ,_edcb :=_gdac .newPdfAnnotationMarkupFromDict (_daaa );if _edcb !=nil {return nil ,_edcb ;};_eeef .PdfAnnotationMarkup =_gafd ;_eeef .Open =_daaa .Get ("\u004f\u0070\u0065\u006e");_eeef .Name =_daaa .Get ("\u004e\u0061\u006d\u0065");_eeef .State =_daaa .Get ("\u0053\u0074\u0061t\u0065");_eeef .StateModel =_daaa .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_eeef ,nil ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _eec .PdfObject ;RichMediaContent _eec .PdfObject ;};func (_cgfa *PdfReader )newPdfAnnotationSoundFromDict (_gbgb *_eec .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_bfga :=PdfAnnotationSound {};_bcdc ,_ggeg :=_cgfa .newPdfAnnotationMarkupFromDict (_gbgb );if _ggeg !=nil {return nil ,_ggeg ;};_bfga .PdfAnnotationMarkup =_bcdc ;_bfga .Name =_gbgb .Get ("\u004e\u0061\u006d\u0065");_bfga .Sound =_gbgb .Get ("\u0053\u006f\u0075n\u0064");return &_bfga ,nil ;};func _caef (_bfage *[]*PdfField ,_faeag FieldFilterFunc ,_aeebf bool )[]*PdfField {if _bfage ==nil {return nil ;};_cccea :=*_bfage ;if len (*_bfage )==0{return nil ;};_dcaeb :=_cccea [:0];if _faeag ==nil {_faeag =func (*PdfField )bool {return true };};var _fggbd []*PdfField ;for _ ,_gdffe :=range _cccea {_ffebd :=_faeag (_gdffe );if _ffebd {_fggbd =append (_fggbd ,_gdffe );if len (_gdffe .Kids )> 0{_fggbd =append (_fggbd ,_caef (&_gdffe .Kids ,_faeag ,_aeebf )...);};};if !_aeebf ||!_ffebd ||len (_gdffe .Kids )> 0{_dcaeb =append (_dcaeb ,_gdffe );};};*_bfage =_dcaeb ;return _fggbd ;};

// ImageToRGB convert an indexed image to RGB.
func (_ccbc *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_ccbc .Base .GetNumComponents ();if N < 1{return Image {},_b .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );};_fdgf :=_fc .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._gfbc ,img ._cbacg );_cbcf :=_efe .NewReader (img .getBase ());_bgdeb :=_efe .NewWriter (_fdgf );var (_bgaa uint32 ;_bfdd int ;_becd error ;);for {_bgaa ,_becd =_cbcf .ReadSample ();if _becd ==_dd .EOF {break ;}else if _becd !=nil {return img ,_becd ;};_bfdd =int (_bgaa );_bfg .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_bfdd ,N ,len (_ccbc ._gbff ));if (_bfdd +1)*N > len (_ccbc ._gbff ){_bfdd =len (_ccbc ._gbff )/N -1;_bfg .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_bfdd );if _bfdd < 0{_bfg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");break ;};};for _agbc :=_bfdd *N ;_agbc < (_bfdd +1)*N ;_agbc ++{if _becd =_bgdeb .WriteSample (uint32 (_ccbc ._gbff [_agbc ]));_becd !=nil {return img ,_becd ;};};};return _ccbc .Base .ImageToRGB (_bffcg (&_fdgf ));};func (_egg *PdfReader )newPdfActionGotoRFromDict (_dg *_eec .PdfObjectDictionary )(*PdfActionGoToR ,error ){_efg ,_dce :=_fecb (_dg .Get ("\u0046"));if _dce !=nil {return nil ,_dce ;};return &PdfActionGoToR {D :_dg .Get ("\u0044"),NewWindow :_dg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_efg },nil ;};

// ToPdfObject implements interface PdfModel.
func (_cdb *PdfActionThread )ToPdfObject ()_eec .PdfObject {_cdb .PdfAction .ToPdfObject ();_dc :=_cdb ._aa ;_eed :=_dc .PdfObject .(*_eec .PdfObjectDictionary );_eed .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeThread )));if _cdb .F !=nil {_eed .Set ("\u0046",_cdb .F .ToPdfObject ());};_eed .SetIfNotNil ("\u0044",_cdb .D );_eed .SetIfNotNil ("\u0042",_cdb .B );return _dc ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_fdf :=NewPdfAction ();_ff :=&PdfActionGoTo3DView {};_ff .PdfAction =_fdf ;_fdf .SetContext (_ff );return _ff ;};

// ToPdfObject returns the PDF representation of the function.
func (_fccd *PdfFunctionType2 )ToPdfObject ()_eec .PdfObject {_fdfgd :=_eec .MakeDict ();_fdfgd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_eec .MakeInteger (2));_fddag :=&_eec .PdfObjectArray {};for _ ,_dfbae :=range _fccd .Domain {_fddag .Append (_eec .MakeFloat (_dfbae ));};_fdfgd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fddag );if _fccd .Range !=nil {_aaba :=&_eec .PdfObjectArray {};for _ ,_adgg :=range _fccd .Range {_aaba .Append (_eec .MakeFloat (_adgg ));};_fdfgd .Set ("\u0052\u0061\u006eg\u0065",_aaba );};if _fccd .C0 !=nil {_gegeg :=&_eec .PdfObjectArray {};for _ ,_cefef :=range _fccd .C0 {_gegeg .Append (_eec .MakeFloat (_cefef ));};_fdfgd .Set ("\u0043\u0030",_gegeg );};if _fccd .C1 !=nil {_ebfcg :=&_eec .PdfObjectArray {};for _ ,_fbaad :=range _fccd .C1 {_ebfcg .Append (_eec .MakeFloat (_fbaad ));};_fdfgd .Set ("\u0043\u0031",_ebfcg );};_fdfgd .Set ("\u004e",_eec .MakeFloat (_fccd .N ));if _fccd ._ccfbg !=nil {_fccd ._ccfbg .PdfObject =_fdfgd ;return _fccd ._ccfbg ;};return _fdfgd ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_eadef *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");return img ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};func (_bcede *fontFile )loadFromSegments (_afbc ,_aegfa []byte )error {_bfg .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_afbc ),len (_aegfa ));_agfed :=_bcede .parseASCIIPart (_afbc );if _agfed !=nil {return _agfed ;};_bfg .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_bcede );if len (_aegfa )==0{return nil ;};_bfg .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_bcede );return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cceagg *PdfSignature )GetContainingPdfObject ()_eec .PdfObject {return _cceagg ._fgdda };

// Evaluate runs the function. Input is [x1 x2 x3].
func (_caad *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _caad ._fadaa ==nil {_caad ._fadaa =_ca .NewPSExecutor (_caad .Program );};var _accf []_ca .PSObject ;for _ ,_gdbcb :=range xVec {_accf =append (_accf ,_ca .MakeReal (_gdbcb ));};_afddd ,_efbca :=_caad ._fadaa .Execute (_accf );if _efbca !=nil {return nil ,_efbca ;};_cfee ,_efbca :=_ca .PSObjectArrayToFloat64Array (_afddd );if _efbca !=nil {return nil ,_efbca ;};return _cfee ,nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_fgfgb :=&PdfColorspaceSpecialSeparation {};return _fgfgb ;};

// GetSubFilter returns SubFilter value or empty string.
func (_edede *pdfSignDictionary )GetSubFilter ()string {_dfgccd :=_edede .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _dfgccd ==nil {return "";};if _aggdd ,_feec :=_eec .GetNameVal (_dfgccd );_feec {return _aggdd ;};return "";};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_gcce :=PdfColorDeviceRGB {r ,g ,b };return &_gcce ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_dcbd :=NewPdfAnnotation ();_bcc :=&PdfAnnotationWatermark {};_bcc .PdfAnnotation =_dcbd ;_dcbd .SetContext (_bcc );return _bcc ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bbbb *PdfWriter )SetNamedDestinations (names _eec .PdfObject )error {if names ==nil {return nil ;};_bfg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");_bbbb ._fbafd .Set ("\u004e\u0061\u006de\u0073",names );return _bbbb .addObjects (names );};

// HasExtGState checks if ExtGState name is available.
func (_ddfffb *PdfPage )HasExtGState (name _eec .PdfObjectName )bool {if _ddfffb .Resources ==nil {return false ;};if _ddfffb .Resources .ExtGState ==nil {return false ;};_agged ,_efee :=_eec .TraceToDirectObject (_ddfffb .Resources .ExtGState ).(*_eec .PdfObjectDictionary );if !_efee {_bfg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_eec .TraceToDirectObject (_ddfffb .Resources .ExtGState ));return false ;};_ddeed :=_agged .Get (name );_agbe :=_ddeed !=nil ;return _agbe ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_cfga :=appender .Reader .DSS ;if _cfga ==nil {_cfga =NewDSS ();};if _gdgdb :=_cfga .generateHashMaps ();_gdgdb !=nil {return nil ,_gdgdb ;};return &LTV {CertClient :_dea .NewCertClient (),OCSPClient :_dea .NewOCSPClient (),CRLClient :_dea .NewCRLClient (),SkipExisting :true ,_bcagf :appender ,_ceeega :_cfga },nil ;};func _bggdaa (_ggfa *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_dfad ,_cgbg :=_eec .GetDict (_ggfa .AP );if !_cgbg {return nil ,nil ,_fe .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _dfad ==nil {return nil ,nil ,nil ;};_cffcf ,_cgbg :=_eec .GetArray (_ggfa .Rect );if !_cgbg ||_cffcf .Len ()!=4{return nil ,nil ,_fe .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_agae ,_gbgeb :=NewPdfRectangle (*_cffcf );if _gbgeb !=nil {return nil ,nil ,_gbgeb ;};_gacb :=_eec .TraceToDirectObject (_dfad .Get ("\u004e"));switch _cbbc :=_gacb .(type ){case *_eec .PdfObjectStream :_edfgc :=_cbbc ;_aedab ,_fefc :=NewXObjectFormFromStream (_edfgc );return _aedab ,_agae ,_fefc ;case *_eec .PdfObjectDictionary :_fbeee :=_cbbc ;_fcdc ,_babf :=_eec .GetName (_ggfa .AS );if !_babf {return nil ,nil ,nil ;};if _fbeee .Get (*_fcdc )==nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");return nil ,nil ,nil ;};_bcdfb ,_babf :=_eec .GetStream (_fbeee .Get (*_fcdc ));if !_babf {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_fcdc );return nil ,nil ,_fe .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_efaa ,_bcda :=NewXObjectFormFromStream (_bcdfb );return _efaa ,_agae ,_bcda ;};_bfg .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_gacb );return nil ,nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_eec .PdfObjectStream ;OCSP []*_eec .PdfObjectStream ;CRL []*_eec .PdfObjectStream ;TU *_eec .PdfObjectString ;TS *_eec .PdfObjectString ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _eec .PdfObject ;Sy _eec .PdfObject ;};func (_cadd *PdfAnnotationMarkup )appendToPdfDictionary (_bbfa *_eec .PdfObjectDictionary ){_bbfa .SetIfNotNil ("\u0054",_cadd .T );if _cadd .Popup !=nil {_bbfa .Set ("\u0050\u006f\u0070u\u0070",_cadd .Popup .ToPdfObject ());};_bbfa .SetIfNotNil ("\u0043\u0041",_cadd .CA );_bbfa .SetIfNotNil ("\u0052\u0043",_cadd .RC );_bbfa .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cadd .CreationDate );_bbfa .SetIfNotNil ("\u0049\u0052\u0054",_cadd .IRT );_bbfa .SetIfNotNil ("\u0053\u0075\u0062\u006a",_cadd .Subj );_bbfa .SetIfNotNil ("\u0052\u0054",_cadd .RT );_bbfa .SetIfNotNil ("\u0049\u0054",_cadd .IT );_bbfa .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_cadd .ExData );};func _bbad ()*modelManager {_cdegd :=modelManager {};_cdegd ._fgbbf =map[PdfModel ]_eec .PdfObject {};_cdegd ._bfageb =map[_eec .PdfObject ]PdfModel {};return &_cdegd ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _eec .PdfObject ;Popup *PdfAnnotationPopup ;CA _eec .PdfObject ;RC _eec .PdfObject ;CreationDate _eec .PdfObject ;IRT _eec .PdfObject ;Subj _eec .PdfObject ;RT _eec .PdfObject ;IT _eec .PdfObject ;ExData _eec .PdfObject ;};func (_ggfe *PdfWriter )addObject (_ddgbb _eec .PdfObject )bool {_efdae :=_ggfe .hasObject (_ddgbb );if !_efdae {_edccf :=_eec .ResolveReferencesDeep (_ddgbb ,_ggfe ._debg );if _edccf !=nil {_bfg .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_edccf );};_ggfe ._gceg =append (_ggfe ._gceg ,_ddgbb );_ggfe ._agdb [_ddgbb ]=struct{}{};return true ;};return false ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_bege :=NewPdfAnnotation ();_aee :=&PdfAnnotationUnderline {};_aee .PdfAnnotation =_bege ;_aee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bege .SetContext (_aee );return _aee ;};func (_ebce *PdfWriter )copyObjects (){_dbgdf :=make (map[_eec .PdfObject ]_eec .PdfObject );_gegae :=make ([]_eec .PdfObject ,0,len (_ebce ._gceg ));_bage :=make (map[_eec .PdfObject ]struct{},len (_ebce ._gceg ));_fdabd :=make (map[_eec .PdfObject ]struct{});for _ ,_abggd :=range _ebce ._gceg {_gacdf :=_ebce .copyObject (_abggd ,_dbgdf ,_fdabd ,false );if _ ,_cbdee :=_fdabd [_abggd ];_cbdee {continue ;};_gegae =append (_gegae ,_gacdf );_bage [_gacdf ]=struct{}{};};_ebce ._gceg =_gegae ;_ebce ._agdb =_bage ;_ebce ._fegdg =_ebce .copyObject (_ebce ._fegdg ,_dbgdf ,nil ,false ).(*_eec .PdfIndirectObject );_ebce ._eaef =_ebce .copyObject (_ebce ._eaef ,_dbgdf ,nil ,false ).(*_eec .PdfIndirectObject );if _ebce ._bcacg !=nil {_ebce ._bcacg =_ebce .copyObject (_ebce ._bcacg ,_dbgdf ,nil ,false ).(*_eec .PdfIndirectObject );};if _ebce ._gadfca {_bfcae :=make (map[_eec .PdfObject ]int64 );for _geabc ,_fgafgd :=range _ebce ._gcfda {if _affbdc ,_aggede :=_dbgdf [_geabc ];_aggede {_bfcae [_affbdc ]=_fgafgd ;}else {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");};};_ebce ._gcfda =_bfcae ;};};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_afgfg *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_cgad *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _addbd []*PdfField ;if _cgad .AcroForm !=nil {_addbd =_cgad .AcroForm .AllFields ();};_aeaff :=make (map[*PdfField ]struct{},len (_addbd ));for _ ,_bccea :=range _addbd {_aeaff [_bccea ]=struct{}{};};for _ ,_ecfde :=range _cgad .PageList {_cbbfa ,_bcfga :=_ecfde .GetAnnotations ();if _bcfga !=nil {return false ,_bcfga ;};for _ ,_gfdfb :=range _cbbfa {_bcgc ,_fcfea :=_gfdfb .GetContext ().(*PdfAnnotationWidget );if !_fcfea {continue ;};_dcdaf :=_bcgc .Field ();if _dcdaf ==nil {return true ,nil ;};if _ ,_gdfb :=_aeaff [_dcdaf ];!_gdfb {return true ,nil ;};};};return false ,nil ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_efge *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_eeedg *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};func (_efde *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _efde ._cddbf ==nil &&_efde .DescendantFont !=nil {return _efde .DescendantFont .FontDescriptor ();};return _efde ._cddbf ;};func (_fdfge *PdfReader )loadDSS ()(*DSS ,error ){if _fdfge ._ggagaa .GetCrypter ()!=nil &&!_fdfge ._ggagaa .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_cded :=_fdfge ._becgd .Get ("\u0044\u0053\u0053");if _cded ==nil {return nil ,nil ;};_ceag ,_ :=_eec .GetIndirect (_cded );_cded =_eec .TraceToDirectObject (_cded );switch _edeg :=_cded .(type ){case *_eec .PdfObjectNull :return nil ,nil ;case *_eec .PdfObjectDictionary :return _fcede (_ceag ,_edeg );};return nil ,_b .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_cded );};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_fage *PdfColorDeviceGray )GetNumComponents ()int {return 1};func (_eefa *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_ecgd :=&PdfBorderStyle {};return _ecgd };

// GetCerts returns the signature certificate chain.
func (_gcad *PdfSignature )GetCerts ()([]*_ga .Certificate ,error ){var _aecabg []func ()([]*_ga .Certificate ,error );switch _fcabf ,_ :=_eec .GetNameVal (_gcad .SubFilter );_fcabf {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_aecabg =append (_aecabg ,_gcad .extractChainFromPKCS7 ,_gcad .extractChainFromCert );case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_aecabg =append (_aecabg ,_gcad .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_aecabg =append (_aecabg ,_gcad .extractChainFromPKCS7 );default:return nil ,_b .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_fcabf );};for _ ,_dbaaf :=range _aecabg {_ecccc ,_fdae :=_dbaaf ();if _fdae !=nil {return nil ,_fdae ;};if len (_ecccc )> 0{return _ecccc ,nil ;};};return nil ,ErrSignNoCertificates ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_aefg *PdfColorspaceDeviceNAttributes )ToPdfObject ()_eec .PdfObject {_ddabg :=_eec .MakeDict ();if _aefg .Subtype !=nil {_ddabg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aefg .Subtype );};_ddabg .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_aefg .Colorants );_ddabg .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_aefg .Process );_ddabg .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_aefg .MixingHints );if _aefg ._bdgg !=nil {_aefg ._bdgg .PdfObject =_ddabg ;return _aefg ._bdgg ;};return _ddabg ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_ccfbg *_eec .PdfIndirectObject ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_ffga *PdfPattern )GetContainingPdfObject ()_eec .PdfObject {return _ffga ._ggede };

// GetNumComponents returns the number of color components (1 for Indexed).
func (_aaaca *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ddca pdfFontType0 )GetCharMetrics (code _fcb .CharCode )(_de .CharMetrics ,bool ){if _ddca .DescendantFont ==nil {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_ddca );return _de .CharMetrics {},false ;};return _ddca .DescendantFont .GetCharMetrics (code );};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _eec .PdfObject ;Q _eec .PdfObject ;RC _eec .PdfObject ;DS _eec .PdfObject ;CL _eec .PdfObject ;IT _eec .PdfObject ;BE _eec .PdfObject ;RD _eec .PdfObject ;BS _eec .PdfObject ;LE _eec .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fbdf *PdfSignature )ToPdfObject ()_eec .PdfObject {_cadf :=_fbdf ._fgdda ;var _gfbadb *_eec .PdfObjectDictionary ;if _cccdd ,_bcabe :=_cadf .PdfObject .(*pdfSignDictionary );_bcabe {_gfbadb =_cccdd .PdfObjectDictionary ;}else {_gfbadb =_cadf .PdfObject .(*_eec .PdfObjectDictionary );};_gfbadb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_fbdf .Type );_gfbadb .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_fbdf .Filter );_gfbadb .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_fbdf .SubFilter );_gfbadb .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_fbdf .ByteRange );_gfbadb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fbdf .Contents );_gfbadb .SetIfNotNil ("\u0043\u0065\u0072\u0074",_fbdf .Cert );_gfbadb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fbdf .Name );_gfbadb .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_fbdf .Reason );_gfbadb .SetIfNotNil ("\u004d",_fbdf .M );_gfbadb .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_fbdf .Reference );_gfbadb .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_fbdf .Changes );_gfbadb .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_fbdf .ContactInfo );return _cadf ;};func (_ffda *PdfReader )newPdfAnnotationPolygonFromDict (_badb *_eec .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_egge :=PdfAnnotationPolygon {};_efc ,_fcbd :=_ffda .newPdfAnnotationMarkupFromDict (_badb );if _fcbd !=nil {return nil ,_fcbd ;};_egge .PdfAnnotationMarkup =_efc ;_egge .Vertices =_badb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_egge .LE =_badb .Get ("\u004c\u0045");_egge .BS =_badb .Get ("\u0042\u0053");_egge .IC =_badb .Get ("\u0049\u0043");_egge .BE =_badb .Get ("\u0042\u0045");_egge .IT =_badb .Get ("\u0049\u0054");_egge .Measure =_badb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_egge ,nil ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_dfea *PdfFont )ToUnicode ()string {if _dfea .baseFields ()._ecab ==nil {return "";};return _dfea .baseFields ()._ecab .Name ();};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_ffgb *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ffgb .AlternateSpace ==nil {return nil ,_fe .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _ffgb .AlternateSpace .ColorToRGB (color );};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _dd .ReadSeeker )(*PdfReader ,error ){const _baebf ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";_agbcg :=&PdfReader {_fgdab :rs ,_beae :map[_eec .PdfObject ]struct{}{},_cdafg :_bbad (),_bceb :false };_abfdf ,_cfgg :=_ddbeg ("\u0072");if _cfgg !=nil {return nil ,_cfgg ;};_cfgg =_ea .Track (_abfdf ,_baebf );if _cfgg !=nil {return nil ,_cfgg ;};_agbcg ._abcgb =_abfdf ;_ggceaa ,_cfgg :=_eec .NewParser (rs );if _cfgg !=nil {return nil ,_cfgg ;};_agbcg ._ggagaa =_ggceaa ;_fffg ,_cfgg :=_agbcg .IsEncrypted ();if _cfgg !=nil {return nil ,_cfgg ;};if !_fffg {_cfgg =_agbcg .loadStructure ();if _cfgg !=nil {return nil ,_cfgg ;};};return _agbcg ,nil ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_gbge :=PdfColorLab {l ,a ,b };return &_gbge };

// ToPdfObject implements interface PdfModel.
func (_dgd *PdfAnnotationPopup )ToPdfObject ()_eec .PdfObject {_dgd .PdfAnnotation .ToPdfObject ();_effd :=_dgd ._dge ;_cgga :=_effd .PdfObject .(*_eec .PdfObjectDictionary );_cgga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0050\u006f\u0070u\u0070"));_cgga .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dgd .Parent );_cgga .SetIfNotNil ("\u004f\u0070\u0065\u006e",_dgd .Open );return _effd ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// SetBorderWidth sets the style's border width.
func (_dceb *PdfBorderStyle )SetBorderWidth (width float64 ){_dceb .W =&width };

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// String returns the name of the colorspace (DeviceN).
func (_ecefd *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// Width returns the width of `rect`.
func (_eefaf *PdfRectangle )Width ()float64 {return _fba .Abs (_eefaf .Urx -_eefaf .Llx )};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_feaf *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// AddPages adds pages to be appended to the end of the source PDF.
func (_gbda *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_fdbg :=range pages {_fdbg =_fdbg .Duplicate ();_fdebg (_fdbg );_gbda ._gcfc =append (_gbda ._gcfc ,_fdbg );};};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_ebea pdfFontSimple )GetCharMetrics (code _fcb .CharCode )(_de .CharMetrics ,bool ){if _bgbfb ,_bbaf :=_ebea ._fgabb [code ];_bbaf {return _de .CharMetrics {Wx :_bgbfb },true ;};if _de .IsStdFont (_de .StdFontName (_ebea ._cefc )){return _de .CharMetrics {Wx :250},true ;};return _de .CharMetrics {},false ;};

// ToPdfObject implements interface PdfModel.
func (_bda *PdfActionNamed )ToPdfObject ()_eec .PdfObject {_bda .PdfAction .ToPdfObject ();_fa :=_bda ._aa ;_dde :=_fa .PdfObject .(*_eec .PdfObjectDictionary );_dde .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeNamed )));_dde .SetIfNotNil ("\u004e",_bda .N );return _fa ;};func (_ecgg *PdfReader )newPdfAnnotationSquigglyFromDict (_fca *_eec .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_eadcd :=PdfAnnotationSquiggly {};_gce ,_dgbc :=_ecgg .newPdfAnnotationMarkupFromDict (_fca );if _dgbc !=nil {return nil ,_dgbc ;};_eadcd .PdfAnnotationMarkup =_gce ;_eadcd .QuadPoints =_fca .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_eadcd ,nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_aafae _dd .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_cbag _ac .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_geec _ac .Image )(*Image ,error );

// Compress an image.
Compress (_dbge *Image ,_bdga int64 )(*Image ,error );};func _dcbcf (_eagfd *_eec .PdfObjectDictionary )(*PdfShadingPattern ,error ){_dcdfa :=&PdfShadingPattern {};_ebgeg :=_eagfd .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _ebgeg ==nil {_bfg .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gafg ,_ecdc :=_eagga (_ebgeg );if _ecdc !=nil {_bfg .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_ecdc );return nil ,_ecdc ;};_dcdfa .Shading =_gafg ;if _aafee :=_eagfd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_aafee !=nil {_gead ,_fabaa :=_aafee .(*_eec .PdfObjectArray );if !_fabaa {_bfg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aafee );return nil ,_eec .ErrTypeError ;};_dcdfa .Matrix =_gead ;};if _edcfg :=_eagfd .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_edcfg !=nil {_dcdfa .ExtGState =_edcfg ;};return _dcdfa ,nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);var _ pdfFont =(*pdfCIDFontType0 )(nil );

// GetNumPages returns the number of pages in the document.
func (_aabcg *PdfReader )GetNumPages ()(int ,error ){if _aabcg ._ggagaa .GetCrypter ()!=nil &&!_aabcg ._ggagaa .IsAuthenticated (){return 0,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};return len (_aabcg ._bcaa ),nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_bafdg *_eec .PdfIndirectObject ;};

// BaseFont returns the font's "BaseFont" field.
func (_cfec *PdfFont )BaseFont ()string {return _cfec .baseFields ()._cefc };

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_gfbc []byte ;_cbacg []float64 ;};func (_adaa *PdfAcroForm )filteredFields (_cfged FieldFilterFunc ,_ceaf bool )[]*PdfField {if _adaa ==nil {return nil ;};return _caef (_adaa .Fields ,_cfged ,_ceaf );};func _agead (_cegce _eec .PdfObject )(*_eec .PdfObjectDictionary ,*fontCommon ,error ){_bgbge :=&fontCommon {};if _eeff ,_bffc :=_cegce .(*_eec .PdfIndirectObject );_bffc {_bgbge ._gfefa =_eeff .ObjectNumber ;};_fdga ,_fgcd :=_eec .GetDict (_cegce );if !_fgcd {_bfg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cegce );return nil ,nil ,ErrFontNotSupported ;};_eccg ,_fgcd :=_eec .GetNameVal (_fdga .Get ("\u0054\u0079\u0070\u0065"));if !_fgcd {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};if _eccg !="\u0046\u006f\u006e\u0074"{_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_eccg ,"\u0046\u006f\u006e\u0074");return nil ,nil ,_eec .ErrTypeError ;};_dcagc ,_fgcd :=_eec .GetNameVal (_fdga .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_fgcd {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};_bgbge ._bgga =_dcagc ;_fcda ,_fgcd :=_eec .GetNameVal (_fdga .Get ("\u004e\u0061\u006d\u0065"));if _fgcd {_bgbge ._bade =_fcda ;};if _dcagc =="\u0054\u0079\u0070e\u0033"{_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_fdga );return _fdga ,_bgbge ,ErrType3FontNotSupported ;};_cabbg ,_fgcd :=_eec .GetNameVal (_fdga .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_fgcd {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return _fdga ,_bgbge ,ErrRequiredAttributeMissing ;};_bgbge ._cefc =_cabbg ;_dagd :=_fdga .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _dagd !=nil {_ccfed ,_gfba :=_egbec (_dagd );if _gfba !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gfba );return _fdga ,_bgbge ,_gfba ;};_bgbge ._cddbf =_ccfed ;};_gefa :=_fdga .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _gefa !=nil {_bgbge ._fbgg =_eec .TraceToDirectObject (_gefa );_adcg ,_gbcge :=_cfab (_bgbge ._fbgg ,_bgbge );if _gbcge !=nil {return _fdga ,_bgbge ,_gbcge ;};_bgbge ._ecab =_adcg ;}else if _dcagc =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_dcagc =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ggaga ,_gebgc :=_cf .NewCIDSystemInfo (_fdga .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if _gebgc !=nil {return _fdga ,_bgbge ,_gebgc ;};_cgfd :=_b .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_ggaga .Registry ,_ggaga .Ordering );if _cf .IsPredefinedCMap (_cgfd ){_bgbge ._ecab ,_gebgc =_cf .LoadPredefinedCMap (_cgfd );if _gebgc !=nil {_bfg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cgfd ,_gebgc );};};};return _fdga ,_bgbge ,nil ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_eec .PdfObjectStream ;Data []byte ;_gacd *_eec .PdfIndirectObject ;_dacag *_eec .PdfObjectStream ;};func (_cagba *PdfReader )newPdfOutlineItemFromIndirectObject (_gefe *_eec .PdfIndirectObject )(*PdfOutlineItem ,error ){_ccea ,_egae :=_gefe .PdfObject .(*_eec .PdfObjectDictionary );if !_egae {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_cabd :=NewPdfOutlineItem ();_afeb :=_ccea .Get ("\u0054\u0069\u0074l\u0065");if _afeb ==nil {return nil ,_b .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};_fbdd ,_bdabd :=_eec .GetString (_afeb );if !_bdabd {return nil ,_b .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_afeb );};_cabd .Title =_fbdd ;if _fecbb :=_ccea .Get ("\u0043\u006f\u0075n\u0074");_fecbb !=nil {_gbged ,_bcdg :=_fecbb .(*_eec .PdfObjectInteger );if !_bcdg {return nil ,_b .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_fecbb );};_fggdfd :=int64 (*_gbged );_cabd .Count =&_fggdfd ;};if _dacd :=_ccea .Get ("\u0044\u0065\u0073\u0074");_dacd !=nil {_cabd .Dest =_eec .ResolveReference (_dacd );if !_cagba ._bceb {_aeecb :=_cagba .traverseObjectData (_cabd .Dest );if _aeecb !=nil {return nil ,_aeecb ;};};};if _bgadb :=_ccea .Get ("\u0041");_bgadb !=nil {_cabd .A =_eec .ResolveReference (_bgadb );if !_cagba ._bceb {_agedbc :=_cagba .traverseObjectData (_cabd .A );if _agedbc !=nil {return nil ,_agedbc ;};};};if _baab :=_ccea .Get ("\u0053\u0045");_baab !=nil {_cabd .SE =nil ;};if _fbdc :=_ccea .Get ("\u0043");_fbdc !=nil {_cabd .C =_eec .ResolveReference (_fbdc );};if _edbdd :=_ccea .Get ("\u0046");_edbdd !=nil {_cabd .F =_eec .ResolveReference (_edbdd );};return _cabd ,nil ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func (_badg *PdfAppender )mergeResources (_dfe ,_ebc _eec .PdfObject ,_fcfg map[_eec .PdfObjectName ]_eec .PdfObjectName )_eec .PdfObject {if _ebc ==nil &&_dfe ==nil {return nil ;};if _ebc ==nil {return _dfe ;};_cacb ,_fcee :=_eec .GetDict (_ebc );if !_fcee {return _dfe ;};if _dfe ==nil {_bfaf :=_eec .MakeDict ();_bfaf .Merge (_cacb );return _ebc ;};_abbf ,_fcee :=_eec .GetDict (_dfe );if !_fcee {_bfg .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");_abbf =_eec .MakeDict ();};for _ ,_dbfc :=range _cacb .Keys (){if _fagf ,_eafg :=_fcfg [_dbfc ];_eafg {_abbf .Set (_fagf ,_cacb .Get (_dbfc ));}else {_abbf .Set (_dbfc ,_cacb .Get (_dbfc ));};};return _abbf ;};

// GetContentStream returns the XObject Form's content stream.
func (_gaacd *XObjectForm )GetContentStream ()([]byte ,error ){_egegf ,_fbfgb :=_eec .DecodeStream (_gaacd ._edeb );if _fbfgb !=nil {return nil ,_fbfgb ;};return _egegf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfgb *PdfAnnotationWatermark )ToPdfObject ()_eec .PdfObject {_dfgb .PdfAnnotation .ToPdfObject ();_dbfe :=_dfgb ._dge ;_becfg :=_dbfe .PdfObject .(*_eec .PdfObjectDictionary );_becfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));_becfg .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_dfgb .FixedPrint );return _dbfe ;};func _agedb (_aaec *_eec .PdfObjectDictionary ,_eaedf *fontCommon )(*pdfCIDFontType2 ,error ){if _eaedf ._bgga !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_bfg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_eaedf );return nil ,_eec .ErrRangeError ;};_ggea :=_beag (_eaedf );_ebcd ,_eagcc :=_eec .GetDict (_aaec .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_eagcc {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_eaedf );return nil ,ErrRequiredAttributeMissing ;};_ggea .CIDSystemInfo =_ebcd ;_ggea .DW =_aaec .Get ("\u0044\u0057");_ggea .W =_aaec .Get ("\u0057");_ggea .DW2 =_aaec .Get ("\u0044\u0057\u0032");_ggea .W2 =_aaec .Get ("\u0057\u0032");_ggea .CIDToGIDMap =_aaec .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");_ggea ._dbcf =1000.0;if _facdg ,_ebbe :=_eec .GetNumberAsFloat (_ggea .DW );_ebbe ==nil {_ggea ._dbcf =_facdg ;};_dcbge ,_cebec :=_badbg (_ggea .W );if _cebec !=nil {return nil ,_cebec ;};if _dcbge ==nil {_dcbge =map[_fcb .CharCode ]float64 {};};_ggea ._bdfge =_dcbge ;return _ggea ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_edde *PdfAnnotationLink )ToPdfObject ()_eec .PdfObject {_edde .PdfAnnotation .ToPdfObject ();_dfb :=_edde ._dge ;_bggd :=_dfb .PdfObject .(*_eec .PdfObjectDictionary );_bggd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u004c\u0069\u006e\u006b"));if _edde ._gdf !=nil &&_edde ._gdf ._ce !=nil {_bggd .Set ("\u0041",_edde ._gdf ._ce .ToPdfObject ());}else if _edde .A !=nil {_bggd .Set ("\u0041",_edde .A );};_bggd .SetIfNotNil ("\u0044\u0065\u0073\u0074",_edde .Dest );_bggd .SetIfNotNil ("\u0048",_edde .H );_bggd .SetIfNotNil ("\u0050\u0041",_edde .PA );_bggd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_edde .QuadPoints );_bggd .SetIfNotNil ("\u0042\u0053",_edde .BS );return _dfb ;};func (_cbg *PdfReader )newPdfAnnotationLineFromDict (_ccde *_eec .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_cacf :=PdfAnnotationLine {};_ffgg ,_acdg :=_cbg .newPdfAnnotationMarkupFromDict (_ccde );if _acdg !=nil {return nil ,_acdg ;};_cacf .PdfAnnotationMarkup =_ffgg ;_cacf .L =_ccde .Get ("\u004c");_cacf .BS =_ccde .Get ("\u0042\u0053");_cacf .LE =_ccde .Get ("\u004c\u0045");_cacf .IC =_ccde .Get ("\u0049\u0043");_cacf .LL =_ccde .Get ("\u004c\u004c");_cacf .LLE =_ccde .Get ("\u004c\u004c\u0045");_cacf .Cap =_ccde .Get ("\u0043\u0061\u0070");_cacf .IT =_ccde .Get ("\u0049\u0054");_cacf .LLO =_ccde .Get ("\u004c\u004c\u004f");_cacf .CP =_ccde .Get ("\u0043\u0050");_cacf .Measure =_ccde .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_cacf .CO =_ccde .Get ("\u0043\u004f");return &_cacf ,nil ;};var _fbadd =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u0063\u0075\u0073\u0074\u006f\u006d":{}};var _daffe =false ;

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_bgad :=NewPdfAnnotation ();_dcg :=&PdfAnnotationScreen {};_dcg .PdfAnnotation =_bgad ;_bgad .SetContext (_dcg );return _dcg ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_geb *PdfColorCalRGB )GetNumComponents ()int {return 3};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_gg :=NewPdfAction ();_ba :=&PdfActionJavaScript {};_ba .PdfAction =_gg ;_gg .SetContext (_ba );return _ba ;};func (_dace *pdfCIDFontType2 )baseFields ()*fontCommon {return &_dace .fontCommon };

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_efag *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _fe .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");};_fdfde :=field .V ;if _fdfde ==nil {return _fe .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_bcac :=pageNum -1;if _bcac < 0||_bcac > len (_efag ._gcfc )-1{return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_bgdc :=_efag .Reader .PageList [_bcac ];field .P =_bgdc .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_eec .MakeString (_b .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_bgdc .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _efag ._eabc ==_efag ._adbd .AcroForm {_efag ._eabc =_efag .Reader .AcroForm ;};_bgbg :=_efag ._eabc ;if _bgbg ==nil {_bgbg =NewPdfAcroForm ();};_bgbg .SigFlags =_eec .MakeInteger (3);_fcdb :=append (_bgbg .AllFields (),field .PdfField );_bgbg .Fields =&_fcdb ;_efag .ReplaceAcroForm (_bgbg );_efag .UpdatePage (_bgdc );_efag ._gcfc [_bcac ]=_bgdc ;return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_edagf *PdfColorspaceLab )ColorFromPdfObjects (objects []_eec .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_accg ,_baed :=_eec .GetNumbersAsFloat (objects );if _baed !=nil {return nil ,_baed ;};return _edagf .ColorFromFloats (_accg );};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_efgg :=NewPdfAnnotation ();_edfb :=&PdfAnnotationHighlight {};_edfb .PdfAnnotation =_efgg ;_edfb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efgg .SetContext (_edfb );return _edfb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_bebaf *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_eec .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfdb ,_efgbc :=_eec .GetNumbersAsFloat (objects );if _efgbc !=nil {return nil ,_efgbc ;};return _bebaf .ColorFromFloats (_gfdb );};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_gbbdbg *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _gbbdbg .MediaBox !=nil {return _gbbdbg .MediaBox ,nil ;};_abcg :=_gbbdbg .Parent ;for _abcg !=nil {_dbad ,_bbaga :=_eec .GetDict (_abcg );if !_bbaga {return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");};if _ggecfa :=_dbad .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_ggecfa !=nil {_bcdb ,_efac :=_eec .GetArray (_ggecfa );if !_efac {return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");};_cedd ,_cgbcag :=NewPdfRectangle (*_bcdb );if _cgbcag !=nil {return nil ,_cgbcag ;};return _cedd ,nil ;};_abcg =_dbad .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_fe .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _eec .PdfObject ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_bffgf *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _bffgf ._efgdg !=nil {return _bffgf ._efgdg ,nil ;};if _bffgf .ColorSpace ==nil {return nil ,nil ;};_afcf ,_aebdc :=_eggfc (_bffgf .ColorSpace );if _aebdc !=nil {return nil ,_aebdc ;};_bffgf ._efgdg =_afcf ;return _bffgf ._efgdg ,nil ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_fagba *PdfPageResources )GetShadingByName (keyName _eec .PdfObjectName )(*PdfShading ,bool ){if _fagba .Shading ==nil {return nil ,false ;};_cecc ,_bdag :=_eec .TraceToDirectObject (_fagba .Shading ).(*_eec .PdfObjectDictionary );if !_bdag {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fagba .Shading );return nil ,false ;};if _ggab :=_cecc .Get (keyName );_ggab !=nil {_cefa ,_baca :=_eagga (_ggab );if _baca !=nil {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_baca );return nil ,false ;};return _cefa ,true ;};return nil ,false ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_eec .PdfObjectInteger ;BitsPerComponent *_eec .PdfObjectInteger ;BitsPerFlag *_eec .PdfObjectInteger ;Decode *_eec .PdfObjectArray ;Function []PdfFunction ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_beaea *PdfWriter )SetDocInfo (info *PdfInfo ){if _beaea .hasObject (_beaea ._fegdg ){delete (_beaea ._agdb ,_beaea ._fegdg );delete (_beaea ._debg ,_beaea ._fegdg );for _gaab ,_gaeac :=range _beaea ._gceg {if _gaeac ==_beaea ._fegdg {copy (_beaea ._gceg [_gaab :],_beaea ._gceg [_gaab +1:]);_beaea ._gceg [len (_beaea ._gceg )-1]=nil ;_beaea ._gceg =_beaea ._gceg [:len (_beaea ._gceg )-1];break ;};};};_bcbba :=_eec .PdfIndirectObject {};_bcbba .PdfObject =info .ToPdfObject ();_beaea ._fegdg =&_bcbba ;_beaea .addObject (&_bcbba );};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_aggfd DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_agde :=&PdfAnnotation {};_agde ._dge =_eec .MakeIndirectObject (_eec .MakeDict ());return _agde ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_dfcfd *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dfcfd .Base ==nil {return nil ,_fe .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _dfcfd .Base .ColorToRGB (color );};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_aabc *PdfField )IsTerminal ()bool {return len (_aabc .Kids )==0};

// ToPdfObject implements interface PdfModel.
func (_fgfg *PdfAnnotation3D )ToPdfObject ()_eec .PdfObject {_fgfg .PdfAnnotation .ToPdfObject ();_dccebb :=_fgfg ._dge ;_ffcg :=_dccebb .PdfObject .(*_eec .PdfObjectDictionary );_ffcg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0033\u0044"));_ffcg .SetIfNotNil ("\u0033\u0044\u0044",_fgfg .T3DD );_ffcg .SetIfNotNil ("\u0033\u0044\u0056",_fgfg .T3DV );_ffcg .SetIfNotNil ("\u0033\u0044\u0041",_fgfg .T3DA );_ffcg .SetIfNotNil ("\u0033\u0044\u0049",_fgfg .T3DI );_ffcg .SetIfNotNil ("\u0033\u0044\u0042",_fgfg .T3DB );return _dccebb ;};var (CourierName =_de .CourierName ;CourierBoldName =_de .CourierBoldName ;CourierObliqueName =_de .CourierObliqueName ;CourierBoldObliqueName =_de .CourierBoldObliqueName ;HelveticaName =_de .HelveticaName ;HelveticaBoldName =_de .HelveticaBoldName ;HelveticaObliqueName =_de .HelveticaObliqueName ;HelveticaBoldObliqueName =_de .HelveticaBoldObliqueName ;SymbolName =_de .SymbolName ;ZapfDingbatsName =_de .ZapfDingbatsName ;TimesRomanName =_de .TimesRomanName ;TimesBoldName =_de .TimesBoldName ;TimesItalicName =_de .TimesItalicName ;TimesBoldItalicName =_de .TimesBoldItalicName ;);func (_bfcg *PdfReader )newPdfAnnotationProjectionFromDict (_fcgb *_eec .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_fea :=&PdfAnnotationProjection {};_gecc ,_egff :=_bfcg .newPdfAnnotationMarkupFromDict (_fcgb );if _egff !=nil {return nil ,_egff ;};_fea .PdfAnnotationMarkup =_gecc ;return _fea ,nil ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_cggb *PdfColorspaceDeviceN )GetNumComponents ()int {return _cggb .ColorantNames .Len ()};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_dcda *DSS )GetContainingPdfObject ()_eec .PdfObject {return _dcda ._ggaf };

// ToPdfObject implements interface PdfModel.
func (_agda *PdfFilespec )ToPdfObject ()_eec .PdfObject {_ebfc :=_agda .getDict ();_ebfc .Clear ();_ebfc .Set ("\u0054\u0079\u0070\u0065",_eec .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_ebfc .SetIfNotNil ("\u0046\u0053",_agda .FS );_ebfc .SetIfNotNil ("\u0046",_agda .F );_ebfc .SetIfNotNil ("\u0055\u0046",_agda .UF );_ebfc .SetIfNotNil ("\u0044\u004f\u0053",_agda .DOS );_ebfc .SetIfNotNil ("\u004d\u0061\u0063",_agda .Mac );_ebfc .SetIfNotNil ("\u0055\u006e\u0069\u0078",_agda .Unix );_ebfc .SetIfNotNil ("\u0049\u0044",_agda .ID );_ebfc .SetIfNotNil ("\u0056",_agda .V );_ebfc .SetIfNotNil ("\u0045\u0046",_agda .EF );_ebfc .SetIfNotNil ("\u0052\u0046",_agda .RF );_ebfc .SetIfNotNil ("\u0044\u0065\u0073\u0063",_agda .Desc );_ebfc .SetIfNotNil ("\u0043\u0049",_agda .CI );return _agda ._fdecf ;};func _gbfd (_cbbg *_eec .PdfObjectDictionary )(*PdfFieldChoice ,error ){_ggbcf :=&PdfFieldChoice {};_ggbcf .Opt ,_ =_eec .GetArray (_cbbg .Get ("\u004f\u0070\u0074"));_ggbcf .TI ,_ =_eec .GetInt (_cbbg .Get ("\u0054\u0049"));_ggbcf .I ,_ =_eec .GetArray (_cbbg .Get ("\u0049"));return _ggbcf ,nil ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};func (_dddcd *LTV )getOCSPs (_effbb []*_ga .Certificate ,_badgd map[string ]*_ga .Certificate )([][]byte ,error ){_ddefb :=make ([][]byte ,0,len (_effbb ));for _ ,_bbgfe :=range _effbb {for _ ,_ecgbd :=range _bbgfe .OCSPServer {if _dddcd .CertClient .IsCA (_bbgfe ){continue ;};_cacee ,_fgead :=_badgd [_bbgfe .Issuer .CommonName ];if !_fgead {_bfg .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");continue ;};_ ,_fdgc ,_eacb :=_dddcd .OCSPClient .MakeRequest (_ecgbd ,_bbgfe ,_cacee );if _eacb !=nil {_bfg .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_eacb );continue ;};_ddefb =append (_ddefb ,_fdgc );};};return _ddefb ,nil ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_ebfcd *PdfPage )Duplicate ()*PdfPage {_cfgab :=*_ebfcd ;_cfgab ._acfcf =_eec .MakeDict ();_cfgab ._gbegb =_eec .MakeIndirectObject (_cfgab ._acfcf );return &_cfgab ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_agbf :=NewPdfAnnotation ();_aaac :=&PdfAnnotationPolyLine {};_aaac .PdfAnnotation =_agbf ;_aaac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_agbf .SetContext (_aaac );return _aaac ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_aaff *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_aggac ,_ ,_ffgce :=_aaff .CharcodesToUnicodeWithStats (_aaff .BytesToCharcodes (data ));_aegb :=_fcb .ExpandLigatures (_aggac );return _aegb ,_af .RuneCountInString (_aegb ),_ffgce ;};func (_edga *PdfAppender )replaceObject (_aacc ,_fafcf _eec .PdfObject ){switch _febf :=_aacc .(type ){case *_eec .PdfIndirectObject :_edga ._decb [_fafcf ]=_febf .ObjectNumber ;case *_eec .PdfObjectStream :_edga ._decb [_fafcf ]=_febf .ObjectNumber ;};};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_ecbf PdfModel ;_bedf *_eec .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_eec .PdfObjectName ;T *_eec .PdfObjectString ;TU *_eec .PdfObjectString ;TM *_eec .PdfObjectString ;Ff *_eec .PdfObjectInteger ;V _eec .PdfObject ;DV _eec .PdfObject ;AA _eec .PdfObject ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_dfbb *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_fe .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");};_dcd ,_efegc :=_fc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gfbc ,img ._cbacg );if _efegc !=nil {return img ,_efegc ;};_ebfg ,_efegc :=_fc .NRGBAConverter .Convert (_dcd );if _efegc !=nil {return img ,_efegc ;};_fffe :=_bffcg (_ebfg .Base ());_bfg .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_bfg .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_bfg .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_fffe .Data );_bfg .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_fffe );return _fffe ,nil ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_cefb :=&PdfOutlineItem {_bebd :_eec .MakeIndirectObject (_eec .MakeDict ())};_cefb ._geaac =_cefb ;return _cefb ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_gfd *PdfAppender )Write (w _dd .Writer )error {if _gfd ._dag {return _fe .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");};_dcge :=NewPdfWriter ();_dccc ,_afcg :=_eec .GetDict (_dcge ._edffb );if !_afcg {return _fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_fbeed ,_afcg :=_dccc .Get ("\u004b\u0069\u0064\u0073").(*_eec .PdfObjectArray );if !_afcg {return _fe .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_efda ,_afcg :=_dccc .Get ("\u0043\u006f\u0075n\u0074").(*_eec .PdfObjectInteger );if !_afcg {return _fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};_agfg :=_gfd ._adbd ._ggagaa ;_bada :=_agfg .GetTrailer ();if _bada ==nil {return _fe .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_dcgb ,_afcg :=_eec .GetIndirect (_bada .Get ("\u0052\u006f\u006f\u0074"));if !_afcg {return _fe .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_dbcb ,_afcg :=_eec .GetDict (_dcgb );if !_afcg {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_dcgb ,*_bada );return _fe .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_ddeb :=range _dbcb .Keys (){if _dcge ._fbafd .Get (_ddeb )==nil {_fafe :=_dbcb .Get (_ddeb );_dcge ._fbafd .Set (_ddeb ,_fafe );};};if _gfd ._eabc !=nil {_dcge ._fbafd .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_gfd ._eabc .ToPdfObject ());_gfd .updateObjectsDeep (_gfd ._eabc .ToPdfObject (),nil );};if _gfd ._geag !=nil {_gfd .updateObjectsDeep (_gfd ._geag .ToPdfObject (),nil );_dcge ._fbafd .Set ("\u0044\u0053\u0053",_gfd ._geag .GetContainingPdfObject ());};if _dcge ._effdf < 2{_dcge .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_dcge .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_gfd .addNewObject (_dcge ._fegdg );_gfd .addNewObject (_dcge ._eaef );_gbdaa :=false ;if len (_gfd ._adbd .PageList )!=len (_gfd ._gcfc ){_gbdaa =true ;}else {for _bcbc :=range _gfd ._adbd .PageList {switch {case _gfd ._gcfc [_bcbc ]==_gfd ._adbd .PageList [_bcbc ]:case _gfd ._gcfc [_bcbc ]==_gfd .Reader .PageList [_bcbc ]:default:_gbdaa =true ;};if _gbdaa {break ;};};};if _gbdaa {_gfd .updateObjectsDeep (_dcge ._edffb ,nil );}else {_gfd ._eba [_dcge ._edffb ]=struct{}{};};_dcge ._edffb .ObjectNumber =_gfd .Reader ._fgdfg .ObjectNumber ;_gfd ._decb [_dcge ._edffb ]=_gfd .Reader ._fgdfg .ObjectNumber ;_aecd :=[]_eec .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_bed :=range _gfd ._gcfc {_bcgg :=_bed .ToPdfObject ();*_efda =*_efda +1;if _dacg ,_dbea :=_bcgg .(*_eec .PdfIndirectObject );_dbea &&_dacg .GetParser ()==_gfd ._adbd ._ggagaa {_fbeed .Append (&_dacg .PdfObjectReference );continue ;};if _ggefb ,_cfgf :=_eec .GetDict (_bcgg );_cfgf {_edgc ,_edfg :=_ggefb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_eec .PdfIndirectObject );for _edfg {_bfg .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_edgc );_fgfa ,_afgd :=_edgc .PdfObject .(*_eec .PdfObjectDictionary );if !_afgd {return _fe .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_adde :=range _aecd {_bfg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_adde );if _ggefb .Get (_adde )!=nil {_bfg .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _bfegg :=_fgfa .Get (_adde );_bfegg !=nil {_bfg .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_adde );_ggefb .Set (_adde ,_bfegg );};};_edgc ,_edfg =_fgfa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_eec .PdfIndirectObject );_bfg .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fgfa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ggefb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dcge ._edffb );};_gfd .updateObjectsDeep (_bcgg ,nil );_fbeed .Append (_bcgg );};if _ ,_efcc :=_gfd ._ddab .Seek (0,_dd .SeekStart );_efcc !=nil {return _efcc ;};_adbf :=make (map[SignatureHandler ]_dd .Writer );_gbbec :=_eec .MakeArray ();for _ ,_bcad :=range _gfd ._gba {if _fcca ,_aaaaa :=_eec .GetIndirect (_bcad );_aaaaa {if _ced ,_aade :=_fcca .PdfObject .(*pdfSignDictionary );_aade {_dcaf :=*_ced ._fffdd ;var _cbfbc error ;_adbf [_dcaf ],_cbfbc =_dcaf .NewDigest (_ced ._eegbf );if _cbfbc !=nil {return _cbfbc ;};_gbbec .Append (_eec .MakeInteger (0xfffff),_eec .MakeInteger (0xfffff));};};};if _gbbec .Len ()> 0{_gbbec .Append (_eec .MakeInteger (0xfffff),_eec .MakeInteger (0xfffff));};for _ ,_gaef :=range _gfd ._gba {if _efgb ,_cccec :=_eec .GetIndirect (_gaef );_cccec {if _bba ,_fbae :=_efgb .PdfObject .(*pdfSignDictionary );_fbae {_bba .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_gbbec );};};};_cbcdf :=len (_adbf )> 0;var _bgbf _dd .Reader =_gfd ._ddab ;if _cbcdf {_geg :=make ([]_dd .Writer ,0,len (_adbf ));for _ ,_efaf :=range _adbf {_geg =append (_geg ,_efaf );};_bgbf =_dd .TeeReader (_gfd ._ddab ,_dd .MultiWriter (_geg ...));};_ecac ,_cdbb :=_dd .Copy (w ,_bgbf );if _cdbb !=nil {return _cdbb ;};if len (_gfd ._gba )==0{return nil ;};_dcge ._adgca =_ecac ;_dcge .ObjNumOffset =_gfd ._egd ;_dcge ._gadfca =true ;_dcge ._eccac =_gfd ._ebgd ;_dcge ._ccebe =_gfd ._fbacf ;_dcge ._adbg =_gfd ._fcf ;_dcge ._ebagb =_gfd ._adbd .PdfVersion ().Minor ;_dcge ._gcfda =_gfd ._decb ;_beec :=_gfd ._cgbc .GetXrefType ();if _beec !=nil {_fdff :=*_beec ==_eec .XrefTypeObjectStream ;_dcge ._aggde =&_fdff ;};_dcge ._agdb =map[_eec .PdfObject ]struct{}{};_dcge ._gceg =[]_eec .PdfObject {};for _ ,_abgcb :=range _gfd ._gba {if _ ,_gfee :=_gfd ._eba [_abgcb ];_gfee {continue ;};_dcge .addObject (_abgcb );};_abfd :=w ;if _cbcdf {_abfd =_gf .NewBuffer (nil );};if _eaece :=_dcge .Write (_abfd );_eaece !=nil {return _eaece ;};if _cbcdf {_ada :=_abfd .(*_gf .Buffer ).Bytes ();_agcdd :=_eec .MakeArray ();var _ggcd []*pdfSignDictionary ;var _ded int64 ;for _ ,_ecgcf :=range _dcge ._gceg {if _cgaf ,_feaa :=_eec .GetIndirect (_ecgcf );_feaa {if _bcff ,_afgea :=_cgaf .PdfObject .(*pdfSignDictionary );_afgea {_ggcd =append (_ggcd ,_bcff );_bfbdc :=_bcff ._cfgac +int64 (_bcff ._dedbeb );_agcdd .Append (_eec .MakeInteger (_ded ),_eec .MakeInteger (_bfbdc -_ded ));_ded =_bcff ._cfgac +int64 (_bcff ._bdgcc );};};};_agcdd .Append (_eec .MakeInteger (_ded ),_eec .MakeInteger (_ecac +int64 (len (_ada ))-_ded ));_cgbca :=[]byte (_agcdd .WriteString ());for _ ,_edgd :=range _ggcd {_afgf :=int (_edgd ._cfgac -_ecac );for _ebgc :=_edgd ._cebcdc ;_ebgc < _edgd ._dgdc ;_ebgc ++{_ada [_afgf +_ebgc ]=' ';};_cbfa :=_ada [_afgf +_edgd ._cebcdc :_afgf +_edgd ._dgdc ];copy (_cbfa ,_cgbca );};var _dgef int ;for _ ,_afde :=range _ggcd {_gbfeb :=int (_afde ._cfgac -_ecac );_gecce :=_ada [_dgef :_gbfeb +_afde ._dedbeb ];_aadb :=*_afde ._fffdd ;_adbf [_aadb ].Write (_gecce );_dgef =_gbfeb +_afde ._bdgcc ;};for _ ,_cacd :=range _ggcd {_dfef :=_ada [_dgef :];_dcgd :=*_cacd ._fffdd ;_adbf [_dcgd ].Write (_dfef );};for _ ,_bde :=range _ggcd {_ggbc :=int (_bde ._cfgac -_ecac );_eegd :=*_bde ._fffdd ;_cbee :=_adbf [_eegd ];if _fcbdc :=_eegd .Sign (_bde ._eegbf ,_cbee );_fcbdc !=nil {return _fcbdc ;};_bde ._eegbf .ByteRange =_agcdd ;_debd :=[]byte (_bde ._eegbf .Contents .WriteString ());for _cabf :=_bde ._cebcdc ;_cabf < _bde ._dgdc ;_cabf ++{_ada [_ggbc +_cabf ]=' ';};for _aaab :=_bde ._dedbeb ;_aaab < _bde ._bdgcc ;_aaab ++{_ada [_ggbc +_aaab ]=' ';};_afcgd :=_ada [_ggbc +_bde ._cebcdc :_ggbc +_bde ._dgdc ];copy (_afcgd ,_cgbca );_afcgd =_ada [_ggbc +_bde ._dedbeb :_ggbc +_bde ._bdgcc ];copy (_afcgd ,_debd );};_fbed :=_gf .NewBuffer (_ada );_ ,_cdbb =_dd .Copy (w ,_fbed );if _cdbb !=nil {return _cdbb ;};};_gfd ._dag =true ;return nil ;};

// ToInteger convert to an integer format.
func (_ffba *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_cgfae :=_fba .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cgfae *_ffba .R ()),uint32 (_cgfae *_ffba .G ()),uint32 (_cgfae *_ffba .B ())};};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_cegb :=NewPdfAnnotation ();_bbb :=&PdfAnnotationTrapNet {};_bbb .PdfAnnotation =_cegb ;_cegb .SetContext (_bbb );return _bbb ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_eeed :=NewPdfAnnotation ();_ddg :=&PdfAnnotationFreeText {};_ddg .PdfAnnotation =_eeed ;_ddg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eeed .SetContext (_ddg );return _ddg ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bcbd *PdfPageResourcesColorspaces )ToPdfObject ()_eec .PdfObject {_bdegb :=_eec .MakeDict ();for _ ,_ggfd :=range _bcbd .Names {_bdegb .Set (_eec .PdfObjectName (_ggfd ),_bcbd .Colorspaces [_ggfd ].ToPdfObject ());};if _bcbd ._gbfba !=nil {_bcbd ._gbfba .PdfObject =_bdegb ;return _bcbd ._gbfba ;};return _bdegb ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_dedbg *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_gfeg *PdfOutline )GetContainingPdfObject ()_eec .PdfObject {return _gfeg ._aagc };

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// SetShadingByName sets a shading resource specified by keyName.
func (_beaag *PdfPageResources )SetShadingByName (keyName _eec .PdfObjectName ,shadingObj _eec .PdfObject )error {if _beaag .Shading ==nil {_beaag .Shading =_eec .MakeDict ();};_agbeg ,_dfgcc :=_beaag .Shading .(*_eec .PdfObjectDictionary );if !_dfgcc {return _eec .ErrTypeError ;};_agbeg .Set (keyName ,shadingObj );return nil ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_fgag *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_fgag .updateObjectsDeep (dss .ToPdfObject (),nil );};_fgag ._geag =dss ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_ceee :=NewPdfAnnotation ();_fcea :=&PdfAnnotationFileAttachment {};_fcea .PdfAnnotation =_ceee ;_fcea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ceee .SetContext (_fcea );return _fcea ;};func _fgfc (_fadf _eec .PdfObject )(*PdfFunctionType2 ,error ){_aefb :=&PdfFunctionType2 {};var _fggf *_eec .PdfObjectDictionary ;if _cfbf ,_fdfg :=_fadf .(*_eec .PdfIndirectObject );_fdfg {_agfeg ,_ceaa :=_cfbf .PdfObject .(*_eec .PdfObjectDictionary );if !_ceaa {return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aefb ._ccfbg =_cfbf ;_fggf =_agfeg ;}else if _gcbef ,_fcfaf :=_fadf .(*_eec .PdfObjectDictionary );_fcfaf {_fggf =_gcbef ;}else {return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bfg .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_fggf .String ());_gbfbe ,_efffe :=_eec .TraceToDirectObject (_fggf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_eec .PdfObjectArray );if !_efffe {_bfg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _gbfbe .Len ()< 0||_gbfbe .Len ()%2!=0{_bfg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_fe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dece ,_aedef :=_gbfbe .ToFloat64Array ();if _aedef !=nil {return nil ,_aedef ;};_aefb .Domain =_dece ;_gbfbe ,_efffe =_eec .TraceToDirectObject (_fggf .Get ("\u0052\u0061\u006eg\u0065")).(*_eec .PdfObjectArray );if _efffe {if _gbfbe .Len ()< 0||_gbfbe .Len ()%2!=0{return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ebfb ,_aadfe :=_gbfbe .ToFloat64Array ();if _aadfe !=nil {return nil ,_aadfe ;};_aefb .Range =_ebfb ;};_gbfbe ,_efffe =_eec .TraceToDirectObject (_fggf .Get ("\u0043\u0030")).(*_eec .PdfObjectArray );if _efffe {_fbaae ,_ggfaa :=_gbfbe .ToFloat64Array ();if _ggfaa !=nil {return nil ,_ggfaa ;};_aefb .C0 =_fbaae ;};_gbfbe ,_efffe =_eec .TraceToDirectObject (_fggf .Get ("\u0043\u0031")).(*_eec .PdfObjectArray );if _efffe {_bgce ,_eefca :=_gbfbe .ToFloat64Array ();if _eefca !=nil {return nil ,_eefca ;};_aefb .C1 =_bgce ;};if len (_aefb .C0 )!=len (_aefb .C1 ){_bfg .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_eec .ErrRangeError ;};N ,_aedef :=_eec .GetNumberAsFloat (_eec .TraceToDirectObject (_fggf .Get ("\u004e")));if _aedef !=nil {_bfg .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_fggf .String ());return nil ,_aedef ;};_aefb .N =N ;return _aefb ,nil ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _eec .PdfObject ;};func (_adf *PdfReader )newPdfActionThreadFromDict (_bbg *_eec .PdfObjectDictionary )(*PdfActionThread ,error ){_aada ,_fee :=_fecb (_bbg .Get ("\u0046"));if _fee !=nil {return nil ,_fee ;};return &PdfActionThread {D :_bbg .Get ("\u0044"),B :_bbg .Get ("\u0042"),F :_aada },nil ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_addac FieldFlag )Mask ()uint32 {return uint32 (_addac )};

// ToPdfObject implements interface PdfModel.
func (_edg *PdfAnnotationCaret )ToPdfObject ()_eec .PdfObject {_edg .PdfAnnotation .ToPdfObject ();_ebf :=_edg ._dge ;_eafe :=_ebf .PdfObject .(*_eec .PdfObjectDictionary );_edg .PdfAnnotationMarkup .appendToPdfDictionary (_eafe );_eafe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0043\u0061\u0072e\u0074"));_eafe .SetIfNotNil ("\u0052\u0044",_edg .RD );_eafe .SetIfNotNil ("\u0053\u0079",_edg .Sy );return _ebf ;};func _cacec (_gacc *PdfField )[]*PdfField {_bfabf :=[]*PdfField {_gacc };for _ ,_fbcab :=range _gacc .Kids {_bfabf =append (_bfabf ,_cacec (_fbcab )...);};return _bfabf ;};

// ToPdfObject implements interface PdfModel.
func (_bfc *PdfActionGoTo )ToPdfObject ()_eec .PdfObject {_bfc .PdfAction .ToPdfObject ();_dee :=_bfc ._aa ;_eecd :=_dee .PdfObject .(*_eec .PdfObjectDictionary );_eecd .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeGoTo )));_eecd .SetIfNotNil ("\u0044",_bfc .D );return _dee ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_gdcc *PdfColorspaceLab )GetNumComponents ()int {return 3};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_cdeg *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_deag :=_efe .NewReader (img .getBase ());_ebaf :=_fc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_bggedd :=_efe .NewWriter (_ebaf );_gbaf :=_fba .Pow (2,float64 (img .BitsPerComponent ))-1;_bbec :=make ([]uint32 ,3);var (_aggag uint32 ;ANorm ,X ,Y ,Z ,_aeeg ,_abce ,_afbf float64 ;_cegd error ;);for {_aggag ,_cegd =_deag .ReadSample ();if _cegd ==_dd .EOF {break ;}else if _cegd !=nil {return img ,_cegd ;};ANorm =float64 (_aggag )/_gbaf ;X =_cdeg .WhitePoint [0]*_fba .Pow (ANorm ,_cdeg .Gamma );Y =_cdeg .WhitePoint [1]*_fba .Pow (ANorm ,_cdeg .Gamma );Z =_cdeg .WhitePoint [2]*_fba .Pow (ANorm ,_cdeg .Gamma );_aeeg =3.240479*X +-1.537150*Y +-0.498535*Z ;_abce =-0.969256*X +1.875992*Y +0.041556*Z ;_afbf =0.055648*X +-0.204043*Y +1.057311*Z ;_aeeg =_fba .Min (_fba .Max (_aeeg ,0),1.0);_abce =_fba .Min (_fba .Max (_abce ,0),1.0);_afbf =_fba .Min (_fba .Max (_afbf ,0),1.0);_bbec [0]=uint32 (_aeeg *_gbaf );_bbec [1]=uint32 (_abce *_gbaf );_bbec [2]=uint32 (_afbf *_gbaf );if _cegd =_bggedd .WriteSamples (_bbec );_cegd !=nil {return img ,_cegd ;};};return _bffcg (&_ebaf ),nil ;};func (_gddac *LTV )validateSig (_aafc *PdfSignature )error {if _aafc ==nil ||_aafc .Contents ==nil ||len (_aafc .Contents .Bytes ())==0{return _b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_aafc );};return nil ;};

// SetAnnotations sets the annotations list.
func (_aefgg *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_aefgg ._fadd =annotations };func (_dcba *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};func _febde ()_bf .Time {_aafbed .Lock ();defer _aafbed .Unlock ();return _gagf };

// IsShading specifies if the pattern is a shading pattern.
func (_dgedg *PdfPattern )IsShading ()bool {return _dgedg .PatternType ==2};func _fdebg (_faddf *PdfPage ){_gfea :=_ea .GetLicenseKey ();if _gfea !=nil &&_gfea .IsLicensed (){return ;};_dddd :=_eec .PdfObjectName ("\u0055\u0046\u0031");if !_faddf .Resources .HasFontByName (_dddd ){_faddf .Resources .SetFontByName (_dddd ,DefaultFont ().ToPdfObject ());};var _acdff []string ;_acdff =append (_acdff ,"\u0071");_acdff =append (_acdff ,"\u0042\u0054");_acdff =append (_acdff ,_b .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_dddd .String ()));_acdff =append (_acdff ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_acdff =append (_acdff ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_edgcc :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";_acdff =append (_acdff ,_b .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_edgcc ));_acdff =append (_acdff ,"\u0045\u0054");_acdff =append (_acdff ,"\u0051");_dgagg :=_beb .Join (_acdff ,"\u000a");_faddf .AddContentStreamByString (_dgagg );_faddf .ToPdfObject ();};

// ReplacePage replaces the original page to a new page.
func (_aeda *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_aedd :=pageNum -1;for _gbfe :=range _aeda ._gcfc {if _gbfe ==_aedd {_cdeb :=page .Duplicate ();_fdebg (_cdeb );_aeda ._gcfc [_gbfe ]=_cdeb ;};};};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_ecgdg *PdfOutlineTreeNode )GetContext ()PdfModel {if _gcfaa ,_ggdg :=_ecgdg ._geaac .(*PdfOutline );_ggdg {return _gcfaa ;};if _cacg ,_adac :=_ecgdg ._geaac .(*PdfOutlineItem );_adac {return _cacg ;};_bfg .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");return nil ;};

// RemovePage removes a page by number.
func (_fdebc *PdfAppender )RemovePage (pageNum int ){_bcef :=pageNum -1;_fdebc ._gcfc =append (_fdebc ._gcfc [0:_bcef ],_fdebc ._gcfc [pageNum :]...);};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_caga :=NewPdfAnnotation ();_edbb :=&PdfAnnotationPrinterMark {};_edbb .PdfAnnotation =_caga ;_caga .SetContext (_edbb );return _edbb ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_eec .PdfObjectStream )(*XObjectForm ,error ){_eeea :=&XObjectForm {};_eeea ._edeb =stream ;_gaaaa :=*(stream .PdfObjectDictionary );_eddbf ,_bbffe :=_eec .NewEncoderFromStream (stream );if _bbffe !=nil {return nil ,_bbffe ;};_eeea .Filter =_eddbf ;if _acdad :=_gaaaa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_acdad !=nil {_gdabf ,_afce :=_acdad .(*_eec .PdfObjectName );if !_afce {return nil ,_fe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_gdabf !="\u0046\u006f\u0072\u006d"{_bfg .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_fe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _baeed :=_gaaaa .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_baeed !=nil {_eeea .FormType =_baeed ;};if _fecbd :=_gaaaa .Get ("\u0042\u0042\u006f\u0078");_fecbd !=nil {_eeea .BBox =_fecbd ;};if _egeee :=_gaaaa .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_egeee !=nil {_eeea .Matrix =_egeee ;};if _ecbgd :=_gaaaa .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ecbgd !=nil {_ecbgd =_eec .TraceToDirectObject (_ecbgd );_gdada ,_eeeee :=_ecbgd .(*_eec .PdfObjectDictionary );if !_eeeee {_bfg .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_eec .ErrTypeError ;};_cfgdg ,_cccba :=NewPdfPageResourcesFromDict (_gdada );if _cccba !=nil {_bfg .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");return nil ,_cccba ;};_eeea .Resources =_cfgdg ;_bfg .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_eeea .Resources );};_eeea .Group =_gaaaa .Get ("\u0047\u0072\u006fu\u0070");_eeea .Ref =_gaaaa .Get ("\u0052\u0065\u0066");_eeea .MetaData =_gaaaa .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_eeea .PieceInfo =_gaaaa .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_eeea .LastModified =_gaaaa .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_eeea .StructParent =_gaaaa .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_eeea .StructParents =_gaaaa .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_eeea .OPI =_gaaaa .Get ("\u004f\u0050\u0049");_eeea .OC =_gaaaa .Get ("\u004f\u0043");_eeea .Name =_gaaaa .Get ("\u004e\u0061\u006d\u0065");_eeea .Stream =stream .Stream ;return _eeea ,nil ;};

// ToGoTime returns the date in time.Time format.
func (_baaec PdfDate )ToGoTime ()_bf .Time {_dgbd :=int (_baaec ._acbag *60*60+_baaec ._dege *60);switch _baaec ._caab {case '-':_dgbd =-_dgbd ;case 'Z':_dgbd =0;};_fdaae :=_b .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_baaec ._caab ,_baaec ._acbag ,_baaec ._dege );_eccad :=_bf .FixedZone (_fdaae ,_dgbd );return _bf .Date (int (_baaec ._bgcc ),_bf .Month (_baaec ._dbbdc ),int (_baaec ._dbcbf ),int (_baaec ._dbfcf ),int (_baaec ._bebab ),int (_baaec ._gdfec ),0,_eccad );};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_daecg :=PdfColorCalRGB {a ,b ,c };return &_daecg ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_eaef *_eec .PdfIndirectObject ;_edffb *_eec .PdfIndirectObject ;_effa map[_eec .PdfObject ]struct{};_gceg []_eec .PdfObject ;_agdb map[_eec .PdfObject ]struct{};_gefeg []*_eec .PdfIndirectObject ;_gbfcg *PdfOutlineTreeNode ;_fbafd *_eec .PdfObjectDictionary ;_bfbb []_eec .PdfObject ;_fegdg *_eec .PdfIndirectObject ;_bccga *_bg .Writer ;_afeba int64 ;_ceagg error ;_fecff *_eec .PdfCrypt ;_affbd *_eec .PdfObjectDictionary ;_bcacg *_eec .PdfIndirectObject ;_abbee *_eec .PdfObjectArray ;_effdf int ;_ebagb int ;_aggde *bool ;_fgdef map[_eec .PdfObject ][]*_eec .PdfObjectDictionary ;_fcgga *PdfAcroForm ;_fgadg Optimizer ;_adgb map[int ]crossReference ;_adgca int64 ;ObjNumOffset int ;_gadfca bool ;_eccac _eec .XrefTable ;_ccebe int64 ;_adbg int64 ;_gcfda map[_eec .PdfObject ]int64 ;_debg map[_eec .PdfObject ]struct{};_fbfda string ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_daad *PdfFieldChoice )ToPdfObject ()_eec .PdfObject {_daad .PdfField .ToPdfObject ();_ggagf :=_daad ._bedf ;_acfbae :=_ggagf .PdfObject .(*_eec .PdfObjectDictionary );_acfbae .Set ("\u0046\u0054",_eec .MakeName ("\u0043\u0068"));if _daad .Opt !=nil {_acfbae .Set ("\u004f\u0070\u0074",_daad .Opt );};if _daad .TI !=nil {_acfbae .Set ("\u0054\u0049",_daad .TI );};if _daad .I !=nil {_acfbae .Set ("\u0049",_daad .I );};return _ggagf ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_dea .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_dea .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_dea .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_bcagf *PdfAppender ;_ceeega *DSS ;};

// ToPdfObject implements interface PdfModel.
func (_ege *PdfAnnotationSound )ToPdfObject ()_eec .PdfObject {_ege .PdfAnnotation .ToPdfObject ();_ceef :=_ege ._dge ;_dfc :=_ceef .PdfObject .(*_eec .PdfObjectDictionary );_ege .PdfAnnotationMarkup .appendToPdfDictionary (_dfc );_dfc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0053\u006f\u0075n\u0064"));_dfc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ege .Sound );_dfc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ege .Name );return _ceef ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_deca *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_eec .PdfObject )(PdfColor ,error ){if len (objects )!=_deca .GetNumComponents (){return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baeee ,_cggag :=_eec .GetNumbersAsFloat (objects );if _cggag !=nil {return nil ,_cggag ;};return _deca .ColorFromFloats (_baeee );};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};func (_ccbf *fontFile )parseASCIIPart (_gfag []byte )error {if len (_gfag )< 2||string (_gfag [:2])!="\u0025\u0021"{return _fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");};_affec ,_abff ,_eeafg :=_efgcb (_gfag );if _eeafg !=nil {return _eeafg ;};_gggg :=_facfc (_affec );_ccbf ._ggceb =_gggg ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _ccbf ._ggceb ==""{_bfg .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");};if _abff !=""{_ebddb ,_aedf :=_bdfd (_abff );if _aedf !=nil {return _aedf ;};_acgdf ,_aedf :=_fcb .NewCustomSimpleTextEncoder (_ebddb ,nil );if _aedf !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_aedf );return nil ;};_ccbf ._fdgg =_acgdf ;};return nil ;};func _ageg (_bgdbc _eec .PdfObject )(*PdfFunctionType3 ,error ){_caffg :=&PdfFunctionType3 {};var _caeb *_eec .PdfObjectDictionary ;if _gcag ,_aecg :=_bgdbc .(*_eec .PdfIndirectObject );_aecg {_ecff ,_dcaca :=_gcag .PdfObject .(*_eec .PdfObjectDictionary );if !_dcaca {return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_caffg ._bead =_gcag ;_caeb =_ecff ;}else if _fbge ,_cfeb :=_bgdbc .(*_eec .PdfObjectDictionary );_cfeb {_caeb =_fbge ;}else {return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cfcgd ,_ddfdg :=_eec .TraceToDirectObject (_caeb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_eec .PdfObjectArray );if !_ddfdg {_bfg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cfcgd .Len ()!=2{_bfg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cgfgb ,_bfafeb :=_cfcgd .ToFloat64Array ();if _bfafeb !=nil {return nil ,_bfafeb ;};_caffg .Domain =_cgfgb ;_cfcgd ,_ddfdg =_eec .TraceToDirectObject (_caeb .Get ("\u0052\u0061\u006eg\u0065")).(*_eec .PdfObjectArray );if _ddfdg {if _cfcgd .Len ()< 0||_cfcgd .Len ()%2!=0{return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_egbbd ,_gdgd :=_cfcgd .ToFloat64Array ();if _gdgd !=nil {return nil ,_gdgd ;};_caffg .Range =_egbbd ;};_cfcgd ,_ddfdg =_eec .TraceToDirectObject (_caeb .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_eec .PdfObjectArray );if !_ddfdg {_bfg .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_caffg .Functions =[]PdfFunction {};for _ ,_dadb :=range _cfcgd .Elements (){_egdd ,_ggcea :=_bdfbe (_dadb );if _ggcea !=nil {return nil ,_ggcea ;};_caffg .Functions =append (_caffg .Functions ,_egdd );};_cfcgd ,_ddfdg =_eec .TraceToDirectObject (_caeb .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_eec .PdfObjectArray );if !_ddfdg {_bfg .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dcdc ,_bfafeb :=_cfcgd .ToFloat64Array ();if _bfafeb !=nil {return nil ,_bfafeb ;};_caffg .Bounds =_dcdc ;if len (_caffg .Bounds )!=len (_caffg .Functions )-1{_bfg .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_caffg .Bounds ),len (_caffg .Functions ));return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfcgd ,_ddfdg =_eec .TraceToDirectObject (_caeb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_eec .PdfObjectArray );if !_ddfdg {_bfg .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cbeea ,_bfafeb :=_cfcgd .ToFloat64Array ();if _bfafeb !=nil {return nil ,_bfafeb ;};_caffg .Encode =_cbeea ;if len (_caffg .Encode )!=2*len (_caffg .Functions ){_bfg .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_caffg .Encode ),len (_caffg .Functions ));return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _caffg ,nil ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _eec .PdfObject ;T _eec .PdfObject ;Operation _eec .PdfObject ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_dbfgb *XObjectForm )SetContentStream (content []byte ,encoder _eec .StreamEncoder )error {_fbggcf :=content ;if encoder ==nil {if _dbfgb .Filter !=nil {encoder =_dbfgb .Filter ;}else {encoder =_eec .NewRawEncoder ();};};_bcgeg ,_aeddf :=encoder .EncodeBytes (_fbggcf );if _aeddf !=nil {return _aeddf ;};_fbggcf =_bcgeg ;_dbfgb .Stream =_fbggcf ;_dbfgb .Filter =encoder ;return nil ;};

// SetImage updates XObject Image with new image data.
func (_gbac *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_gbac .Filter .UpdateParams (img .GetParamsDict ());_bbbde ,_bbed :=_gbac .Filter .EncodeBytes (img .Data );if _bbed !=nil {return _bbed ;};_gbac .Stream =_bbbde ;_cebg :=img .Width ;_gbac .Width =&_cebg ;_ebaab :=img .Height ;_gbac .Height =&_ebaab ;_gcade :=img .BitsPerComponent ;_gbac .BitsPerComponent =&_gcade ;if cs ==nil {if img .ColorComponents ==1{_gbac .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_gbac .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_gbac .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _fe .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_gbac .ColorSpace =cs ;};return nil ;};func _fdee (_gagc _eec .PdfObject )(*PdfColorspaceLab ,error ){_efega :=NewPdfColorspaceLab ();if _ebgb ,_ecbg :=_gagc .(*_eec .PdfIndirectObject );_ecbg {_efega ._bafdg =_ebgb ;};_gagc =_eec .TraceToDirectObject (_gagc );_bcge ,_adce :=_gagc .(*_eec .PdfObjectArray );if !_adce {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bcge .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_gagc =_eec .TraceToDirectObject (_bcge .Get (0));_gaddd ,_adce :=_gagc .(*_eec .PdfObjectName );if !_adce {return nil ,_b .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_gaddd !="\u004c\u0061\u0062"{return nil ,_b .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_gagc =_eec .TraceToDirectObject (_bcge .Get (1));_ggfcbf ,_adce :=_gagc .(*_eec .PdfObjectDictionary );if !_adce {return nil ,_b .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_gagc =_ggfcbf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gagc =_eec .TraceToDirectObject (_gagc );_addb ,_adce :=_gagc .(*_eec .PdfObjectArray );if !_adce {return nil ,_b .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _addb .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_dcebg ,_bgdaa :=_addb .GetAsFloat64Slice ();if _bgdaa !=nil {return nil ,_bgdaa ;};_efega .WhitePoint =_dcebg ;_gagc =_ggfcbf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gagc !=nil {_gagc =_eec .TraceToDirectObject (_gagc );_dbbee ,_cfge :=_gagc .(*_eec .PdfObjectArray );if !_cfge {return nil ,_b .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _dbbee .Len ()!=3{return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_aabf ,_fedg :=_dbbee .GetAsFloat64Slice ();if _fedg !=nil {return nil ,_fedg ;};_efega .BlackPoint =_aabf ;};_gagc =_ggfcbf .Get ("\u0052\u0061\u006eg\u0065");if _gagc !=nil {_gagc =_eec .TraceToDirectObject (_gagc );_acff ,_afcd :=_gagc .(*_eec .PdfObjectArray );if !_afcd {_bfg .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_b .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _acff .Len ()!=4{_bfg .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_b .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_baee ,_ecddd :=_acff .GetAsFloat64Slice ();if _ecddd !=nil {return nil ,_ecddd ;};_efega .Range =_baee ;};return _efega ,nil ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_fcedd *PdfPageResources )GetPatternByName (keyName _eec .PdfObjectName )(*PdfPattern ,bool ){if _fcedd .Pattern ==nil {return nil ,false ;};_ggaa ,_cdba :=_eec .TraceToDirectObject (_fcedd .Pattern ).(*_eec .PdfObjectDictionary );if !_cdba {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcedd .Pattern );return nil ,false ;};if _affdd :=_ggaa .Get (keyName );_affdd !=nil {_bcgba ,_cbbfc :=_aefgb (_affdd );if _cbbfc !=nil {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_cbbfc );return nil ,false ;};return _bcgba ,true ;};return nil ,false ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_adfdg *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _adfdg ._cdbgf .(*PdfTilingPattern );};

// GetPageDict converts the Page to a PDF object dictionary.
func (_ffee *PdfPage )GetPageDict ()*_eec .PdfObjectDictionary {_gdabb :=_ffee ._acfcf ;_gdabb .Clear ();_gdabb .Set ("\u0054\u0079\u0070\u0065",_eec .MakeName ("\u0050\u0061\u0067\u0065"));_gdabb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ffee .Parent );if _ffee .LastModified !=nil {_gdabb .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_ffee .LastModified .ToPdfObject ());};if _ffee .Resources !=nil {_gdabb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ffee .Resources .ToPdfObject ());};if _ffee .CropBox !=nil {_gdabb .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_ffee .CropBox .ToPdfObject ());};if _ffee .MediaBox !=nil {_gdabb .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_ffee .MediaBox .ToPdfObject ());};if _ffee .BleedBox !=nil {_gdabb .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_ffee .BleedBox .ToPdfObject ());};if _ffee .TrimBox !=nil {_gdabb .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_ffee .TrimBox .ToPdfObject ());};if _ffee .ArtBox !=nil {_gdabb .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_ffee .ArtBox .ToPdfObject ());};_gdabb .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_ffee .BoxColorInfo );_gdabb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ffee .Contents );if _ffee .Rotate !=nil {_gdabb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_eec .MakeInteger (*_ffee .Rotate ));};_gdabb .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_ffee .Group );_gdabb .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_ffee .Thumb );_gdabb .SetIfNotNil ("\u0042",_ffee .B );_gdabb .SetIfNotNil ("\u0044\u0075\u0072",_ffee .Dur );_gdabb .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_ffee .Trans );_gdabb .SetIfNotNil ("\u0041\u0041",_ffee .AA );_gdabb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ffee .Metadata );_gdabb .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_ffee .PieceInfo );_gdabb .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_ffee .StructParents );_gdabb .SetIfNotNil ("\u0049\u0044",_ffee .ID );_gdabb .SetIfNotNil ("\u0050\u005a",_ffee .PZ );_gdabb .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_ffee .SeparationInfo );_gdabb .SetIfNotNil ("\u0054\u0061\u0062\u0073",_ffee .Tabs );_gdabb .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_ffee .TemplateInstantiated );_gdabb .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_ffee .PresSteps );_gdabb .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_ffee .UserUnit );_gdabb .SetIfNotNil ("\u0056\u0050",_ffee .VP );if _ffee ._fadd !=nil {_fgcbb :=_eec .MakeArray ();for _ ,_adfg :=range _ffee ._fadd {if _fbggc :=_adfg .GetContext ();_fbggc !=nil {_fgcbb .Append (_fbggc .ToPdfObject ());}else {_fgcbb .Append (_adfg .ToPdfObject ());};};if _fgcbb .Len ()> 0{_gdabb .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_fgcbb );};}else if _ffee .Annots !=nil {_gdabb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_ffee .Annots );};return _gdabb ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_gd :=NewPdfAction ();_gc :=&PdfActionLaunch {};_gc .PdfAction =_gd ;_gd .SetContext (_gc );return _gc ;};

// ToPdfObject implements interface PdfModel.
func (_feee *PdfAnnotationStrikeOut )ToPdfObject ()_eec .PdfObject {_feee .PdfAnnotation .ToPdfObject ();_dggf :=_feee ._dge ;_ggec :=_dggf .PdfObject .(*_eec .PdfObjectDictionary );_feee .PdfAnnotationMarkup .appendToPdfDictionary (_ggec );_ggec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));_ggec .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_feee .QuadPoints );return _dggf ;};

// ToInteger convert to an integer format.
func (_ffge *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_cbbe :=_fba .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_cbbe *_ffge .C ()),uint32 (_cbbe *_ffge .M ()),uint32 (_cbbe *_ffge .Y ()),uint32 (_cbbe *_ffge .K ())};};func (_bace *PdfReader )newPdfAnnotationStampFromDict (_dbbec *_eec .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_afbe :=PdfAnnotationStamp {};_edfc ,_ebg :=_bace .newPdfAnnotationMarkupFromDict (_dbbec );if _ebg !=nil {return nil ,_ebg ;};_afbe .PdfAnnotationMarkup =_edfc ;_afbe .Name =_dbbec .Get ("\u004e\u0061\u006d\u0065");return &_afbe ,nil ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_abeb *PdfFieldButton )IsRadio ()bool {return _abeb .GetType ()==ButtonTypeRadio };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_fgga *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gbcga :=vals [0];_becfc :=[]float64 {_gbcga };_fcaaa ,_ceffb :=_fgga .TintTransform .Evaluate (_becfc );if _ceffb !=nil {_bfg .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_ceffb );_bfg .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fgga .TintTransform );return nil ,_ceffb ;};_bfg .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_fcaaa ,_fgga .AlternateSpace );_aegf ,_ceffb :=_fgga .AlternateSpace .ColorFromFloats (_fcaaa );if _ceffb !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_ceffb );return nil ,_ceffb ;};return _aegf ,nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_fce :=NewPdfAction ();_bgg :=&PdfActionGoTo {};_bgg .PdfAction =_fce ;_fce .SetContext (_bgg );return _bgg ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _eec .PdfObject ;Volume _eec .PdfObject ;Synchronous _eec .PdfObject ;Repeat _eec .PdfObject ;Mix _eec .PdfObject ;};

// B returns the value of the B component of the color.
func (_efcfa *PdfColorCalRGB )B ()float64 {return _efcfa [1]};func _gdga (_egeg *_eec .PdfObjectDictionary )(*PdfFieldText ,error ){_dbfb :=&PdfFieldText {};_dbfb .DA ,_ =_eec .GetString (_egeg .Get ("\u0044\u0041"));_dbfb .Q ,_ =_eec .GetInt (_egeg .Get ("\u0051"));_dbfb .DS ,_ =_eec .GetString (_egeg .Get ("\u0044\u0053"));_dbfb .RV =_egeg .Get ("\u0052\u0056");_dbfb .MaxLen ,_ =_eec .GetInt (_egeg .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _dbfb ,nil ;};func _bbge (_cefg *_eec .PdfObjectDictionary ,_gadcc *fontCommon )(*pdfCIDFontType0 ,error ){if _gadcc ._bgga !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_bfg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gadcc );return nil ,_eec .ErrRangeError ;};_dffe :=_faaf (_gadcc );_gggf ,_fdgd :=_eec .GetDict (_cefg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_fdgd {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gadcc );return nil ,ErrRequiredAttributeMissing ;};_dffe .CIDSystemInfo =_gggf ;_dffe .DW =_cefg .Get ("\u0044\u0057");_dffe .W =_cefg .Get ("\u0057");_dffe .DW2 =_cefg .Get ("\u0044\u0057\u0032");_dffe .W2 =_cefg .Get ("\u0057\u0032");_dffe ._dbaf =1000.0;if _ffaa ,_eeeb :=_eec .GetNumberAsFloat (_dffe .DW );_eeeb ==nil {_dffe ._dbaf =_ffaa ;};_gaeb ,_fbaeb :=_badbg (_dffe .W );if _fbaeb !=nil {return nil ,_fbaeb ;};if _gaeb ==nil {_gaeb =map[_fcb .CharCode ]float64 {};};_dffe ._bfced =_gaeb ;return _dffe ,nil ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_ggaf *_eec .PdfIndirectObject ;Certs []*_eec .PdfObjectStream ;OCSPs []*_eec .PdfObjectStream ;CRLs []*_eec .PdfObjectStream ;VRI map[string ]*VRI ;_bgeb map[string ]*_eec .PdfObjectStream ;_ebca map[string ]*_eec .PdfObjectStream ;_gebd map[string ]*_eec .PdfObjectStream ;};

// GetXObjectByName gets XObject by name.
func (_ffdea *PdfPage )GetXObjectByName (name _eec .PdfObjectName )(_eec .PdfObject ,bool ){_eafcb ,_bbcdd :=_ffdea .Resources .XObject .(*_eec .PdfObjectDictionary );if !_bbcdd {return nil ,false ;};if _fgfgg :=_eafcb .Get (name );_fgfgg !=nil {return _fgfgg ,true ;};return nil ,false ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_bbbg *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_ebec ,_fbfa :=color .(*PdfColorDeviceRGB );if !_fbfa {_bfg .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _ebec ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_cffbd *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_eec .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_faae ,_bdaec :=_eec .GetNumbersAsFloat (objects );if _bdaec !=nil {return nil ,_bdaec ;};return _cffbd .ColorFromFloats (_faae );};func (_ffg *PdfReader )newPdfActionGotoFromDict (_ggd *_eec .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_ggd .Get ("\u0044")},nil ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _eec .PdfObject ;AN _eec .PdfObject ;OP _eec .PdfObject ;JS _eec .PdfObject ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;func (_cfgc *XObjectImage )getParamsDict ()*_eec .PdfObjectDictionary {_eddbe :=_eec .MakeDict ();_eddbe .Set ("\u0057\u0069\u0064t\u0068",_eec .MakeInteger (*_cfgc .Width ));_eddbe .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_eec .MakeInteger (*_cfgc .Height ));_eddbe .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_eec .MakeInteger (int64 (_cfgc .ColorSpace .GetNumComponents ())));_eddbe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_eec .MakeInteger (*_cfgc .BitsPerComponent ));return _eddbe ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_dfdad *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_eec .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cafc ,_cdbe :=_eec .GetNumbersAsFloat (objects );if _cdbe !=nil {return nil ,_cdbe ;};return _dfdad .ColorFromFloats (_cafc );};func (_cebe *PdfReader )newPdfActionGoTo3DViewFromDict (_eeg *_eec .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_eeg .Get ("\u0054\u0041"),V :_eeg .Get ("\u0056")},nil ;};func (_eacca *pdfFontSimple )addEncoding ()error {var (_fecfe string ;_deba map[_fcb .CharCode ]_fcb .GlyphName ;_fdgdc _fcb .SimpleEncoder ;);if _eacca .Encoder ()!=nil {_eaede ,_gfbad :=_eacca .Encoder ().(_fcb .SimpleEncoder );if _gfbad &&_eaede !=nil {_fecfe =_eaede .BaseName ();};};if _eacca .Encoding !=nil {_ggff ,_beacd ,_dffde :=_eacca .getFontEncoding ();if _dffde !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eacca ._cefc ,_eacca ._bgga ,_eacca .Encoding ,_eacca .Encoding ,_dffde );return _dffde ;};if _ggff !=""{_fecfe =_ggff ;};_deba =_beacd ;_fdgdc ,_dffde =_fcb .NewSimpleTextEncoder (_fecfe ,_deba );if _dffde !=nil {return _dffde ;};};if _fdgdc ==nil {_ddgg :=_eacca ._cddbf ;if _ddgg !=nil {switch _eacca ._bgga {case "\u0054\u0079\u0070e\u0031":if _ddgg .fontFile !=nil &&_ddgg .fontFile ._fdgg !=nil {_bfg .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");_fdgdc =_ddgg .fontFile ._fdgg ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _ddgg ._bbea !=nil {_bfg .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_ddfad ,_fbbda :=_ddgg ._bbea .MakeEncoder ();if _fbbda ==nil {_fdgdc =_ddfad ;};};};};};if _fdgdc !=nil {if _deba !=nil {_bfg .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_deba ,_eacca .baseFields ());_fdgdc =_fcb .ApplyDifferences (_fdgdc ,_deba );};_eacca .SetEncoder (_fdgdc );};return nil ;};func (_bgfe *PdfReader )newPdfActionFromIndirectObject (_fdfd *_eec .PdfIndirectObject )(*PdfAction ,error ){_fbd ,_bgc :=_fdfd .PdfObject .(*_eec .PdfObjectDictionary );if !_bgc {return nil ,_b .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_bgfe ._cdafg .GetModelFromPrimitive (_fbd );model !=nil {_befa ,_faf :=model .(*PdfAction );if !_faf {return nil ,_b .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");};return _befa ,nil ;};_fab :=&PdfAction {};_fab ._aa =_fdfd ;_bgfe ._cdafg .Register (_fbd ,_fab );if _edf :=_fbd .Get ("\u0054\u0079\u0070\u0065");_edf !=nil {_bff ,_ffc :=_edf .(*_eec .PdfObjectName );if !_ffc {_bfg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_edf );}else {if *_bff !="\u0041\u0063\u0074\u0069\u006f\u006e"{_bfg .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_bff );};_fab .Type =_bff ;};};if _cff :=_fbd .Get ("\u004e\u0065\u0078\u0074");_cff !=nil {_fab .Next =_cff ;};if _aef :=_fbd .Get ("\u0053");_aef !=nil {_fab .S =_aef ;};_fdg ,_fggd :=_fab .S .(*_eec .PdfObjectName );if !_fggd {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fab .S );return nil ,_b .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fab .S );};_bfe :=PdfActionType (_fdg .String ());switch _bfe {case ActionTypeGoTo :_abaa ,_adb :=_bgfe .newPdfActionGotoFromDict (_fbd );if _adb !=nil {return nil ,_adb ;};_abaa .PdfAction =_fab ;_fab ._ce =_abaa ;return _fab ,nil ;case ActionTypeGoToR :_ceb ,_bce :=_bgfe .newPdfActionGotoRFromDict (_fbd );if _bce !=nil {return nil ,_bce ;};_ceb .PdfAction =_fab ;_fab ._ce =_ceb ;return _fab ,nil ;case ActionTypeGoToE :_add ,_ccf :=_bgfe .newPdfActionGotoEFromDict (_fbd );if _ccf !=nil {return nil ,_ccf ;};_add .PdfAction =_fab ;_fab ._ce =_add ;return _fab ,nil ;case ActionTypeLaunch :_bb ,_dfd :=_bgfe .newPdfActionLaunchFromDict (_fbd );if _dfd !=nil {return nil ,_dfd ;};_bb .PdfAction =_fab ;_fab ._ce =_bb ;return _fab ,nil ;case ActionTypeThread :_ebb ,_ebe :=_bgfe .newPdfActionThreadFromDict (_fbd );if _ebe !=nil {return nil ,_ebe ;};_ebb .PdfAction =_fab ;_fab ._ce =_ebb ;return _fab ,nil ;case ActionTypeURI :_aegg ,_ged :=_bgfe .newPdfActionURIFromDict (_fbd );if _ged !=nil {return nil ,_ged ;};_aegg .PdfAction =_fab ;_fab ._ce =_aegg ;return _fab ,nil ;case ActionTypeSound :_bca ,_dcb :=_bgfe .newPdfActionSoundFromDict (_fbd );if _dcb !=nil {return nil ,_dcb ;};_bca .PdfAction =_fab ;_fab ._ce =_bca ;return _fab ,nil ;case ActionTypeMovie :_ggf ,_ecg :=_bgfe .newPdfActionMovieFromDict (_fbd );if _ecg !=nil {return nil ,_ecg ;};_ggf .PdfAction =_fab ;_fab ._ce =_ggf ;return _fab ,nil ;case ActionTypeHide :_gcd ,_cgf :=_bgfe .newPdfActionHideFromDict (_fbd );if _cgf !=nil {return nil ,_cgf ;};_gcd .PdfAction =_fab ;_fab ._ce =_gcd ;return _fab ,nil ;case ActionTypeNamed :_cbe ,_dbe :=_bgfe .newPdfActionNamedFromDict (_fbd );if _dbe !=nil {return nil ,_dbe ;};_cbe .PdfAction =_fab ;_fab ._ce =_cbe ;return _fab ,nil ;case ActionTypeSubmitForm :_efd ,_dcce :=_bgfe .newPdfActionSubmitFormFromDict (_fbd );if _dcce !=nil {return nil ,_dcce ;};_efd .PdfAction =_fab ;_fab ._ce =_efd ;return _fab ,nil ;case ActionTypeResetForm :_aad ,_cag :=_bgfe .newPdfActionResetFormFromDict (_fbd );if _cag !=nil {return nil ,_cag ;};_aad .PdfAction =_fab ;_fab ._ce =_aad ;return _fab ,nil ;case ActionTypeImportData :_ecb ,_bcg :=_bgfe .newPdfActionImportDataFromDict (_fbd );if _bcg !=nil {return nil ,_bcg ;};_ecb .PdfAction =_fab ;_fab ._ce =_ecb ;return _fab ,nil ;case ActionTypeSetOCGState :_dbec ,_ade :=_bgfe .newPdfActionSetOCGStateFromDict (_fbd );if _ade !=nil {return nil ,_ade ;};_dbec .PdfAction =_fab ;_fab ._ce =_dbec ;return _fab ,nil ;case ActionTypeRendition :_cfe ,_acc :=_bgfe .newPdfActionRenditionFromDict (_fbd );if _acc !=nil {return nil ,_acc ;};_cfe .PdfAction =_fab ;_fab ._ce =_cfe ;return _fab ,nil ;case ActionTypeTrans :_cga ,_eff :=_bgfe .newPdfActionTransFromDict (_fbd );if _eff !=nil {return nil ,_eff ;};_cga .PdfAction =_fab ;_fab ._ce =_cga ;return _fab ,nil ;case ActionTypeGoTo3DView :_cac ,_ffb :=_bgfe .newPdfActionGoTo3DViewFromDict (_fbd );if _ffb !=nil {return nil ,_ffb ;};_cac .PdfAction =_fab ;_fab ._ce =_cac ;return _fab ,nil ;case ActionTypeJavaScript :_bga ,_aeb :=_bgfe .newPdfActionJavaScriptFromDict (_fbd );if _aeb !=nil {return nil ,_aeb ;};_bga .PdfAction =_fab ;_fab ._ce =_bga ;return _fab ,nil ;};_bfg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_bfe );return nil ,nil ;};

// Items returns all children outline items.
func (_dcbbf *OutlineItem )Items ()[]*OutlineItem {return _dcbbf .Entries };

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dedgg pdfCIDFontType2 )GetRuneMetrics (r rune )(_de .CharMetrics ,bool ){_geceg ,_gafa :=_dedgg ._cfbcg [r ];if !_gafa {_edfd ,_acgde :=_eec .GetInt (_dedgg .DW );if !_acgde {return _de .CharMetrics {},false ;};_geceg =int (*_edfd );};return _de .CharMetrics {Wx :float64 (_geceg )},true ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ffadbf *PdfShadingType4 )ToPdfObject ()_eec .PdfObject {_ffadbf .PdfShading .ToPdfObject ();_accfd ,_agedf :=_ffadbf .getShadingDict ();if _agedf !=nil {_bfg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ffadbf .BitsPerCoordinate !=nil {_accfd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ffadbf .BitsPerCoordinate );};if _ffadbf .BitsPerComponent !=nil {_accfd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ffadbf .BitsPerComponent );};if _ffadbf .BitsPerFlag !=nil {_accfd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ffadbf .BitsPerFlag );};if _ffadbf .Decode !=nil {_accfd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ffadbf .Decode );};if _ffadbf .Function !=nil {if len (_ffadbf .Function )==1{_accfd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ffadbf .Function [0].ToPdfObject ());}else {_gbec :=_eec .MakeArray ();for _ ,_bfadf :=range _ffadbf .Function {_gbec .Append (_bfadf .ToPdfObject ());};_accfd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbec );};};return _ffadbf ._fbeg ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_gagdac *DSS )ToPdfObject ()_eec .PdfObject {_fegd :=_gagdac ._ggaf .PdfObject .(*_eec .PdfObjectDictionary );_fegd .Clear ();_bcefa :=_eec .MakeDict ();for _gcga ,_baga :=range _gagdac .VRI {_bcefa .Set (*_eec .MakeName (_gcga ),_baga .ToPdfObject ());};_fegd .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_adegd (_gagdac .Certs ));_fegd .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_adegd (_gagdac .OCSPs ));_fegd .SetIfNotNil ("\u0043\u0052\u004c\u0073",_adegd (_gagdac .CRLs ));_fegd .Set ("\u0056\u0052\u0049",_bcefa );return _gagdac ._ggaf ;};

// GetAction returns the PDF action for the annotation link.
func (_bac *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _bac ._gdf !=nil {return _bac ._gdf ,nil ;};if _bac .A ==nil {return nil ,nil ;};if _bac ._ffdf ==nil {return nil ,nil ;};_bgd ,_adg :=_bac ._ffdf .loadAction (_bac .A );if _adg !=nil {return nil ,_adg ;};_bac ._gdf =_bgd ;return _bac ._gdf ,nil ;};func (_dcde *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};func (_fbe *PdfReader )newPdfActionHideFromDict (_bffa *_eec .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_bffa .Get ("\u0054"),H :_bffa .Get ("\u0048")},nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_bcfed *PdfPageResources )GetExtGState (keyName _eec .PdfObjectName )(_eec .PdfObject ,bool ){if _bcfed .ExtGState ==nil {return nil ,false ;};_dbfba ,_eabeg :=_eec .TraceToDirectObject (_bcfed .ExtGState ).(*_eec .PdfObjectDictionary );if !_eabeg {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bcfed .ExtGState );return nil ,false ;};if _fgeg :=_dbfba .Get (keyName );_fgeg !=nil {return _fgeg ,true ;};return nil ,false ;};func _beegc (_gdfce *_eec .PdfObjectDictionary )(*PdfFieldButton ,error ){_ffccd :=&PdfFieldButton {};_ffccd .Opt ,_ =_eec .GetArray (_gdfce .Get ("\u004f\u0070\u0074"));return _ffccd ,nil ;};func (_bbffb *PdfField )inherit (_gadb func (*PdfField )bool )(bool ,error ){_gffb :=map[*PdfField ]bool {};_bcea :=false ;_eabg :=_bbffb ;for _eabg !=nil {if _ ,_gbbea :=_gffb [_eabg ];_gbbea {return false ,_fe .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_ccae :=_gadb (_eabg );if _ccae {_bcea =true ;break ;};_gffb [_eabg ]=true ;_eabg =_eabg .Parent ;};return _bcea ,nil ;};func (_dgg *PdfReader )newPdfActionLaunchFromDict (_bad *_eec .PdfObjectDictionary )(*PdfActionLaunch ,error ){_ccce ,_cee :=_fecb (_bad .Get ("\u0046"));if _cee !=nil {return nil ,_cee ;};return &PdfActionLaunch {Win :_bad .Get ("\u0057\u0069\u006e"),Mac :_bad .Get ("\u004d\u0061\u0063"),Unix :_bad .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_bad .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_ccce },nil ;};

// Fill populates `form` with values provided by `provider`.
func (_fdba *PdfAcroForm )Fill (provider FieldValueProvider )error {return _fdba .fill (provider ,nil )};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _eec .PdfObject ;Dest _eec .PdfObject ;H _eec .PdfObject ;PA _eec .PdfObject ;QuadPoints _eec .PdfObject ;BS _eec .PdfObject ;_gdf *PdfAction ;_ffdf *PdfReader ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_cbdf ,_cbbbf :=NewStandard14Font (basefont );if _cbbbf !=nil {panic (_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));};return _cbdf ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_fgef *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// ToPdfObject returns the PDF representation of the colorspace.
func (_gdadd *PdfColorspaceDeviceRGB )ToPdfObject ()_eec .PdfObject {return _eec .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_afga :=NewPdfOutline ();_afga ._geaac =&_afga ;return _afga };

// ToPdfObject returns the PDF representation of the colorspace.
func (_ffcd *PdfColorspaceSpecialSeparation )ToPdfObject ()_eec .PdfObject {_fbgc :=_eec .MakeArray (_eec .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_fbgc .Append (_ffcd .ColorantName );_fbgc .Append (_ffcd .AlternateSpace .ToPdfObject ());_fbgc .Append (_ffcd .TintTransform .ToPdfObject ());if _ffcd ._beaf !=nil {_ffcd ._beaf .PdfObject =_fbgc ;return _ffcd ._beaf ;};return _fbgc ;};

// ToPdfObject implements interface PdfModel.
func (_ggb *PdfAnnotationPrinterMark )ToPdfObject ()_eec .PdfObject {_ggb .PdfAnnotation .ToPdfObject ();_gfcc :=_ggb ._dge ;_aeeb :=_gfcc .PdfObject .(*_eec .PdfObjectDictionary );_aeeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));_aeeb .SetIfNotNil ("\u004d\u004e",_ggb .MN );return _gfcc ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_ceg *PdfAnnotationWidget )Field ()*PdfField {return _ceg ._febe };

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_edd :=NewPdfAnnotation ();_bggeb :=&PdfAnnotationLine {};_bggeb .PdfAnnotation =_edd ;_bggeb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edd .SetContext (_bggeb );return _bggeb ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_fagc *PdfInfo )AddCustomInfo (name string ,value string )error {if _fagc ._beega ==nil {_fagc ._beega =_eec .MakeDict ();};if _ ,_ecdb :=_eegf [name ];_ecdb {return _b .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );};_fagc ._beega .SetIfNotNil (*_eec .MakeName (name ),_eec .MakeString (value ));return nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cbec :=PdfPage {};_cbec ._acfcf =_eec .MakeDict ();_cbec .Resources =NewPdfPageResources ();_effcb :=_eec .PdfIndirectObject {};_effcb .PdfObject =_cbec ._acfcf ;_cbec ._gbegb =&_effcb ;return &_cbec ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_febb :=NewPdfAnnotation ();_gbe :=&PdfAnnotationRichMedia {};_gbe .PdfAnnotation =_febb ;_febb .SetContext (_gbe );return _gbe ;};

// AddFont adds a font dictionary to the Font resources.
func (_dfdg *PdfPage )AddFont (name _eec .PdfObjectName ,font _eec .PdfObject )error {if _dfdg .Resources ==nil {_dfdg .Resources =NewPdfPageResources ();};if _dfdg .Resources .Font ==nil {_dfdg .Resources .Font =_eec .MakeDict ();};_febfc ,_dbcca :=_eec .TraceToDirectObject (_dfdg .Resources .Font ).(*_eec .PdfObjectDictionary );if !_dbcca {_bfg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_eec .TraceToDirectObject (_dfdg .Resources .Font ));return _fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_febfc .Set (name ,font );return nil ;};func _bgbd (_dcbgf *_eec .PdfObjectDictionary )(*PdfShadingType6 ,error ){_ggfdg :=PdfShadingType6 {};_eaafc :=_dcbgf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _eaafc ==nil {_bfg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_agfbd ,_adaec :=_eaafc .(*_eec .PdfObjectInteger );if !_adaec {_bfg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eaafc );return nil ,_eec .ErrTypeError ;};_ggfdg .BitsPerCoordinate =_agfbd ;_eaafc =_dcbgf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eaafc ==nil {_bfg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_agfbd ,_adaec =_eaafc .(*_eec .PdfObjectInteger );if !_adaec {_bfg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eaafc );return nil ,_eec .ErrTypeError ;};_ggfdg .BitsPerComponent =_agfbd ;_eaafc =_dcbgf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eaafc ==nil {_bfg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_agfbd ,_adaec =_eaafc .(*_eec .PdfObjectInteger );if !_adaec {_bfg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eaafc );return nil ,_eec .ErrTypeError ;};_ggfdg .BitsPerComponent =_agfbd ;_eaafc =_dcbgf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eaafc ==nil {_bfg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_dbebe ,_adaec :=_eaafc .(*_eec .PdfObjectArray );if !_adaec {_bfg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eaafc );return nil ,_eec .ErrTypeError ;};_ggfdg .Decode =_dbebe ;if _ecda :=_dcbgf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ecda !=nil {_ggfdg .Function =[]PdfFunction {};if _adfdf ,_dagae :=_ecda .(*_eec .PdfObjectArray );_dagae {for _ ,_edfcdg :=range _adfdf .Elements (){_gcde ,_cfecg :=_bdfbe (_edfcdg );if _cfecg !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfecg );return nil ,_cfecg ;};_ggfdg .Function =append (_ggfdg .Function ,_gcde );};}else {_aafaaa ,_bgddc :=_bdfbe (_ecda );if _bgddc !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgddc );return nil ,_bgddc ;};_ggfdg .Function =append (_ggfdg .Function ,_aafaaa );};};return &_ggfdg ,nil ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_eeb :=NewPdfAction ();_aaa :=&PdfActionSound {};_aaa .PdfAction =_eeb ;_eeb .SetContext (_aaa );return _aaa ;};

// ToPdfObject implements interface PdfModel.
func (_ead *PdfAction )ToPdfObject ()_eec .PdfObject {_cfb :=_ead ._aa ;_cba :=_cfb .PdfObject .(*_eec .PdfObjectDictionary );_cba .Clear ();_cba .Set ("\u0054\u0079\u0070\u0065",_eec .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_cba .SetIfNotNil ("\u0053",_ead .S );_cba .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ead .Next );return _cfb ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_fdagf *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _fdagf .fill (provider ,appGen );};func (_cgcg *PdfReader )newPdfAnnotationWidgetFromDict (_gdfdc *_eec .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_fgfe :=PdfAnnotationWidget {};_fgfe .H =_gdfdc .Get ("\u0048");_fgfe .MK =_gdfdc .Get ("\u004d\u004b");_fgfe .A =_gdfdc .Get ("\u0041");_fgfe .AA =_gdfdc .Get ("\u0041\u0041");_fgfe .BS =_gdfdc .Get ("\u0042\u0053");_fgfe .Parent =_gdfdc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_fgfe ,nil ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_eec .PdfObjectInteger ;TilingType *_eec .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_eec .PdfObjectFloat ;YStep *_eec .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_eec .PdfObjectArray ;};func _badgb (_dbbc *_eec .PdfIndirectObject )(*PdfOutline ,error ){_fbgf ,_agab :=_dbbc .PdfObject .(*_eec .PdfObjectDictionary );if !_agab {return nil ,_b .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_beecc :=NewPdfOutline ();if _egeeag :=_fbgf .Get ("\u0054\u0079\u0070\u0065");_egeeag !=nil {_agege ,_ddebga :=_egeeag .(*_eec .PdfObjectName );if _ddebga {if *_agege !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_bfg .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_agege );};};};if _bdbf :=_fbgf .Get ("\u0043\u006f\u0075n\u0074");_bdbf !=nil {_gaegb ,_ebeb :=_eec .GetNumberAsInt64 (_bdbf );if _ebeb !=nil {return nil ,_ebeb ;};_beecc .Count =&_gaegb ;};return _beecc ,nil ;};func _eecf (_gbebg []byte )bool {if len (_gbebg )< 4{return true ;};for _fbca :=range _gbebg [:4]{_egfb :=rune (_fbca );if !_be .Is (_be .ASCII_Hex_Digit ,_egfb )&&!_be .IsSpace (_egfb ){return true ;};};return false ;};

// GetNumComponents returns the number of color components.
func (_gbef *PdfColorspaceICCBased )GetNumComponents ()int {return _gbef .N };var _eegf =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_cceaf *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_eccge :=_cceaf .GetContentStreamObjs ();wrapContents =wrapContents &&len (_eccge )> 0;_cbbbb :=_eec .NewFlateEncoder ();_fgcc :=_eec .MakeArray ();if wrapContents {_aecab ,_ccgdg :=_eec .MakeStream ([]byte ("\u0071\u000a"),_cbbbb );if _ccgdg !=nil {return _ccgdg ;};_fgcc .Append (_aecab );};_fgcc .Append (_eccge ...);if wrapContents {_bfea ,_dgcab :=_eec .MakeStream ([]byte ("\u000a\u0051\u000a"),_cbbbb );if _dgcab !=nil {return _dgcab ;};_fgcc .Append (_bfea );};_gcaa ,_fcaaf :=_eec .MakeStream (cs ,_cbbbb );if _fcaaf !=nil {return _fcaaf ;};_fgcc .Append (_gcaa );_cceaf .Contents =_fgcc ;return nil ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_gbdc *PdfFieldText )ToPdfObject ()_eec .PdfObject {_gbdc .PdfField .ToPdfObject ();_ddbb :=_gbdc ._bedf ;_efddb :=_ddbb .PdfObject .(*_eec .PdfObjectDictionary );_efddb .Set ("\u0046\u0054",_eec .MakeName ("\u0054\u0078"));if _gbdc .DA !=nil {_efddb .Set ("\u0044\u0041",_gbdc .DA );};if _gbdc .Q !=nil {_efddb .Set ("\u0051",_gbdc .Q );};if _gbdc .DS !=nil {_efddb .Set ("\u0044\u0053",_gbdc .DS );};if _gbdc .RV !=nil {_efddb .Set ("\u0052\u0056",_gbdc .RV );};if _gbdc .MaxLen !=nil {_efddb .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_gbdc .MaxLen );};return _ddbb ;};func (_cgc *PdfReader )newPdfActionNamedFromDict (_gaf *_eec .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_gaf .Get ("\u004e")},nil ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _eec .StreamEncoder ;Intent _eec .PdfObject ;ImageMask _eec .PdfObject ;Mask _eec .PdfObject ;Matte _eec .PdfObject ;Decode _eec .PdfObject ;Interpolate _eec .PdfObject ;Alternatives _eec .PdfObject ;SMask _eec .PdfObject ;SMaskInData _eec .PdfObject ;Name _eec .PdfObject ;StructParent _eec .PdfObject ;ID _eec .PdfObject ;OPI _eec .PdfObject ;Metadata _eec .PdfObject ;OC _eec .PdfObject ;Stream []byte ;_cgdaf *_eec .PdfObjectStream ;};func _agbb (_bbfe _eec .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_gbefa :=&PdfColorspaceDeviceNAttributes {};var _ebadf *_eec .PdfObjectDictionary ;if _fdebd ,_dfeg :=_bbfe .(*_eec .PdfIndirectObject );_dfeg {_gbefa ._bdgg =_fdebd ;var _dgad bool ;_ebadf ,_dgad =_fdebd .PdfObject .(*_eec .PdfObjectDictionary );if !_dgad {_bfg .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_fe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _feba ,_dbce :=_bbfe .(*_eec .PdfObjectDictionary );_dbce {_ebadf =_feba ;}else {_bfg .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_fe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _addd :=_ebadf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_addd !=nil {_bdac ,_caba :=_eec .TraceToDirectObject (_addd ).(*_eec .PdfObjectName );if !_caba {_bfg .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");return nil ,_fe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gbefa .Subtype =_bdac ;};if _aadfc :=_ebadf .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_aadfc !=nil {_gbefa .Colorants =_aadfc ;};if _ggae :=_ebadf .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");_ggae !=nil {_gbefa .Process =_ggae ;};if _fcfb :=_ebadf .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_fcfb !=nil {_gbefa .MixingHints =_fcfb ;};return _gbefa ,nil ;};

// L returns the value of the L component of the color.
func (_egfef *PdfColorLab )L ()float64 {return _egfef [0]};

// HasFontByName checks if has font resource by name.
func (_gafafd *PdfPage )HasFontByName (name _eec .PdfObjectName )bool {_gedcd ,_gcac :=_gafafd .Resources .Font .(*_eec .PdfObjectDictionary );if !_gcac {return false ;};if _abgaa :=_gedcd .Get (name );_abgaa !=nil {return true ;};return false ;};func _afgbg (_beac _eec .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_fcgec :=NewPdfColorspaceSpecialIndexed ();if _faeb ,_dfdb :=_beac .(*_eec .PdfIndirectObject );_dfdb {_fcgec ._bgde =_faeb ;};_beac =_eec .TraceToDirectObject (_beac );_dfgg ,_geccf :=_beac .(*_eec .PdfObjectArray );if !_geccf {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dfgg .Len ()!=4{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_beac =_dfgg .Get (0);_febbg ,_geccf :=_beac .(*_eec .PdfObjectName );if !_geccf {return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_febbg !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");};_beac =_dfgg .Get (1);_deaf ,_fgbc :=DetermineColorspaceNameFromPdfObject (_beac );if _fgbc !=nil {return nil ,_fgbc ;};if _deaf =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_deaf =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_bfg .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_deaf );return nil ,_eebdf ;};_bdeg ,_fgbc :=NewPdfColorspaceFromPdfObject (_beac );if _fgbc !=nil {return nil ,_fgbc ;};_fcgec .Base =_bdeg ;_beac =_dfgg .Get (2);_eagb ,_fgbc :=_eec .GetNumberAsInt64 (_beac );if _fgbc !=nil {return nil ,_fgbc ;};if _eagb > 255{return nil ,_b .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_fcgec .HiVal =int (_eagb );_beac =_dfgg .Get (3);_fcgec .Lookup =_beac ;_beac =_eec .TraceToDirectObject (_beac );var _dbcd []byte ;if _acddc ,_beba :=_beac .(*_eec .PdfObjectString );_beba {_dbcd =_acddc .Bytes ();_bfg .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_dbcd );}else if _fdeab ,_eceb :=_beac .(*_eec .PdfObjectStream );_eceb {_bfg .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_beac .String ());_bfg .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_fdeab .Stream ),_fdeab .Stream );_fbba ,_egee :=_eec .DecodeStream (_fdeab );if _egee !=nil {return nil ,_egee ;};_bfg .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_fbba ),_fbba );_dbcd =_fbba ;}else {_bfg .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_beac );return nil ,_b .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_dbcd )< _fcgec .Base .GetNumComponents ()*(_fcgec .HiVal +1){_bfg .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");_bfg .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_dbcd ),_fcgec .Base .GetNumComponents (),_fcgec .HiVal );}else {_dbcd =_dbcd [:_fcgec .Base .GetNumComponents ()*(_fcgec .HiVal +1)];};_fcgec ._gbff =_dbcd ;return _fcgec ,nil ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _eec .PdfObject ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _eec .PdfObject ;};

// GetOptimizer returns current PDF optimizer.
func (_fggba *PdfWriter )GetOptimizer ()Optimizer {return _fggba ._fgadg };func (_bdf *PdfReader )newPdfActionImportDataFromDict (_dbee *_eec .PdfObjectDictionary )(*PdfActionImportData ,error ){_adfc ,_fgc :=_fecb (_dbee .Get ("\u0046"));if _fgc !=nil {return nil ,_fgc ;};return &PdfActionImportData {F :_adfc },nil ;};func (_baf *PdfReader )newPdfAnnotationPopupFromDict (_aaaae *_eec .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_dfda :=PdfAnnotationPopup {};_dfda .Parent =_aaaae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_dfda .Open =_aaaae .Get ("\u004f\u0070\u0065\u006e");return &_dfda ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_bfag *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dacf :=vals [0];if _dacf < 0.0||_dacf > 100.0{_bfg .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_dacf );return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_agcccb :=vals [1];_dbab :=float64 (-100);_fdea :=float64 (100);if len (_bfag .Range )> 1{_dbab =_bfag .Range [0];_fdea =_bfag .Range [1];};if _agcccb < _dbab ||_agcccb > _fdea {_bfg .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_agcccb ,_dbab ,_fdea );return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfgbf :=vals [2];_aaga :=float64 (-100);_aaae :=float64 (100);if len (_bfag .Range )> 3{_aaga =_bfag .Range [2];_aaae =_bfag .Range [3];};if _dfgbf < _aaga ||_dfgbf > _aaae {_bfg .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_dfgbf ,_aaga ,_aaae );return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgaf :=NewPdfColorLab (_dacf ,_agcccb ,_dfgbf );return _bgaf ,nil ;};func _gdbgc (_fggac _eec .PdfObject )(string ,error ){_fggac =_eec .TraceToDirectObject (_fggac );switch _bgadf :=_fggac .(type ){case *_eec .PdfObjectString :return _bgadf .Str (),nil ;case *_eec .PdfObjectStream :_fcba ,_fadacf :=_eec .DecodeStream (_bgadf );if _fadacf !=nil {return "",_fadacf ;};return string (_fcba ),nil ;};return "",_b .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_fggac );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_baded *PdfShadingType6 )ToPdfObject ()_eec .PdfObject {_baded .PdfShading .ToPdfObject ();_cdbc ,_agafg :=_baded .getShadingDict ();if _agafg !=nil {_bfg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _baded .BitsPerCoordinate !=nil {_cdbc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_baded .BitsPerCoordinate );};if _baded .BitsPerComponent !=nil {_cdbc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_baded .BitsPerComponent );};if _baded .BitsPerFlag !=nil {_cdbc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_baded .BitsPerFlag );};if _baded .Decode !=nil {_cdbc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_baded .Decode );};if _baded .Function !=nil {if len (_baded .Function )==1{_cdbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_baded .Function [0].ToPdfObject ());}else {_cdaac :=_eec .MakeArray ();for _ ,_ccgdc :=range _baded .Function {_cdaac .Append (_ccgdc .ToPdfObject ());};_cdbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cdaac );};};return _baded ._fbeg ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_beg :=NewPdfAction ();_afg :=&PdfActionImportData {};_afg .PdfAction =_beg ;_beg .SetContext (_afg );return _afg ;};

// C returns the value of the cyan component of the color.
func (_feac *PdfColorDeviceCMYK )C ()float64 {return _feac [0]};func (_dbdee *PdfWriter )writeObject (_dcgcg int ,_eegbd _eec .PdfObject ){_bfg .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_dcgcg );if _gbgcgf ,_ecebd :=_eegbd .(*_eec .PdfIndirectObject );_ecebd {_dbdee ._adgb [_dcgcg ]=crossReference {Type :1,Offset :_dbdee ._afeba ,Generation :_gbgcgf .GenerationNumber };_ddceg :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_dcgcg );if _cbaf ,_gbbeb :=_gbgcgf .PdfObject .(*pdfSignDictionary );_gbbeb {_cbaf ._cfgac =_dbdee ._afeba +int64 (len (_ddceg ));};if _gbgcgf .PdfObject ==nil {_bfg .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");_gbgcgf .PdfObject =_eec .MakeNull ();};_ddceg +=_gbgcgf .PdfObject .WriteString ();_ddceg +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_dbdee .writeString (_ddceg );return ;};if _bgfgb ,_accgg :=_eegbd .(*_eec .PdfObjectStream );_accgg {_dbdee ._adgb [_dcgcg ]=crossReference {Type :1,Offset :_dbdee ._afeba ,Generation :_bgfgb .GenerationNumber };_acad :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_dcgcg );_acad +=_bgfgb .PdfObjectDictionary .WriteString ();_acad +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_dbdee .writeString (_acad );_dbdee .writeBytes (_bgfgb .Stream );_dbdee .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _dagaeg ,_feff :=_eegbd .(*_eec .PdfObjectStreams );_feff {_dbdee ._adgb [_dcgcg ]=crossReference {Type :1,Offset :_dbdee ._afeba ,Generation :_dagaeg .GenerationNumber };_daaec :=_b .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_dcgcg );var _gbadf []string ;var _edgfb string ;var _baedf int64 ;for _dbefa ,_adfeb :=range _dagaeg .Elements (){_dbgfc ,_efage :=_adfeb .(*_eec .PdfIndirectObject );if !_efage {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_dcgcg ,_adfeb );continue ;};_cccad :=_dbgfc .PdfObject .WriteString ()+"\u0020";_edgfb =_edgfb +_cccad ;_gbadf =append (_gbadf ,_b .Sprintf ("\u0025\u0064\u0020%\u0064",_dbgfc .ObjectNumber ,_baedf ));_dbdee ._adgb [int (_dbgfc .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_dcgcg ,Index :_dbefa };_baedf =_baedf +int64 (len ([]byte (_cccad )));};_cfgb :=_beb .Join (_gbadf ,"\u0020")+"\u0020";_facee :=_eec .NewFlateEncoder ();_fbdca :=_facee .MakeStreamDict ();_fbdca .Set (_eec .PdfObjectName ("\u0054\u0079\u0070\u0065"),_eec .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));_cbbgc :=int64 (_dagaeg .Len ());_fbdca .Set (_eec .PdfObjectName ("\u004e"),_eec .MakeInteger (_cbbgc ));_fecdd :=int64 (len (_cfgb ));_fbdca .Set (_eec .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_eec .MakeInteger (_fecdd ));_ffbf ,_ :=_facee .EncodeBytes ([]byte (_cfgb +_edgfb ));_cefab :=int64 (len (_ffbf ));_fbdca .Set (_eec .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_eec .MakeInteger (_cefab ));_daaec +=_fbdca .WriteString ();_daaec +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_dbdee .writeString (_daaec );_dbdee .writeBytes (_ffbf );_dbdee .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_dbdee .writeString (_eegbd .WriteString ());};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_cef :=NewPdfAction ();_ec :=&PdfActionURI {};_ec .PdfAction =_cef ;_cef .SetContext (_ec );return _ec ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_dbfcb *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_dbfcb .HiVal )};};

// ToPdfObject implements interface PdfModel.
func (_ffca *PdfAnnotationUnderline )ToPdfObject ()_eec .PdfObject {_ffca .PdfAnnotation .ToPdfObject ();_faa :=_ffca ._dge ;_agcc :=_faa .PdfObject .(*_eec .PdfObjectDictionary );_ffca .PdfAnnotationMarkup .appendToPdfDictionary (_agcc );_agcc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));_agcc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ffca .QuadPoints );return _faa ;};func _cfab (_effba _eec .PdfObject ,_beafc *fontCommon )(*_cf .CMap ,error ){_bcdfc ,_gebb :=_eec .GetStream (_effba );if !_gebb {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_effba );return nil ,_eec .ErrTypeError ;};_cefcb ,_dbfbb :=_eec .DecodeStream (_bcdfc );if _dbfbb !=nil {return nil ,_dbfbb ;};_fagcg ,_dbfbb :=_cf .LoadCmapFromData (_cefcb ,!_beafc .isCIDFont ());if _dbfbb !=nil {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_bcdfc .ObjectNumber ,_dbfbb );};return _fagcg ,_dbfbb ;};func (_bgbdg *PdfWriter )seekByName (_fdeac _eec .PdfObject ,_gbcb []string ,_ddcce string )([]_eec .PdfObject ,error ){_bfg .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_fdeac );var _gdagb []_eec .PdfObject ;if _aceaf ,_efdea :=_fdeac .(*_eec .PdfIndirectObject );_efdea {return _bgbdg .seekByName (_aceaf .PdfObject ,_gbcb ,_ddcce );};if _beabfe ,_deec :=_fdeac .(*_eec .PdfObjectStream );_deec {return _bgbdg .seekByName (_beabfe .PdfObjectDictionary ,_gbcb ,_ddcce );};if _fbfad ,_gebba :=_fdeac .(*_eec .PdfObjectDictionary );_gebba {_bfg .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_fefg :=range _fbfad .Keys (){_agfd :=_fbfad .Get (_fefg );if string (_fefg )==_ddcce {_gdagb =append (_gdagb ,_agfd );};for _ ,_fbafef :=range _gbcb {if string (_fefg )==_fbafef {_bfg .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_fbafef );_ccdg ,_daaed :=_bgbdg .seekByName (_agfd ,_gbcb ,_ddcce );if _daaed !=nil {return _gdagb ,_daaed ;};_gdagb =append (_gdagb ,_ccdg ...);break ;};};};return _gdagb ,nil ;};return _gdagb ,nil ;};func _cbae (_fbaddg []byte )[]byte {const _gabec =52845;const _cecgb =22719;_fcebc :=55665;for _ ,_faee :=range _fbaddg [:4]{_fcebc =(int (_faee )+_fcebc )*_gabec +_cecgb ;};_bbged :=make ([]byte ,len (_fbaddg )-4);for _fgfea ,_eeffd :=range _fbaddg [4:]{_bbged [_fgfea ]=byte (int (_eeffd )^_fcebc >>8);_fcebc =(int (_eeffd )+_fcebc )*_gabec +_cecgb ;};return _bbged ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_bcfee *PdfPageResources )SetXObjectByName (keyName _eec .PdfObjectName ,stream *_eec .PdfObjectStream )error {if _bcfee .XObject ==nil {_bcfee .XObject =_eec .MakeDict ();};_bbcaf :=_eec .TraceToDirectObject (_bcfee .XObject );_baddf ,_gdgc :=_bbcaf .(*_eec .PdfObjectDictionary );if !_gdgc {_bfg .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_bcfee .XObject ,_bbcaf );return _fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_baddf .Set (keyName ,stream );return nil ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_aadea *_eec .PdfIndirectObject ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_afdb *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _gafcf []*PdfField ;_febcg :=map[*_eec .PdfIndirectObject ]struct{}{};for _ ,_dfgc :=range _afdb .PageList {_gaae ,_ffacb :=_dfgc .GetAnnotations ();if _ffacb !=nil {return _ffacb ;};for _ ,_cedga :=range _gaae {var _bgffc *PdfField ;switch _bbcba :=_cedga .GetContext ().(type ){case *PdfAnnotationWidget :if _bbcba ._febe !=nil {_bgffc =_bbcba ._febe ;break ;};if _ffdee ,_edabe :=_eec .GetIndirect (_bbcba .Parent );_edabe {_bgffc ,_ffacb =_afdb .newPdfFieldFromIndirectObject (_ffdee ,nil );if _ffacb ==nil {break ;};_bfg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ffdee ,_ffacb );};if _bbcba ._dge !=nil {_bgffc ,_ffacb =_afdb .newPdfFieldFromIndirectObject (_bbcba ._dge ,nil );if _ffacb ==nil {break ;};_bfg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_bbcba ._dge ,_ffacb );};};if _bgffc ==nil {continue ;};if _ ,_deebc :=_febcg [_bgffc ._bedf ];_deebc {continue ;};_febcg [_bgffc ._bedf ]=struct{}{};_gafcf =append (_gafcf ,_bgffc );};};if len (_gafcf )==0{return nil ;};if _afdb .AcroForm ==nil {_afdb .AcroForm =NewPdfAcroForm ();};_afdb .AcroForm .Fields =&_gafcf ;return nil ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _eec .PdfObject ;NewWindow _eec .PdfObject ;};var _ pdfFont =(*pdfFontType0 )(nil );

// AllFields returns a flattened list of all fields in the form.
func (_bbffbe *PdfAcroForm )AllFields ()[]*PdfField {if _bbffbe ==nil {return nil ;};var _dbbag []*PdfField ;if _bbffbe .Fields !=nil {for _ ,_fgaac :=range *_bbffbe .Fields {_dbbag =append (_dbbag ,_cacec (_fgaac )...);};};return _dbbag ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_bagg *PdfInfo )GetCustomInfo (name string )*_eec .PdfObjectString {var _ffagf *_eec .PdfObjectString ;if _bagg ._beega ==nil {return _ffagf ;};if _cddb ,_acge :=_bagg ._beega .Get (*_eec .MakeName (name )).(*_eec .PdfObjectString );_acge {_ffagf =_cddb ;};return _ffagf ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_dgcf *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_fabd ,_badd :=color .(*PdfColorPattern );if !_badd {_bfg .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );return nil ,ErrTypeCheck ;};if _fabd .Color ==nil {return color ,nil ;};if _dgcf .UnderlyingCS ==nil {return nil ,_fe .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _dgcf .UnderlyingCS .ColorToRGB (_fabd .Color );};func _acaf ()string {_bgfc :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _gdage _gf .Buffer ;for _aege :=0;_aege < 6;_aege ++{_gdage .WriteRune (rune (_bgfc [_cc .Intn (len (_bgfc ))]));};return _gdage .String ();};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_edac *pdfFontSimple )SetEncoder (encoder _fcb .TextEncoder ){_edac ._acfd =encoder };

// ToPdfObject returns the PDF representation of the function.
func (_agdf *PdfFunctionType4 )ToPdfObject ()_eec .PdfObject {_cdfbg :=_agdf ._fccbd ;if _cdfbg ==nil {_agdf ._fccbd =&_eec .PdfObjectStream {};_cdfbg =_agdf ._fccbd ;};_dbecc :=_eec .MakeDict ();_dbecc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_eec .MakeInteger (4));_bffbd :=&_eec .PdfObjectArray {};for _ ,_bacdd :=range _agdf .Domain {_bffbd .Append (_eec .MakeFloat (_bacdd ));};_dbecc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bffbd );_fbfd :=&_eec .PdfObjectArray {};for _ ,_cagb :=range _agdf .Range {_fbfd .Append (_eec .MakeFloat (_cagb ));};_dbecc .Set ("\u0052\u0061\u006eg\u0065",_fbfd );if _agdf ._ddebb ==nil &&_agdf .Program !=nil {_agdf ._ddebb =[]byte (_agdf .Program .String ());};_dbecc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_eec .MakeInteger (int64 (len (_agdf ._ddebb ))));_cdfbg .Stream =_agdf ._ddebb ;_cdfbg .PdfObjectDictionary =_dbecc ;return _cdfbg ;};func (_ggbdc *PdfReader )traverseObjectData (_agafe _eec .PdfObject )error {return _eec .ResolveReferencesDeep (_agafe ,_ggbdc ._beae );};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_eec .PdfObjectString ;Q *_eec .PdfObjectInteger ;DS *_eec .PdfObjectString ;RV _eec .PdfObject ;MaxLen *_eec .PdfObjectInteger ;};func _cdaba (_cdcdg ,_ddfgg string )string {if _beb .Contains (_cdcdg ,"\u002b"){_dfaae :=_beb .Split (_cdcdg ,"\u002b");if len (_dfaae )==2{_cdcdg =_dfaae [1];};};return _ddfgg +"\u002b"+_cdcdg ;};func (_adcee *PdfWriter )updateObjectNumbers (){_ffeeg :=_adcee .ObjNumOffset ;_adfgd :=0;for _ ,_febbc :=range _adcee ._gceg {_gcdee :=int64 (_adfgd +1+_ffeeg );_cgdb :=true ;if _adcee ._gadfca {if _cfecf ,_ggecd :=_adcee ._gcfda [_febbc ];_ggecd {_gcdee =_cfecf ;_cgdb =false ;};};switch _eeded :=_febbc .(type ){case *_eec .PdfIndirectObject :_eeded .ObjectNumber =_gcdee ;_eeded .GenerationNumber =0;case *_eec .PdfObjectStream :_eeded .ObjectNumber =_gcdee ;_eeded .GenerationNumber =0;case *_eec .PdfObjectStreams :_eeded .ObjectNumber =_gcdee ;_eeded .GenerationNumber =0;default:_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_eeded );continue ;};if _cgdb {_adfgd ++;};};_gggb :=func (_fddea _eec .PdfObject )int64 {switch _ddddf :=_fddea .(type ){case *_eec .PdfIndirectObject :return _ddddf .ObjectNumber ;case *_eec .PdfObjectStream :return _ddddf .ObjectNumber ;case *_eec .PdfObjectStreams :return _ddddf .ObjectNumber ;};return 0;};_fb .SliceStable (_adcee ._gceg ,func (_bfeaf ,_fceg int )bool {return _gggb (_adcee ._gceg [_bfeaf ])< _gggb (_adcee ._gceg [_fceg ])});};

// ToPdfObject implements interface PdfModel.
func (_bdab *PdfAnnotationFileAttachment )ToPdfObject ()_eec .PdfObject {_bdab .PdfAnnotation .ToPdfObject ();_gagg :=_bdab ._dge ;_cgb :=_gagg .PdfObject .(*_eec .PdfObjectDictionary );_bdab .PdfAnnotationMarkup .appendToPdfDictionary (_cgb );_cgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));_cgb .SetIfNotNil ("\u0046\u0053",_bdab .FS );_cgb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bdab .Name );return _gagg ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _eec .PdfObject ;FontFamily _eec .PdfObject ;FontStretch _eec .PdfObject ;FontWeight _eec .PdfObject ;Flags _eec .PdfObject ;FontBBox _eec .PdfObject ;ItalicAngle _eec .PdfObject ;Ascent _eec .PdfObject ;Descent _eec .PdfObject ;Leading _eec .PdfObject ;CapHeight _eec .PdfObject ;XHeight _eec .PdfObject ;StemV _eec .PdfObject ;StemH _eec .PdfObject ;AvgWidth _eec .PdfObject ;MaxWidth _eec .PdfObject ;MissingWidth _eec .PdfObject ;FontFile _eec .PdfObject ;FontFile2 _eec .PdfObject ;FontFile3 _eec .PdfObject ;CharSet _eec .PdfObject ;_fcdcb int ;_fbfef float64 ;*fontFile ;_bbea *_de .TtfType ;

// Additional entries for CIDFonts
Style _eec .PdfObject ;Lang _eec .PdfObject ;FD _eec .PdfObject ;CIDSet _eec .PdfObject ;_eeedb *_eec .PdfIndirectObject ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_fecd *_eec .PdfIndirectObject ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _eec .PdfObject ;BS _eec .PdfObject ;LE _eec .PdfObject ;IC _eec .PdfObject ;LL _eec .PdfObject ;LLE _eec .PdfObject ;Cap _eec .PdfObject ;IT _eec .PdfObject ;LLO _eec .PdfObject ;CP _eec .PdfObject ;Measure _eec .PdfObject ;CO _eec .PdfObject ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _eec .PdfObject ;PreserveRB _eec .PdfObject ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_gafb FieldFlag )Has (fl FieldFlag )bool {return (_gafb .Mask ()&fl .Mask ())> 0};

// Write writes out the PDF.
func (_gdffa *PdfWriter )Write (writer _dd .Writer )error {_bfg .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_ffaed :=_ea .GetLicenseKey ();if (_ffaed ==nil ||!_ffaed .IsLicensed ())&&!_daffe {_b .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_b .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _fe .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _gdffa ._gbfcg !=nil {_bfg .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_gdffa ._gbfcg );_fdaea :=_gdffa ._gbfcg .ToPdfObject ();_bfg .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_fdaea ,_fdaea ,_fdaea );_gdffa ._fbafd .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_fdaea );_cegad :=_gdffa .addObjects (_fdaea );if _cegad !=nil {return _cegad ;};};if _gdffa ._fcgga !=nil {_bfg .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_fdabe :=_gdffa ._fcgga .ToPdfObject ();_bfg .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fdabe );_gdffa ._fbafd .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_fdabe );_cfggdg :=_gdffa .addObjects (_fdabe );if _cfggdg !=nil {return _cfggdg ;};};for _dggdff ,_dfeb :=range _gdffa ._fgdef {if !_gdffa .hasObject (_dggdff ){_bfg .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_dggdff ,_dggdff ,_dggdff );for _ ,_eegbfe :=range _dfeb {for _ ,_bfeae :=range _eegbfe .Keys (){_gdbbfa :=_eegbfe .Get (_bfeae );if _gdbbfa ==_dggdff {_bfg .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");_eegbfe .Set (_bfeae ,_eec .MakeNull ());break ;};};};};};_gdffa ._fbafd .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_eec .MakeName (_b .Sprintf ("\u0025\u0064\u002e%\u0064",_gdffa ._effdf ,_gdffa ._ebagb )));_gdffa .copyObjects ();if _gdffa ._fgadg !=nil {var _dddag error ;_gdffa ._gceg ,_dddag =_gdffa ._fgadg .Optimize (_gdffa ._gceg );if _dddag !=nil {return _dddag ;};_cdbda :=make (map[_eec .PdfObject ]struct{},len (_gdffa ._gceg ));for _ ,_cbace :=range _gdffa ._gceg {_cdbda [_cbace ]=struct{}{};};_gdffa ._agdb =_cdbda ;};_gdffa ._afeba =_gdffa ._adgca ;_gdffa ._bccga =_bg .NewWriter (writer );_dgcef :=_gdffa ._effdf > 1||(_gdffa ._effdf ==1&&_gdffa ._ebagb > 4);if _gdffa ._aggde !=nil {_dgcef =*_gdffa ._aggde ;};_gbcd :=make (map[_eec .PdfObject ]bool );for _ ,_dabee :=range _gdffa ._gceg {if _ddacg ,_dgfe :=_dabee .(*_eec .PdfObjectStreams );_dgfe {_dgcef =true ;for _ ,_dcceee :=range _ddacg .Elements (){_gbcd [_dcceee ]=true ;if _ebgge ,_gddec :=_dcceee .(*_eec .PdfIndirectObject );_gddec {_gbcd [_ebgge .PdfObject ]=true ;};};};};if _dgcef &&_gdffa ._effdf ==1&&_gdffa ._ebagb < 5{_gdffa ._ebagb =5;};if _gdffa ._gadfca {_gdffa .writeString ("\u000a");}else {_gdffa .writeString (_b .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_gdffa ._effdf ,_gdffa ._ebagb ));_gdffa .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};_gdffa .updateObjectNumbers ();_bfg .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_gdffa ._gceg ));_gdffa ._adgb =make (map[int ]crossReference );_gdffa ._adgb [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _gdffa ._eccac .ObjectMap !=nil {for _dfadd ,_dfae :=range _gdffa ._eccac .ObjectMap {if _dfadd ==0{continue ;};if _dfae .XType ==_eec .XrefTypeObjectStream {_facbd :=crossReference {Type :2,ObjectNumber :_dfae .OsObjNumber ,Index :_dfae .OsObjIndex };_gdffa ._adgb [_dfadd ]=_facbd ;};if _dfae .XType ==_eec .XrefTypeTableEntry {_aefcf :=crossReference {Type :1,ObjectNumber :_dfae .ObjectNumber ,Offset :_dfae .Offset };_gdffa ._adgb [_dfadd ]=_aefcf ;};};};for _ ,_egfbc :=range _gdffa ._gceg {if _bacg :=_gbcd [_egfbc ];_bacg {continue ;};_gafafdf :=int64 (0);switch _baaa :=_egfbc .(type ){case *_eec .PdfIndirectObject :_gafafdf =_baaa .ObjectNumber ;case *_eec .PdfObjectStream :_gafafdf =_baaa .ObjectNumber ;case *_eec .PdfObjectStreams :_gafafdf =_baaa .ObjectNumber ;default:_bfg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_egfbc );return ErrTypeCheck ;};if _gdffa ._fecff !=nil &&_egfbc !=_gdffa ._bcacg {_bdfa :=_gdffa ._fecff .Encrypt (_egfbc ,_gafafdf ,0);if _bdfa !=nil {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_bdfa );return _bdfa ;};};_gdffa .writeObject (int (_gafafdf ),_egfbc );};_eaebf :=_gdffa ._afeba ;var _acdgg int ;for _fdfbb :=range _gdffa ._adgb {if _fdfbb > _acdgg {_acdgg =_fdfbb ;};};if _dgcef {_egfcg :=_acdgg +1;_gdffa ._adgb [_egfcg ]=crossReference {Type :1,ObjectNumber :_egfcg ,Offset :_eaebf };_bgdec :=_gf .NewBuffer (nil );_gbgde :=_eec .MakeArray ();for _efggc :=0;_efggc <=_acdgg ;{for ;_efggc <=_acdgg ;_efggc ++{_edbga ,_cdbbe :=_gdffa ._adgb [_efggc ];if _cdbbe &&(!_gdffa ._gadfca ||_gdffa ._gadfca &&(_edbga .Type ==1&&_edbga .Offset >=_gdffa ._adbg ||_edbga .Type ==0)){break ;};};var _abcee int ;for _abcee =_efggc +1;_abcee <=_acdgg ;_abcee ++{_ddba ,_dfecf :=_gdffa ._adgb [_abcee ];if _dfecf &&(!_gdffa ._gadfca ||_gdffa ._gadfca &&(_ddba .Type ==1&&_ddba .Offset > _gdffa ._adbg )){continue ;};break ;};_gbgde .Append (_eec .MakeInteger (int64 (_efggc )),_eec .MakeInteger (int64 (_abcee -_efggc )));for _ffaef :=_efggc ;_ffaef < _abcee ;_ffaef ++{_adgbe :=_gdffa ._adgb [_ffaef ];switch _adgbe .Type {case 0:_d .Write (_bgdec ,_d .BigEndian ,byte (0));_d .Write (_bgdec ,_d .BigEndian ,uint32 (0));_d .Write (_bgdec ,_d .BigEndian ,uint16 (0xFFFF));case 1:_d .Write (_bgdec ,_d .BigEndian ,byte (1));_d .Write (_bgdec ,_d .BigEndian ,uint32 (_adgbe .Offset ));_d .Write (_bgdec ,_d .BigEndian ,uint16 (_adgbe .Generation ));case 2:_d .Write (_bgdec ,_d .BigEndian ,byte (2));_d .Write (_bgdec ,_d .BigEndian ,uint32 (_adgbe .ObjectNumber ));_d .Write (_bgdec ,_d .BigEndian ,uint16 (_adgbe .Index ));};};_efggc =_abcee +1;};_afcff ,_afaf :=_eec .MakeStream (_bgdec .Bytes (),_eec .NewFlateEncoder ());if _afaf !=nil {return _afaf ;};_afcff .ObjectNumber =int64 (_egfcg );_afcff .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_eec .MakeName ("\u0058\u0052\u0065\u0066"));_afcff .PdfObjectDictionary .Set ("\u0057",_eec .MakeArray (_eec .MakeInteger (1),_eec .MakeInteger (4),_eec .MakeInteger (2)));_afcff .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_gbgde );_afcff .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_eec .MakeInteger (int64 (_egfcg +1)));_afcff .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_gdffa ._fegdg );_afcff .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_gdffa ._eaef );if _gdffa ._gadfca &&_gdffa ._ccebe > 0{_afcff .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_eec .MakeInteger (_gdffa ._ccebe ));};if _gdffa ._fecff !=nil {_afcff .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gdffa ._bcacg );_afcff .Set ("\u0049\u0044",_gdffa ._abbee );_bfg .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gdffa ._abbee );};_gdffa .writeObject (int (_afcff .ObjectNumber ),_afcff );}else {_gdffa .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _adced :=0;_adced <=_acdgg ;{for ;_adced <=_acdgg ;_adced ++{_dgff ,_gbege :=_gdffa ._adgb [_adced ];if _gbege &&(!_gdffa ._gadfca ||_gdffa ._gadfca &&(_dgff .Type ==1&&_dgff .Offset >=_gdffa ._adbg ||_dgff .Type ==0)){break ;};};var _becfe int ;for _becfe =_adced +1;_becfe <=_acdgg ;_becfe ++{_deda ,_gaaaga :=_gdffa ._adgb [_becfe ];if _gaaaga &&(!_gdffa ._gadfca ||_gdffa ._gadfca &&(_deda .Type ==1&&_deda .Offset > _gdffa ._adbg )){continue ;};break ;};_dgcdb :=_b .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_adced ,_becfe -_adced );_gdffa .writeString (_dgcdb );for _defg :=_adced ;_defg < _becfe ;_defg ++{_geac :=_gdffa ._adgb [_defg ];switch _geac .Type {case 0:_dgcdb =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_gdffa .writeString (_dgcdb );case 1:_dgcdb =_b .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_geac .Offset ,0);_gdffa .writeString (_dgcdb );};};_adced =_becfe +1;};_dcceg :=_eec .MakeDict ();_dcceg .Set ("\u0049\u006e\u0066\u006f",_gdffa ._fegdg );_dcceg .Set ("\u0052\u006f\u006f\u0074",_gdffa ._eaef );_dcceg .Set ("\u0053\u0069\u007a\u0065",_eec .MakeInteger (int64 (_acdgg +1)));if _gdffa ._gadfca &&_gdffa ._ccebe > 0{_dcceg .Set ("\u0050\u0072\u0065\u0076",_eec .MakeInteger (_gdffa ._ccebe ));};if _gdffa ._fecff !=nil {_dcceg .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gdffa ._bcacg );_dcceg .Set ("\u0049\u0044",_gdffa ._abbee );_bfg .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gdffa ._abbee );};_gdffa .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_gdffa .writeString (_dcceg .WriteString ());_gdffa .writeString ("\u000a");};_gadad :=_b .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_eaebf );_gdffa .writeString (_gadad );_gdffa .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _gdffa ._ceagg ==nil {_gdffa ._ceagg =_gdffa ._bccga .Flush ();};return _gdffa ._ceagg ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_dccef *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_gefag *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_gefag ._efgdg =colorspace ;};func (_dgga *PdfReader )newPdfActionResetFormFromDict (_fgf *_eec .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_fgf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_fgf .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_fcgd *PdfOutlineTreeNode )GetContainingPdfObject ()_eec .PdfObject {return _fcgd .GetContext ().GetContainingPdfObject ();};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _eec .PdfObject ;_gbff []byte ;_bgde *_eec .PdfIndirectObject ;};func (_cad *PdfReader )newPdfAnnotationCaretFromDict (_cace *_eec .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_abd :=PdfAnnotationCaret {};_ddde ,_gbfb :=_cad .newPdfAnnotationMarkupFromDict (_cace );if _gbfb !=nil {return nil ,_gbfb ;};_abd .PdfAnnotationMarkup =_ddde ;_abd .RD =_cace .Get ("\u0052\u0044");_abd .Sy =_cace .Get ("\u0053\u0079");return &_abd ,nil ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _eec .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _eec .PdfObject ;Contents _eec .PdfObject ;Rotate *int64 ;Group _eec .PdfObject ;Thumb _eec .PdfObject ;B _eec .PdfObject ;Dur _eec .PdfObject ;Trans _eec .PdfObject ;AA _eec .PdfObject ;Metadata _eec .PdfObject ;PieceInfo _eec .PdfObject ;StructParents _eec .PdfObject ;ID _eec .PdfObject ;PZ _eec .PdfObject ;SeparationInfo _eec .PdfObject ;Tabs _eec .PdfObject ;TemplateInstantiated _eec .PdfObject ;PresSteps _eec .PdfObject ;UserUnit _eec .PdfObject ;VP _eec .PdfObject ;Annots _eec .PdfObject ;_fadd []*PdfAnnotation ;_acfcf *_eec .PdfObjectDictionary ;_gbegb *_eec .PdfIndirectObject ;_dgefg *PdfReader ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _eec .PdfObject )(*PdfFont ,error ){return _ddgd (fontObj ,true )};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func (_ddc *PdfReader )newPdfAnnotationFreeTextFromDict (_cbdd *_eec .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_gdc :=PdfAnnotationFreeText {};_dccd ,_bbca :=_ddc .newPdfAnnotationMarkupFromDict (_cbdd );if _bbca !=nil {return nil ,_bbca ;};_gdc .PdfAnnotationMarkup =_dccd ;_gdc .DA =_cbdd .Get ("\u0044\u0041");_gdc .Q =_cbdd .Get ("\u0051");_gdc .RC =_cbdd .Get ("\u0052\u0043");_gdc .DS =_cbdd .Get ("\u0044\u0053");_gdc .CL =_cbdd .Get ("\u0043\u004c");_gdc .IT =_cbdd .Get ("\u0049\u0054");_gdc .BE =_cbdd .Get ("\u0042\u0045");_gdc .RD =_cbdd .Get ("\u0052\u0044");_gdc .BS =_cbdd .Get ("\u0042\u0053");_gdc .LE =_cbdd .Get ("\u004c\u0045");return &_gdc ,nil ;};func (_cbbf *PdfPage )setContainer (_fgcdf *_eec .PdfIndirectObject ){_fgcdf .PdfObject =_cbbf ._acfcf ;_cbbf ._gbegb =_fgcdf ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_feacf DefaultImageHandler )NewGrayImageFromGoImage (goimg _ac .Image )(*Image ,error ){_agfga :=goimg .Bounds ();_cbgge :=&Image {Width :int64 (_agfga .Dx ()),Height :int64 (_agfga .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _eedb :=goimg .(type ){case *_ac .Gray :if len (_eedb .Pix )!=_agfga .Dx ()*_agfga .Dy (){_dfac ,_cfcag :=_fc .GrayConverter .Convert (goimg );if _cfcag !=nil {return nil ,_cfcag ;};_cbgge .Data =_dfac .Pix ();}else {_cbgge .Data =_eedb .Pix ;};case *_ac .Gray16 :_cbgge .BitsPerComponent =16;if len (_eedb .Pix )!=_agfga .Dx ()*_agfga .Dy ()*2{_baagc ,_agcb :=_fc .Gray16Converter .Convert (goimg );if _agcb !=nil {return nil ,_agcb ;};_cbgge .Data =_baagc .Pix ();}else {_cbgge .Data =_eedb .Pix ;};default:_fdcdg ,_egcf :=_fc .GrayConverter .Convert (goimg );if _egcf !=nil {return nil ,_egcf ;};_cbgge .Data =_fdcdg .Pix ();};return _cbgge ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_daacb *Image )ColorAt (x ,y int )(_ee .Color ,error ){_agaf :=_fc .BytesPerLine (int (_daacb .Width ),int (_daacb .BitsPerComponent ),_daacb .ColorComponents );switch _daacb .ColorComponents {case 1:return _fc .ColorAtGrayscale (x ,y ,int (_daacb .BitsPerComponent ),_agaf ,_daacb .Data ,_daacb ._cbacg );case 3:return _fc .ColorAtNRGBA (x ,y ,int (_daacb .Width ),_agaf ,int (_daacb .BitsPerComponent ),_daacb .Data ,_daacb ._gfbc ,_daacb ._cbacg );case 4:return _fc .ColorAtCMYK (x ,y ,int (_daacb .Width ),_daacb .Data ,_daacb ._cbacg );};_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_daacb .ColorComponents ,_daacb .BitsPerComponent );return nil ,_fe .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_eefea []_eec .PdfObject )([]_eec .PdfObject ,error );};func _cdegc (_abbgg *_eec .PdfObjectDictionary )(*PdfShadingType7 ,error ){_ccgbfg :=PdfShadingType7 {};_efade :=_abbgg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _efade ==nil {_bfg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_dfcda ,_abffc :=_efade .(*_eec .PdfObjectInteger );if !_abffc {_bfg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_efade );return nil ,_eec .ErrTypeError ;};_ccgbfg .BitsPerCoordinate =_dfcda ;_efade =_abbgg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _efade ==nil {_bfg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_dfcda ,_abffc =_efade .(*_eec .PdfObjectInteger );if !_abffc {_bfg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_efade );return nil ,_eec .ErrTypeError ;};_ccgbfg .BitsPerComponent =_dfcda ;_efade =_abbgg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _efade ==nil {_bfg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_dfcda ,_abffc =_efade .(*_eec .PdfObjectInteger );if !_abffc {_bfg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_efade );return nil ,_eec .ErrTypeError ;};_ccgbfg .BitsPerComponent =_dfcda ;_efade =_abbgg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _efade ==nil {_bfg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_cfdgfg ,_abffc :=_efade .(*_eec .PdfObjectArray );if !_abffc {_bfg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efade );return nil ,_eec .ErrTypeError ;};_ccgbfg .Decode =_cfdgfg ;if _cceaa :=_abbgg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cceaa !=nil {_ccgbfg .Function =[]PdfFunction {};if _cbdfg ,_fdfae :=_cceaa .(*_eec .PdfObjectArray );_fdfae {for _ ,_bgafg :=range _cbdfg .Elements (){_gcgae ,_cadce :=_bdfbe (_bgafg );if _cadce !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cadce );return nil ,_cadce ;};_ccgbfg .Function =append (_ccgbfg .Function ,_gcgae );};}else {_begdc ,_bgebf :=_bdfbe (_cceaa );if _bgebf !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgebf );return nil ,_bgebf ;};_ccgbfg .Function =append (_ccgbfg .Function ,_begdc );};};return &_ccgbfg ,nil ;};type modelManager struct{_fgbbf map[PdfModel ]_eec .PdfObject ;_bfageb map[_eec .PdfObject ]PdfModel ;};func (_bcgdg *DSS )add (_fgge *[]*_eec .PdfObjectStream ,_baef map[string ]*_eec .PdfObjectStream ,_facg [][]byte )([]*_eec .PdfObjectStream ,error ){_fefb :=make ([]*_eec .PdfObjectStream ,0,len (_facg ));for _ ,_efdb :=range _facg {_ggbca ,_abced :=_edgdg (_efdb );if _abced !=nil {return nil ,_abced ;};_abcb ,_gaggd :=_baef [string (_ggbca )];if !_gaggd {_abcb ,_abced =_eec .MakeStream (_efdb ,_eec .NewRawEncoder ());if _abced !=nil {return nil ,_abced ;};_baef [string (_ggbca )]=_abcb ;*_fgge =append (*_fgge ,_abcb );};_fefb =append (_fefb ,_abcb );};return _fefb ,nil ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _eec .PdfObject ;Name _eec .PdfObject ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_faeee DefaultImageHandler )Read (reader _dd .Reader )(*Image ,error ){_eafbc ,_ ,_fbdb :=_ac .Decode (reader );if _fbdb !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_fbdb );return nil ,_fbdb ;};return _faeee .NewImageFromGoImage (_eafbc );};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_baaf pdfFont };

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_ceffa *PdfFont )BytesToCharcodes (data []byte )[]_fcb .CharCode {_bfg .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );if _cffe ,_gaac :=_ceffa ._baaf .(*pdfFontType0 );_gaac &&_cffe ._ceab !=nil {if _ggcce ,_cccc :=_cffe .bytesToCharcodes (data );_cccc {return _ggcce ;};};_ffad :=make ([]_fcb .CharCode ,0,len (data )+len (data )%2);if _ceffa .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );data =append (data ,0);};for _eeabf :=0;_eeabf < len (data );_eeabf +=2{_fdebf :=uint16 (data [_eeabf ])<<8|uint16 (data [_eeabf +1]);_ffad =append (_ffad ,_fcb .CharCode (_fdebf ));};}else {for _ ,_gecg :=range data {_ffad =append (_ffad ,_fcb .CharCode (_gecg ));};};return _ffad ;};func (_ecbc *PdfAppender )addNewObject (_ddaf _eec .PdfObject ){if _ ,_ggef :=_ecbc ._eede [_ddaf ];!_ggef {_ecbc ._gba =append (_ecbc ._gba ,_ddaf );_ecbc ._eede [_ddaf ]=struct{}{};};};var _cgfdg =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_bdgfa *PdfFieldSignature )ToPdfObject ()_eec .PdfObject {if _bdgfa .PdfAnnotationWidget !=nil {_bdgfa .PdfAnnotationWidget .ToPdfObject ();};_bdgfa .PdfField .ToPdfObject ();_ecfd :=_bdgfa ._bedf ;_fdbge :=_ecfd .PdfObject .(*_eec .PdfObjectDictionary );_fdbge .SetIfNotNil ("\u0046\u0054",_eec .MakeName ("\u0053\u0069\u0067"));_fdbge .SetIfNotNil ("\u004c\u006f\u0063\u006b",_bdgfa .Lock );_fdbge .SetIfNotNil ("\u0053\u0056",_bdgfa .SV );if _bdgfa .V !=nil {_fdbge .SetIfNotNil ("\u0056",_bdgfa .V .ToPdfObject ());};return _ecfd ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_abfba *PdfPageResources )SetPatternByName (keyName _eec .PdfObjectName ,pattern _eec .PdfObject )error {if _abfba .Pattern ==nil {_abfba .Pattern =_eec .MakeDict ();};_cecgca ,_aeggb :=_abfba .Pattern .(*_eec .PdfObjectDictionary );if !_aeggb {return _eec .ErrTypeError ;};_cecgca .Set (keyName ,pattern );return nil ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_feeag *PdfWriter )AddPage (page *PdfPage )error {const _dfcgdf ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_fdebg (page );_cfbgeb :=page .ToPdfObject ();_bfg .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");_bfg .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_cfbgeb );_adfga ,_aaafd :=_eec .GetIndirect (_cfbgeb );if !_aaafd {return _fe .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");};_bfg .Log .Trace ("\u0025\u0073",_adfga );_bfg .Log .Trace ("\u0025\u0073",_adfga .PdfObject );_egcd ,_aaafd :=_eec .GetDict (_adfga .PdfObject );if !_aaafd {return _fe .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_bbadc ,_aaafd :=_eec .GetName (_egcd .Get ("\u0054\u0079\u0070\u0065"));if !_aaafd {return _b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_egcd .Get ("\u0054\u0079\u0070\u0065"));};if _bbadc .String ()!="\u0050\u0061\u0067\u0065"{return _fe .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_acddb :=[]_eec .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};_fabag ,_acecf :=_eec .GetIndirect (_egcd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_bfg .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_egcd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_acecf );for _acecf {_bfg .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fabag );_bbbc ,_dabaf :=_eec .GetDict (_fabag .PdfObject );if !_dabaf {return _fe .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_cecbb :=range _acddb {_bfg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cecbb );if _egcd .Get (_cecbb )!=nil {_bfg .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _gbabf :=_bbbc .Get (_cecbb );_gbabf !=nil {_bfg .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cecbb );_egcd .Set (_cecbb ,_gbabf );};};_fabag ,_acecf =_eec .GetIndirect (_bbbc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_bfg .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bbbc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_bfg .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");_egcd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_feeag ._edffb );_adfga .PdfObject =_egcd ;_ebbf ,_aaafd :=_eec .GetDict (_feeag ._edffb .PdfObject );if !_aaafd {return _fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_gfdfc ,_aaafd :=_eec .GetArray (_ebbf .Get ("\u004b\u0069\u0064\u0073"));if !_aaafd {return _fe .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_gfdfc .Append (_adfga );_feeag ._effa [_egcd ]=struct{}{};_edbgc ,_aaafd :=_eec .GetInt (_ebbf .Get ("\u0043\u006f\u0075n\u0074"));if !_aaafd {return _fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};*_edbgc =*_edbgc +1;if page ._dgefg ==nil {_dccbc :=_ea .Track (_feeag ._fbfda ,_dfcgdf );if _dccbc !=nil {return _dccbc ;};}else {_fagfc :=_ea .Track (page ._dgefg ._abcgb ,_dfcgdf );if _fagfc !=nil {return _fagfc ;};};_feeag .addObject (_adfga );_egafac :=_feeag .addObjects (_egcd );if _egafac !=nil {return _egafac ;};return nil ;};

// B returns the value of the B component of the color.
func (_ecf *PdfColorLab )B ()float64 {return _ecf [2]};

// ToPdfObject implements interface PdfModel.
func (_eca *PdfActionSubmitForm )ToPdfObject ()_eec .PdfObject {_eca .PdfAction .ToPdfObject ();_fac :=_eca ._aa ;_gge :=_fac .PdfObject .(*_eec .PdfObjectDictionary );_gge .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeSubmitForm )));if _eca .F !=nil {_gge .Set ("\u0046",_eca .F .ToPdfObject ());};_gge .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_eca .Fields );_gge .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_eca .Flags );return _fac ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_aag *BorderStyle )GetPdfName ()string {switch *_aag {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";};return "";};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_cfgef *PdfFont )ToPdfObject ()_eec .PdfObject {if _cfgef ._baaf ==nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _eec .MakeNull ();};return _cfgef ._baaf .ToPdfObject ();};func _affbc (_ggdd *_eec .PdfObjectArray )(float64 ,error ){_gbcfc ,_ddbdbd :=_ggdd .ToFloat64Array ();if _ddbdbd !=nil {_bfg .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ggdd ,_ddbdbd );};switch len (_gbcfc ){case 1:return _gbcfc [0],nil ;case 3:_fadde :=PdfColorspaceDeviceRGB {};_fefgb ,_ceacd :=_fadde .ColorFromFloats (_gbcfc );if _ceacd !=nil {return 0.0,_ceacd ;};return _fefgb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_cccdb :=PdfColorspaceDeviceCMYK {};_agfbdc ,_eebbe :=_cccdb .ColorFromFloats (_gbcfc );if _eebbe !=nil {return 0.0,_eebbe ;};_gebfa ,_eebbe :=_cccdb .ColorToRGB (_agfbdc .(*PdfColorDeviceCMYK ));if _eebbe !=nil {return 0.0,_eebbe ;};return _gebfa .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_ddbdbd =_fe .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_bfg .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ggdd ,_ddbdbd );return 0.0,_ddbdbd ;};func _efba (_gbbdb *PdfField ,_gcbe _eec .PdfObject ){for _ ,_acggd :=range _gbbdb .Annotations {_acggd .AS =_gcbe ;_acggd .ToPdfObject ();};};func (_aefc *PdfReader )newPdfActionSetOCGStateFromDict (_agb *_eec .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_agb .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_agb .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;};var _dcgfb =_ef .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_eec .PdfObject ,error );};func (_gafde *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_agceb *PdfReader )GetObjectNums ()[]int {return _agceb ._ggagaa .GetObjectNums ()};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_eec .PdfObjectArray ;Domain *_eec .PdfObjectArray ;Function []PdfFunction ;Extend *_eec .PdfObjectArray ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_abbce :=&PdfOutline {_aagc :_eec .MakeIndirectObject (_eec .MakeDict ())};_abbce ._geaac =_abbce ;return _abbce ;};func (_egca *PdfReader )newPdfAnnotationPolyLineFromDict (_afa *_eec .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_ggdc :=PdfAnnotationPolyLine {};_ceff ,_ccgae :=_egca .newPdfAnnotationMarkupFromDict (_afa );if _ccgae !=nil {return nil ,_ccgae ;};_ggdc .PdfAnnotationMarkup =_ceff ;_ggdc .Vertices =_afa .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_ggdc .LE =_afa .Get ("\u004c\u0045");_ggdc .BS =_afa .Get ("\u0042\u0053");_ggdc .IC =_afa .Get ("\u0049\u0043");_ggdc .BE =_afa .Get ("\u0042\u0045");_ggdc .IT =_afa .Get ("\u0049\u0054");_ggdc .Measure =_afa .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_ggdc ,nil ;};

// String returns a human readable description of `fontfile`.
func (_efbe *fontFile )String ()string {_gafaf :="\u005b\u004e\u006f\u006e\u0065\u005d";if _efbe ._fdgg !=nil {_gafaf =_efbe ._fdgg .String ();};return _b .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_efbe ._ggceb ,_gafaf );};

// PartialName returns the partial name of the field.
func (_befc *PdfField )PartialName ()string {_afbfd :="";if _befc .T !=nil {_afbfd =_befc .T .Decoded ();}else {_bfg .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");};return _afbfd ;};func _eagga (_fbcac _eec .PdfObject )(*PdfShading ,error ){_eaada :=&PdfShading {};var _aaca *_eec .PdfObjectDictionary ;if _cgcbb ,_dcfc :=_eec .GetIndirect (_fbcac );_dcfc {_eaada ._fbeg =_cgcbb ;_adeg ,_gbdac :=_cgcbb .PdfObject .(*_eec .PdfObjectDictionary );if !_gbdac {_bfg .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_eec .ErrTypeError ;};_aaca =_adeg ;}else if _aecbe ,_cbfad :=_eec .GetStream (_fbcac );_cbfad {_eaada ._fbeg =_aecbe ;_aaca =_aecbe .PdfObjectDictionary ;}else if _dcdefc ,_fefea :=_eec .GetDict (_fbcac );_fefea {_eaada ._fbeg =_dcdefc ;_aaca =_dcdefc ;}else {_bfg .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_fbcac );return nil ,_eec .ErrTypeError ;};if _aaca ==nil {_bfg .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_fe .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_fbcac =_aaca .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _fbcac ==nil {_bfg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fbcac =_eec .TraceToDirectObject (_fbcac );_bacb ,_ffceb :=_fbcac .(*_eec .PdfObjectInteger );if !_ffceb {_bfg .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_fbcac );return nil ,_eec .ErrTypeError ;};if *_bacb < 1||*_bacb > 7{_bfg .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_bacb );return nil ,_eec .ErrTypeError ;};_eaada .ShadingType =_bacb ;_fbcac =_aaca .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _fbcac ==nil {_bfg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gdege ,_fgegb :=NewPdfColorspaceFromPdfObject (_fbcac );if _fgegb !=nil {_bfg .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_fgegb );return nil ,_fgegb ;};_eaada .ColorSpace =_gdege ;_fbcac =_aaca .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _fbcac !=nil {_fbcac =_eec .TraceToDirectObject (_fbcac );_gaff ,_dcbcd :=_fbcac .(*_eec .PdfObjectArray );if !_dcbcd {_bfg .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fbcac );return nil ,_eec .ErrTypeError ;};_eaada .Background =_gaff ;};_fbcac =_aaca .Get ("\u0042\u0042\u006f\u0078");if _fbcac !=nil {_fbcac =_eec .TraceToDirectObject (_fbcac );_abffb ,_gaag :=_fbcac .(*_eec .PdfObjectArray );if !_gaag {_bfg .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_fbcac );return nil ,_eec .ErrTypeError ;};_cfegc ,_fbdag :=NewPdfRectangle (*_abffb );if _fbdag !=nil {_bfg .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_fbdag );return nil ,_fbdag ;};_eaada .BBox =_cfegc ;};_fbcac =_aaca .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _fbcac !=nil {_fbcac =_eec .TraceToDirectObject (_fbcac );_ecbgf ,_ecbcae :=_fbcac .(*_eec .PdfObjectBool );if !_ecbcae {_bfg .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fbcac );return nil ,_eec .ErrTypeError ;};_eaada .AntiAlias =_ecbgf ;};switch *_bacb {case 1:_fbgdb ,_aebdcd :=_bgbef (_aaca );if _aebdcd !=nil {return nil ,_aebdcd ;};_fbgdb .PdfShading =_eaada ;_eaada ._gdcdb =_fbgdb ;return _eaada ,nil ;case 2:_agad ,_bebcf :=_fdeed (_aaca );if _bebcf !=nil {return nil ,_bebcf ;};_agad .PdfShading =_eaada ;_eaada ._gdcdb =_agad ;return _eaada ,nil ;case 3:_cfae ,_gaagd :=_dcbdf (_aaca );if _gaagd !=nil {return nil ,_gaagd ;};_cfae .PdfShading =_eaada ;_eaada ._gdcdb =_cfae ;return _eaada ,nil ;case 4:_dfgcb ,_ecea :=_bebgbb (_aaca );if _ecea !=nil {return nil ,_ecea ;};_dfgcb .PdfShading =_eaada ;_eaada ._gdcdb =_dfgcb ;return _eaada ,nil ;case 5:_egbbb ,_aaaac :=_ebag (_aaca );if _aaaac !=nil {return nil ,_aaaac ;};_egbbb .PdfShading =_eaada ;_eaada ._gdcdb =_egbbb ;return _eaada ,nil ;case 6:_dcade ,_egde :=_bgbd (_aaca );if _egde !=nil {return nil ,_egde ;};_dcade .PdfShading =_eaada ;_eaada ._gdcdb =_dcade ;return _eaada ,nil ;case 7:_eeeba ,_egddb :=_cdegc (_aaca );if _egddb !=nil {return nil ,_egddb ;};_eeeba .PdfShading =_eaada ;_eaada ._gdcdb =_eeeba ;return _eaada ,nil ;};return nil ,_fe .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};func _adegd (_fecac []*_eec .PdfObjectStream )*_eec .PdfObjectArray {if len (_fecac )==0{return nil ;};_cefff :=make ([]_eec .PdfObject ,0,len (_fecac ));for _ ,_cdebg :=range _fecac {_cefff =append (_cefff ,_cdebg );};return _eec .MakeArray (_cefff ...);};func _aaad (_degf *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_degf }};

// ToPdfObject implements interface PdfModel.
func (_eebg *PdfBorderStyle )ToPdfObject ()_eec .PdfObject {_eddb :=_eec .MakeDict ();if _eebg ._beeg !=nil {if _cce ,_gbbe :=_eebg ._beeg .(*_eec .PdfIndirectObject );_gbbe {_cce .PdfObject =_eddb ;};};_eddb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));if _eebg .W !=nil {_eddb .Set ("\u0057",_eec .MakeFloat (*_eebg .W ));};if _eebg .S !=nil {_eddb .Set ("\u0053",_eec .MakeName (_eebg .S .GetPdfName ()));};if _eebg .D !=nil {_eddb .Set ("\u0044",_eec .MakeArrayFromIntegers (*_eebg .D ));};if _eebg ._beeg !=nil {return _eebg ._beeg ;};return _eddb ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_fcg :=NewPdfAction ();_fgg :=&PdfActionNamed {};_fgg .PdfAction =_fcg ;_fcg .SetContext (_fgg );return _fgg ;};

// ValidateSignatures validates digital signatures in the document.
func (_gcfe *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _gcfe .AcroForm ==nil {return nil ,nil ;};if _gcfe .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_aaegc *PdfSignature ;_ddbbc *PdfField ;_agecg SignatureHandler ;};var _cdgfe []*sigFieldPair ;for _ ,_fdbgfd :=range _gcfe .AcroForm .AllFields (){if _fdbgfd .V ==nil {continue ;};if _bcaag ,_edage :=_eec .GetDict (_fdbgfd .V );_edage {if _eacdb ,_gcaab :=_eec .GetNameVal (_bcaag .Get ("\u0054\u0079\u0070\u0065"));_gcaab &&_eacdb =="\u0053\u0069\u0067"{_bbfca ,_dcbe :=_eec .GetIndirect (_fdbgfd .V );if !_dcbe {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");return nil ,ErrTypeCheck ;};_bfeca ,_ccged :=_gcfe .newPdfSignatureFromIndirect (_bbfca );if _ccged !=nil {return nil ,_ccged ;};var _fbcad SignatureHandler ;for _ ,_cebb :=range handlers {if _cebb .IsApplicable (_bfeca ){_fbcad =_cebb ;break ;};};_cdgfe =append (_cdgfe ,&sigFieldPair {_aaegc :_bfeca ,_ddbbc :_fdbgfd ,_agecg :_fbcad });};};};var _accac []SignatureValidationResult ;for _ ,_ceadf :=range _cdgfe {_bggff :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_ceadf ._ddbbc }};if _ceadf ._agecg ==nil {_bggff .Errors =append (_bggff .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_accac =append (_accac ,_bggff );continue ;};_dbcbe ,_fdcea :=_ceadf ._agecg .NewDigest (_ceadf ._aaegc );if _fdcea !=nil {_bggff .Errors =append (_bggff .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_fdcea .Error ());_accac =append (_accac ,_bggff );continue ;};_abggc :=_ceadf ._aaegc .ByteRange ;if _abggc ==nil {_bggff .Errors =append (_bggff .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_accac =append (_accac ,_bggff );continue ;};for _cdee :=0;_cdee < _abggc .Len ();_cdee =_cdee +2{_dadbf ,_ :=_eec .GetNumberAsInt64 (_abggc .Get (_cdee ));_aeae ,_ :=_eec .GetIntVal (_abggc .Get (_cdee +1));if _ ,_cebccg :=_gcfe ._fgdab .Seek (_dadbf ,_dd .SeekStart );_cebccg !=nil {return nil ,_cebccg ;};_aecgd :=make ([]byte ,_aeae );if _ ,_acdca :=_gcfe ._fgdab .Read (_aecgd );_acdca !=nil {return nil ,_acdca ;};_dbcbe .Write (_aecgd );};_abfgf ,_fdcea :=_ceadf ._agecg .Validate (_ceadf ._aaegc ,_dbcbe );if _fdcea !=nil {return nil ,_fdcea ;};_abfgf .Name =_ceadf ._aaegc .Name .Decoded ();_abfgf .Reason =_ceadf ._aaegc .Reason .Decoded ();if _ceadf ._aaegc .M !=nil {_egcfc ,_aeedc :=NewPdfDate (_ceadf ._aaegc .M .String ());if _aeedc !=nil {_abfgf .Errors =append (_abfgf .Errors ,_aeedc .Error ());continue ;};_abfgf .Date =_egcfc ;};_abfgf .ContactInfo =_ceadf ._aaegc .ContactInfo .Decoded ();_abfgf .Location =_ceadf ._aaegc .Location .Decoded ();_abfgf .Fields =_bggff .Fields ;_accac =append (_accac ,_abfgf );};return _accac ,nil ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_afgbff *PdfOutlineItem )GetContainingPdfObject ()_eec .PdfObject {return _afgbff ._bebd };

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_eecee *Image )ToJBIG2Image ()(*_eec .JBIG2Image ,error ){_cddg ,_eggcg :=_eecee .ToGoImage ();if _eggcg !=nil {return nil ,_eggcg ;};return _eec .GoImageToJBIG2 (_cddg ,_eec .JB2ImageAutoThreshold );};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cgab *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_bfg .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return nil ,_fe .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_febfe :=&PdfColorspaceCalGray {};_febfe .BlackPoint =[]float64 {0.0,0.0,0.0};_febfe .Gamma =1;return _febfe ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_gbeg *PdfAppender )UpdatePage (page *PdfPage ){_gbeg .updateObjectsDeep (page .ToPdfObject (),nil )};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_fbfb PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_eec .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_fceec []_eec .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_gefg []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _dd .ReadSeeker )(*PdfFont ,error ){_ccfd ,_cgeda :=_gag .ReadAll (r );if _cgeda !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cgeda );return nil ,_cgeda ;};_fbbdc ,_cgeda :=_de .TtfParse (_gf .NewReader (_ccfd ));if _cgeda !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_cgeda );return nil ,_cgeda ;};_gefbg :=&pdfCIDFontType2 {fontCommon :fontCommon {_bgga :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_eec .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_dabed :=make ([]rune ,0,len (_fbbdc .Chars ));for _cdegb :=range _fbbdc .Chars {_dabed =append (_dabed ,_cdegb );};_fb .Slice (_dabed ,func (_fbbc ,_ddbe int )bool {return _dabed [_fbbc ]< _dabed [_ddbe ]});_ddfaf :=1000.0/float64 (_fbbdc .UnitsPerEm );if len (_fbbdc .Widths )<=0{return nil ,_fe .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_bfgc :=_ddfaf *float64 (_fbbdc .Widths [0]);_baag :=make (map[rune ]int );for _ ,_dfgga :=range _dabed {_efae :=_fbbdc .Chars [_dfgga ];_bcggg :=_ddfaf *float64 (_fbbdc .Widths [_efae ]);_baag [_dfgga ]=int (_bcggg );};_gefbg ._cfbcg =_baag ;_gefbg .DW =_eec .MakeInteger (int64 (_bfgc ));_bdcf :=_faedc (_dabed ,_baag ,_fbbdc .Chars );_gefbg .W =_eec .MakeIndirectObject (_bdcf );_cagaa :=_eec .MakeDict ();_cagaa .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_eec .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_cagaa .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_eec .MakeString ("\u0041\u0064\u006fb\u0065"));_cagaa .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_eec .MakeInteger (0));_gefbg .CIDSystemInfo =_cagaa ;_gbbfe :=&PdfFontDescriptor {FontName :_eec .MakeName (_fbbdc .PostScriptName ),Ascent :_eec .MakeFloat (_ddfaf *float64 (_fbbdc .TypoAscender )),Descent :_eec .MakeFloat (_ddfaf *float64 (_fbbdc .TypoDescender )),CapHeight :_eec .MakeFloat (_ddfaf *float64 (_fbbdc .CapHeight )),FontBBox :_eec .MakeArrayFromFloats ([]float64 {_ddfaf *float64 (_fbbdc .Xmin ),_ddfaf *float64 (_fbbdc .Ymin ),_ddfaf *float64 (_fbbdc .Xmax ),_ddfaf *float64 (_fbbdc .Ymax )}),ItalicAngle :_eec .MakeFloat (_fbbdc .ItalicAngle ),MissingWidth :_eec .MakeFloat (_ddfaf *float64 (_fbbdc .Widths [0]))};_ecace ,_cgeda :=_eec .MakeStream (_ccfd ,_eec .NewFlateEncoder ());if _cgeda !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_cgeda );return nil ,_cgeda ;};_ecace .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_eec .MakeInteger (int64 (len (_ccfd ))));_gbbfe .FontFile2 =_ecace ;if _fbbdc .Bold {_gbbfe .StemV =_eec .MakeInteger (120);}else {_gbbfe .StemV =_eec .MakeInteger (70);};_dagb :=_gfbg ;if _fbbdc .IsFixedPitch {_dagb |=_feab ;};if _fbbdc .ItalicAngle !=0{_dagb |=_fbbg ;};_gbbfe .Flags =_eec .MakeInteger (int64 (_dagb ));_gefbg ._cefc =_fbbdc .PostScriptName ;_gefbg ._cddbf =_gbbfe ;_ceed :=pdfFontType0 {fontCommon :fontCommon {_bgga :"\u0054\u0079\u0070e\u0030",_cefc :_fbbdc .PostScriptName },DescendantFont :&PdfFont {_baaf :_gefbg },Encoding :_eec .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_edff :_fbbdc .NewEncoder ()};if len (_fbbdc .Chars )> 0{_gdcbfc :=make (map[_cf .CharCode ]rune ,len (_fbbdc .Chars ));for _gdaa ,_gdccd :=range _fbbdc .Chars {_gecd :=_cf .CharCode (_gdccd );if _afgee ,_dffd :=_gdcbfc [_gecd ];!_dffd ||(_dffd &&_afgee > _gdaa ){_gdcbfc [_gecd ]=_gdaa ;};};_ceed ._ecab =_cf .NewToUnicodeCMap (_gdcbfc );};_cgecg :=PdfFont {_baaf :&_ceed };return &_cgecg ,nil ;};

// A returns the value of the A component of the color.
func (_daed *PdfColorLab )A ()float64 {return _daed [1]};func (_gadf *PdfReader )newPdfActionSubmitFormFromDict (_eedc *_eec .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_eaa ,_effg :=_fecb (_eedc .Get ("\u0046"));if _effg !=nil {return nil ,_effg ;};return &PdfActionSubmitForm {F :_eaa ,Fields :_eedc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_eedc .Get ("\u0046\u006c\u0061g\u0073")},nil ;};func _fdfec (_dabce StdFontName )(pdfFontSimple ,error ){_badfe ,_aafa :=_de .NewStdFontByName (_dabce );if !_aafa {return pdfFontSimple {},ErrFontNotSupported ;};_dbba :=_degfg (_badfe );return _dbba ,nil ;};func (_fcaa *PdfReader )newPdfAnnotationInkFromDict (_edda *_eec .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_fgaf :=PdfAnnotationInk {};_gfec ,_agge :=_fcaa .newPdfAnnotationMarkupFromDict (_edda );if _agge !=nil {return nil ,_agge ;};_fgaf .PdfAnnotationMarkup =_gfec ;_fgaf .InkList =_edda .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_fgaf .BS =_edda .Get ("\u0042\u0053");return &_fgaf ,nil ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_dbg :=NewPdfAction ();_aaaa :=&PdfActionSetOCGState {};_aaaa .PdfAction =_dbg ;_dbg .SetContext (_aaaa );return _aaaa ;};func (_cbeae *pdfFontType0 )bytesToCharcodes (_dccbd []byte )([]_fcb .CharCode ,bool ){if _cbeae ._ceab ==nil {return nil ,false ;};_cggff ,_gbegg :=_cbeae ._ceab .BytesToCharcodes (_dccbd );if !_gbegg {return nil ,false ;};_adbb :=make ([]_fcb .CharCode ,len (_cggff ));for _efceg ,_cbfd :=range _cggff {_adbb [_efceg ]=_fcb .CharCode (_cbfd );};return _adbb ,true ;};type pdfCIDFontType0 struct{fontCommon ;_gbce *_eec .PdfIndirectObject ;_cadgb _fcb .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_eec .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _eec .PdfObject ;W _eec .PdfObject ;DW2 _eec .PdfObject ;W2 _eec .PdfObject ;_bfced map[_fcb .CharCode ]float64 ;_dbaf float64 ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_fgd *PdfAction )GetContext ()PdfModel {if _fgd ==nil {return nil ;};return _fgd ._ce ;};

// ToPdfObject implements interface PdfModel.
func (_bc *PdfActionJavaScript )ToPdfObject ()_eec .PdfObject {_bc .PdfAction .ToPdfObject ();_ad :=_bc ._aa ;_gfc :=_ad .PdfObject .(*_eec .PdfObjectDictionary );_gfc .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeJavaScript )));_gfc .SetIfNotNil ("\u004a\u0053",_bc .JS );return _ad ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_bbc :=NewPdfAnnotation ();_cbed :=&PdfAnnotationSquiggly {};_cbed .PdfAnnotation =_bbc ;_cbed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bbc .SetContext (_cbed );return _cbed ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_aagc *_eec .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_eea *PdfActionSetOCGState )ToPdfObject ()_eec .PdfObject {_eea .PdfAction .ToPdfObject ();_cda :=_eea ._aa ;_aea :=_cda .PdfObject .(*_eec .PdfObjectDictionary );_aea .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeSetOCGState )));_aea .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_eea .State );_aea .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_eea .PreserveRB );return _cda ;};func _facfc (_ccaa string )map[string ]string {_geabe :=_fdcb .Split (_ccaa ,-1);_bgecb :=map[string ]string {};for _ ,_gefc :=range _geabe {_cdgge :=_aabbe .FindStringSubmatch (_gefc );if _cdgge ==nil {continue ;};_agfb ,_acdgb :=_cdgge [1],_cdgge [2];_bgecb [_agfb ]=_acdgb ;};return _bgecb ;};type pdfFontSimple struct{fontCommon ;_geff *_eec .PdfIndirectObject ;_fgabb map[_fcb .CharCode ]float64 ;_acfd _fcb .TextEncoder ;_gdbead _fcb .TextEncoder ;_bfggg *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _eec .PdfObject ;LastChar _eec .PdfObject ;Widths _eec .PdfObject ;Encoding _eec .PdfObject ;_fcage map[rune ]_de .CharMetrics ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_aagfa *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_dfege :=NewPdfOutlineItem ();_dfege .Title =_eec .MakeEncodedString (_aagfa .Title ,true );_dfege .Dest =_aagfa .Dest .ToPdfObject ();var _gbab []*PdfOutlineItem ;var _gcaf int64 ;var _ddfc *PdfOutlineItem ;for _ ,_bbbf :=range _aagfa .Entries {_defbe ,_cdabd :=_bbbf .ToPdfOutlineItem ();_defbe .Parent =&_dfege .PdfOutlineTreeNode ;if _ddfc !=nil {_ddfc .Next =&_defbe .PdfOutlineTreeNode ;_defbe .Prev =&_ddfc .PdfOutlineTreeNode ;};_gbab =append (_gbab ,_defbe );_gcaf +=_cdabd ;_ddfc =_defbe ;};_faacc :=len (_gbab );_gcaf +=int64 (_faacc );if _faacc > 0{_dfege .First =&_gbab [0].PdfOutlineTreeNode ;_dfege .Last =&_gbab [_faacc -1].PdfOutlineTreeNode ;_dfege .Count =&_gcaf ;};return _dfege ,_gcaf ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_efed *VRI )ToPdfObject ()*_eec .PdfObjectDictionary {_bgea :=_eec .MakeDict ();_bgea .SetIfNotNil (_eec .PdfObjectName ("\u0043\u0065\u0072\u0074"),_adegd (_efed .Cert ));_bgea .SetIfNotNil (_eec .PdfObjectName ("\u004f\u0043\u0053\u0050"),_adegd (_efed .OCSP ));_bgea .SetIfNotNil (_eec .PdfObjectName ("\u0043\u0052\u004c"),_adegd (_efed .CRL ));_bgea .SetIfNotNil ("\u0054\u0055",_efed .TU );_bgea .SetIfNotNil ("\u0054\u0053",_efed .TS );return _bgea ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_fdbf DefaultImageHandler )NewImageFromGoImage (goimg _ac .Image )(*Image ,error ){_bcga ,_edgg :=_fc .FromGoImage (goimg );if _edgg !=nil {return nil ,_edgg ;};_defb :=_bffcg (_bcga .Base ());return &_defb ,nil ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_eec .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};func (_gfgg *DSS )addCerts (_dfgdg [][]byte )([]*_eec .PdfObjectStream ,error ){return _gfgg .add (&_gfgg .Certs ,_gfgg ._bgeb ,_dfgdg );};

// ToPdfObject returns a PDF object representation of the outline item.
func (_gbabb *OutlineItem )ToPdfObject ()_eec .PdfObject {_bged ,_ :=_gbabb .ToPdfOutlineItem ();return _bged .ToPdfObject ();};func (_aagf *PdfFont )baseFields ()*fontCommon {if _aagf ._baaf ==nil {_bfg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");return nil ;};return _aagf ._baaf .baseFields ();};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_gefcc *PdfShadingPattern )ToPdfObject ()_eec .PdfObject {_gefcc .PdfPattern .ToPdfObject ();_acffa :=_gefcc .getDict ();if _gefcc .Shading !=nil {_acffa .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_gefcc .Shading .ToPdfObject ());};if _gefcc .Matrix !=nil {_acffa .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gefcc .Matrix );};if _gefcc .ExtGState !=nil {_acffa .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_gefcc .ExtGState );};return _gefcc ._ggede ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_gdbad *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _dfcb []_fcb .TextEncoder ;var _fcdd _fcb .CMapEncoder ;if _cddae :=_gdbad .baseFields ()._ecab ;_cddae !=nil {_fcdd =_fcb .NewCMapEncoder ("",nil ,_cddae );};_ceegc :=_gdbad .Encoder ();if _ceegc !=nil {switch _fagb :=_ceegc .(type ){case _fcb .SimpleEncoder :_bcbg :=_fagb .BaseName ();if _ ,_bbd :=_fbadd [_bcbg ];_bbd {_dfcb =append (_dfcb ,_ceegc );};};};if len (_dfcb )==0{if _gdbad .baseFields ()._ecab !=nil {_dfcb =append (_dfcb ,_fcdd );};if _ceegc !=nil {_dfcb =append (_dfcb ,_ceegc );};};var _egea _gf .Buffer ;var _abdaf int ;for _ ,_bebcc :=range data {var _eeda bool ;for _ ,_bebgb :=range _dfcb {if _ggcceg :=_bebgb .Encode (string (_bebcc ));len (_ggcceg )> 0{_egea .Write (_ggcceg );_eeda =true ;break ;};};if !_eeda {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_bebcc );_abdaf ++;};};if _abdaf !=0{_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_abdaf ,_gdbad ,_dfcb );};return _egea .Bytes (),_abdaf ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_efcb *PdfField )ToPdfObject ()_eec .PdfObject {_dcada :=_efcb ._bedf ;_fbgbb :=_dcada .PdfObject .(*_eec .PdfObjectDictionary );_acfc :=_eec .MakeArray ();for _ ,_ceeg :=range _efcb .Kids {_acfc .Append (_ceeg .ToPdfObject ());};for _ ,_bddb :=range _efcb .Annotations {if _bddb ._dge !=_efcb ._bedf {_acfc .Append (_bddb .GetContext ().ToPdfObject ());};};if _efcb .Parent !=nil {_fbgbb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_efcb .Parent .GetContainingPdfObject ());};if _acfc .Len ()> 0{_fbgbb .Set ("\u004b\u0069\u0064\u0073",_acfc );};_fbgbb .SetIfNotNil ("\u0046\u0054",_efcb .FT );_fbgbb .SetIfNotNil ("\u0054",_efcb .T );_fbgbb .SetIfNotNil ("\u0054\u0055",_efcb .TU );_fbgbb .SetIfNotNil ("\u0054\u004d",_efcb .TM );_fbgbb .SetIfNotNil ("\u0046\u0066",_efcb .Ff );_fbgbb .SetIfNotNil ("\u0056",_efcb .V );_fbgbb .SetIfNotNil ("\u0044\u0056",_efcb .DV );_fbgbb .SetIfNotNil ("\u0041\u0041",_efcb .AA );return _dcada ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_ce PdfModel ;Type _eec .PdfObject ;S _eec .PdfObject ;Next _eec .PdfObject ;_aa *_eec .PdfIndirectObject ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_ca .PSProgram ;_fadaa *_ca .PSExecutor ;_ddebb []byte ;_fccbd *_eec .PdfObjectStream ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_bbbd *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_cbedg :=func (_edded float64 )float64 {if _edded >=6.0/29{return _edded *_edded *_edded ;};return 108.0/841*(_edded -4/29);};_gebg ,_cdbd :=color .(*PdfColorLab );if !_cdbd {_bfg .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_gebg .L ();AStar :=_gebg .A ();BStar :=_gebg .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;X :=_bbbd .WhitePoint [0]*_cbedg (L );Y :=_bbbd .WhitePoint [1]*_cbedg (M );Z :=_bbbd .WhitePoint [2]*_cbedg (N );_eggec :=3.240479*X +-1.537150*Y +-0.498535*Z ;_deg :=-0.969256*X +1.875992*Y +0.041556*Z ;_ecaa :=0.055648*X +-0.204043*Y +1.057311*Z ;_eggec =_fba .Min (_fba .Max (_eggec ,0),1.0);_deg =_fba .Min (_fba .Max (_deg ,0),1.0);_ecaa =_fba .Min (_fba .Max (_ecaa ,0),1.0);return NewPdfColorDeviceRGB (_eggec ,_deg ,_ecaa ),nil ;};var _ pdfFont =(*pdfFontSimple )(nil );

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_eec .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _eec .PdfObject ;A _eec .PdfObject ;SE _eec .PdfObject ;C _eec .PdfObject ;F _eec .PdfObject ;_bebd *_eec .PdfIndirectObject ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_bffae *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_bfg .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_bfg .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );_bfg .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_bfg .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );_cagd ,_aacfd :=_fc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gfbc ,img ._cbacg );if _aacfd !=nil {return Image {},_aacfd ;};_efcd ,_aacfd :=_fc .NRGBAConverter .Convert (_cagd );if _aacfd !=nil {return Image {},_aacfd ;};return _bffcg (_efcd .Base ()),nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_egdb pdfCIDFontType0 )GetCharMetrics (code _fcb .CharCode )(_de .CharMetrics ,bool ){_bgff :=_egdb ._dbaf ;if _bggfa ,_adca :=_egdb ._bfced [code ];_adca {_bgff =_bggfa ;};return _de .CharMetrics {Wx :_bgff },true ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_cbeed *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_fbbf ,_ccee :=color .(*PdfColorCalGray );if !_ccee {_bfg .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_fbbf .Val ();X :=_cbeed .WhitePoint [0]*_fba .Pow (ANorm ,_cbeed .Gamma );Y :=_cbeed .WhitePoint [1]*_fba .Pow (ANorm ,_cbeed .Gamma );Z :=_cbeed .WhitePoint [2]*_fba .Pow (ANorm ,_cbeed .Gamma );_gagd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ffdda :=-0.969256*X +1.875992*Y +0.041556*Z ;_gagda :=0.055648*X +-0.204043*Y +1.057311*Z ;_gagd =_fba .Min (_fba .Max (_gagd ,0),1.0);_ffdda =_fba .Min (_fba .Max (_ffdda ,0),1.0);_gagda =_fba .Min (_fba .Max (_gagda ,0),1.0);return NewPdfColorDeviceRGB (_gagd ,_ffdda ,_gagda ),nil ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_bcbda *XObjectImage )ToImage ()(*Image ,error ){_aceg :=&Image {};if _bcbda .Height ==nil {return nil ,_fe .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_aceg .Height =*_bcbda .Height ;if _bcbda .Width ==nil {return nil ,_fe .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_aceg .Width =*_bcbda .Width ;if _bcbda .BitsPerComponent ==nil {return nil ,_fe .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");};_aceg .BitsPerComponent =*_bcbda .BitsPerComponent ;_aceg .ColorComponents =_bcbda .ColorSpace .GetNumComponents ();_bcbda ._cgdaf .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_eec .MakeInteger (int64 (_aceg .ColorComponents )));_gfbba ,_fbbe :=_eec .DecodeStream (_bcbda ._cgdaf );if _fbbe !=nil {return nil ,_fbbe ;};_aceg .Data =_gfbba ;if _bcbda .Decode !=nil {_abdgda ,_ecaef :=_bcbda .Decode .(*_eec .PdfObjectArray );if !_ecaef {_bfg .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");return nil ,_fe .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_daaga ,_befba :=_abdgda .ToFloat64Array ();if _befba !=nil {return nil ,_befba ;};_aceg ._cbacg =_daaga ;};return _aceg ,nil ;};func (_gcgg *PdfFilespec )getDict ()*_eec .PdfObjectDictionary {if _fagce ,_faed :=_gcgg ._fdecf .(*_eec .PdfIndirectObject );_faed {_cece ,_gdgf :=_fagce .PdfObject .(*_eec .PdfObjectDictionary );if !_gdgf {return nil ;};return _cece ;}else if _aebag ,_dgda :=_gcgg ._fdecf .(*_eec .PdfObjectDictionary );_dgda {return _aebag ;}else {_bfg .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_gcgg ._fdecf );return nil ;};};func (_cafe *PdfWriter )writeString (_cffea string ){if _cafe ._ceagg !=nil {return ;};_begdg ,_eddae :=_cafe ._bccga .WriteString (_cffea );_cafe ._afeba +=int64 (_begdg );_cafe ._ceagg =_eddae ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_ececf *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _ececf ._fadd !=nil {return _ececf ._fadd ,nil ;};if _ececf .Annots ==nil {_ececf ._fadd =[]*PdfAnnotation {};return nil ,nil ;};if _ececf ._dgefg ==nil {_ececf ._fadd =[]*PdfAnnotation {};return nil ,nil ;};_fbbfg ,_dead :=_ececf ._dgefg .loadAnnotations (_ececf .Annots );if _dead !=nil {return nil ,_dead ;};if _fbbfg ==nil {_ececf ._fadd =[]*PdfAnnotation {};};_ececf ._fadd =_fbbfg ;return _ececf ._fadd ,nil ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_dcecc *PdfReader )Decrypt (password []byte )(bool ,error ){_gbeea ,_edcde :=_dcecc ._ggagaa .Decrypt (password );if _edcde !=nil {return false ,_edcde ;};if !_gbeea {return false ,nil ;};_edcde =_dcecc .loadStructure ();if _edcde !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_edcde );return false ,_edcde ;};return true ,nil ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_dgada :=&PdfPageResources {};_dgada ._daab =_eec .MakeDict ();return _dgada ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_ddgde *Outline )ToPdfOutline ()*PdfOutline {_fedd :=NewPdfOutline ();var _abga []*PdfOutlineItem ;var _gbafa int64 ;var _caac *PdfOutlineItem ;for _ ,_cdabaa :=range _ddgde .Entries {_efccg ,_bbdd :=_cdabaa .ToPdfOutlineItem ();_efccg .Parent =&_fedd .PdfOutlineTreeNode ;if _caac !=nil {_caac .Next =&_efccg .PdfOutlineTreeNode ;_efccg .Prev =&_caac .PdfOutlineTreeNode ;};_abga =append (_abga ,_efccg );_gbafa +=_bbdd ;_caac =_efccg ;};_fcebd :=int64 (len (_abga ));_gbafa +=_fcebd ;if _fcebd > 0{_fedd .First =&_abga [0].PdfOutlineTreeNode ;_fedd .Last =&_abga [_fcebd -1].PdfOutlineTreeNode ;_fedd .Count =&_gbafa ;};return _fedd ;};

// SetFlag sets the flag for the field.
func (_eedd *PdfField )SetFlag (flag FieldFlag ){_eedd .Ff =_eec .MakeInteger (int64 (flag ))};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_aead *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_aead .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_aead ._eabc =acroForm ;};func _faedc (_gedc []rune ,_gbgeg map[rune ]int ,_adcef map[rune ]_de .GID )*_eec .PdfObjectArray {_beabc :=&_eec .PdfObjectArray {};for _bgba :=0;_bgba < len (_gedc );{_effc :=_gbgeg [_gedc [_bgba ]];_cbeac :=_bgba ;for _cgcf :=_bgba +1;_cgcf < len (_gedc );_cgcf ++{_agee :=_gbgeg [_gedc [_cgcf ]];if _effc ==_agee {_cbeac =_cgcf ;}else {break ;};};_cdgb :=_adcef [_gedc [_bgba ]];_gbfea :=_adcef [_gedc [_cbeac ]];_beabc .Append (_eec .MakeInteger (int64 (_cdgb )));_beabc .Append (_eec .MakeInteger (int64 (_gbfea )));_beabc .Append (_eec .MakeInteger (int64 (_effc )));_bgba =_cbeac +1;};return _beabc ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _eec .PdfObject ;MK _eec .PdfObject ;A _eec .PdfObject ;AA _eec .PdfObject ;BS _eec .PdfObject ;Parent _eec .PdfObject ;_febe *PdfField ;_dac bool ;};func (_gbd *PdfReader )newPdfAnnotationRedactFromDict (_ggdf *_eec .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_edbd :=PdfAnnotationRedact {};_gbdb ,_daec :=_gbd .newPdfAnnotationMarkupFromDict (_ggdf );if _daec !=nil {return nil ,_daec ;};_edbd .PdfAnnotationMarkup =_gbdb ;_edbd .QuadPoints =_ggdf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_edbd .IC =_ggdf .Get ("\u0049\u0043");_edbd .RO =_ggdf .Get ("\u0052\u004f");_edbd .OverlayText =_ggdf .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_edbd .Repeat =_ggdf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_edbd .DA =_ggdf .Get ("\u0044\u0041");_edbd .Q =_ggdf .Get ("\u0051");return &_edbd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cbdb *PdfAnnotationPolyLine )ToPdfObject ()_eec .PdfObject {_cbdb .PdfAnnotation .ToPdfObject ();_gccb :=_cbdb ._dge ;_cffb :=_gccb .PdfObject .(*_eec .PdfObjectDictionary );_cbdb .PdfAnnotationMarkup .appendToPdfDictionary (_cffb );_cffb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));_cffb .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cbdb .Vertices );_cffb .SetIfNotNil ("\u004c\u0045",_cbdb .LE );_cffb .SetIfNotNil ("\u0042\u0053",_cbdb .BS );_cffb .SetIfNotNil ("\u0049\u0043",_cbdb .IC );_cffb .SetIfNotNil ("\u0042\u0045",_cbdb .BE );_cffb .SetIfNotNil ("\u0049\u0054",_cbdb .IT );_cffb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cbdb .Measure );return _gccb ;};func _bebgbb (_faedf *_eec .PdfObjectDictionary )(*PdfShadingType4 ,error ){_cbcef :=PdfShadingType4 {};_fcebef :=_faedf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _fcebef ==nil {_bfg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_cbfde ,_agfa :=_fcebef .(*_eec .PdfObjectInteger );if !_agfa {_bfg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcebef );return nil ,_eec .ErrTypeError ;};_cbcef .BitsPerCoordinate =_cbfde ;_fcebef =_faedf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fcebef ==nil {_bfg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_cbfde ,_agfa =_fcebef .(*_eec .PdfObjectInteger );if !_agfa {_bfg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fcebef );return nil ,_eec .ErrTypeError ;};_cbcef .BitsPerComponent =_cbfde ;_fcebef =_faedf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _fcebef ==nil {_bfg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_cbfde ,_agfa =_fcebef .(*_eec .PdfObjectInteger );if !_agfa {_bfg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fcebef );return nil ,_eec .ErrTypeError ;};_cbcef .BitsPerComponent =_cbfde ;_fcebef =_faedf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fcebef ==nil {_bfg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_aabbcc ,_agfa :=_fcebef .(*_eec .PdfObjectArray );if !_agfa {_bfg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fcebef );return nil ,_eec .ErrTypeError ;};_cbcef .Decode =_aabbcc ;_fcebef =_faedf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fcebef ==nil {_bfg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_cbcef .Function =[]PdfFunction {};if _bbgae ,_ddbec :=_fcebef .(*_eec .PdfObjectArray );_ddbec {for _ ,_bcagd :=range _bbgae .Elements (){_dbgbc ,_ebbgac :=_bdfbe (_bcagd );if _ebbgac !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebbgac );return nil ,_ebbgac ;};_cbcef .Function =append (_cbcef .Function ,_dbgbc );};}else {_ageb ,_aegdc :=_bdfbe (_fcebef );if _aegdc !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aegdc );return nil ,_aegdc ;};_cbcef .Function =append (_cbcef .Function ,_ageb );};return &_cbcef ,nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _eec .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_eec .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_dfacc ,_cggcd :=encoder .EncodeBytes (img .Data );if _cggcd !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cggcd );return nil ,_cggcd ;};_bbagb :=NewXObjectImage ();_ebfcdb :=img .Width ;_bcgagf :=img .Height ;_bbagb .Width =&_ebfcdb ;_bbagb .Height =&_bcgagf ;_gefce :=img .BitsPerComponent ;_bbagb .BitsPerComponent =&_gefce ;_bbagb .Filter =encoder ;_bbagb .Stream =_dfacc ;if cs ==nil {if img .ColorComponents ==1{_bbagb .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_bbagb .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_bbagb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_fe .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_bbagb .ColorSpace =cs ;};if len (img ._gfbc )!=0{_ebacf :=NewXObjectImage ();_ebacf .Filter =encoder ;_ccgg ,_abaeb :=encoder .EncodeBytes (img ._gfbc );if _abaeb !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_abaeb );return nil ,_abaeb ;};_ebacf .Stream =_ccgg ;_ebacf .BitsPerComponent =_bbagb .BitsPerComponent ;_ebacf .Width =&img .Width ;_ebacf .Height =&img .Height ;_ebacf .ColorSpace =NewPdfColorspaceDeviceGray ();_bbagb .SMask =_ebacf .ToPdfObject ();}else {_bbagb .SMask =xobjIn .SMask ;_bbagb .ImageMask =xobjIn .ImageMask ;if _bbagb .ColorSpace .GetNumComponents ()==1{_deccg (_bbagb );};};return _bbagb ,nil ;};func (_begag *LTV )getCerts (_bdec []*_ga .Certificate )([][]byte ,error ){_agdec :=make ([][]byte ,0,len (_bdec ));for _ ,_gbea :=range _bdec {_agdec =append (_agdec ,_gbea .Raw );};return _agdec ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_afc *PdfActionTrans )ToPdfObject ()_eec .PdfObject {_afc .PdfAction .ToPdfObject ();_dba :=_afc ._aa ;_gcg :=_dba .PdfObject .(*_eec .PdfObjectDictionary );_gcg .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeTrans )));_gcg .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_afc .Trans );return _dba ;};func (_ebd *PdfAnnotation )String ()string {_fdab :="";_adc ,_bcf :=_ebd .ToPdfObject ().(*_eec .PdfIndirectObject );if _bcf {_fdab =_b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ebd ._gda ,_adc .PdfObject .String ());};return _fdab ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_eec .PdfIndirectObject ;SV *_eec .PdfIndirectObject ;};func (_fdbab *Image )samplesAddPadding (_ebcdc []uint32 )[]uint32 {_dccbda :=_fc .BytesPerLine (int (_fdbab .Width ),int (_fdbab .BitsPerComponent ),_fdbab .ColorComponents )*(8/int (_fdbab .BitsPerComponent ));_dfbfcg :=_dccbda *int (_fdbab .Height );if len (_ebcdc )==_dfbfcg {return _ebcdc ;};_agac :=make ([]uint32 ,_dfbfcg );_fagfg :=int (_fdbab .Width )*_fdbab .ColorComponents ;for _ccgbb :=0;_ccgbb < int (_fdbab .Height );_ccgbb ++{_befcf :=_ccgbb *int (_fdbab .Width );_ffdfe :=_ccgbb *_dccbda ;for _bcgb :=0;_bcgb < _fagfg ;_bcgb ++{_agac [_ffdfe +_bcgb ]=_ebcdc [_befcf +_bcgb ];};};return _agac ;};func (_bgab *PdfReader )newPdfActionURIFromDict (_edc *_eec .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_edc .Get ("\u0055\u0052\u0049"),IsMap :_edc .Get ("\u0049\u0073\u004da\u0070")},nil ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_cbfc ,_eddaa :=_cd .Open (filePath );if _eddaa !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_eddaa );return nil ,_eddaa ;};defer _cbfc .Close ();return NewCompositePdfFontFromTTF (_cbfc );};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _eec .PdfObject ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_edbac *PdfPageResources )SetColorspaceByName (keyName _eec .PdfObjectName ,cs PdfColorspace )error {_egeaa ,_efdg :=_edbac .GetColorspaces ();if _efdg !=nil {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_efdg );return _efdg ;};if _egeaa ==nil {_egeaa =NewPdfPageResourcesColorspaces ();_edbac .SetColorSpace (_egeaa );};_egeaa .Set (keyName ,cs );return nil ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _eec .PdfObject ;IsMap _eec .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_gcef *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_gcef .Base .GetNumComponents ();_gegce :=int (vals [0])*N ;if _gegce < 0||(_gegce +N -1)>=len (_gcef ._gbff ){return nil ,_fe .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_eegb :=_gcef ._gbff [_gegce :_gegce +N ];var _edaa []float64 ;for _ ,_ffgd :=range _eegb {_edaa =append (_edaa ,float64 (_ffgd )/255.0);};_dade ,_afag :=_gcef .Base .ColorFromFloats (_edaa );if _afag !=nil {return nil ,_afag ;};return _dade ,nil ;};

// Val returns the value of the color.
func (_cfed *PdfColorCalGray )Val ()float64 {return float64 (*_cfed )};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_ddab _dd .ReadSeeker ;_cgbc *_eec .PdfParser ;_adbd *PdfReader ;Reader *PdfReader ;_gcfc []*PdfPage ;_eabc *PdfAcroForm ;_geag *DSS ;_ebgd _eec .XrefTable ;_fbacf int64 ;_egd int ;_gba []_eec .PdfObject ;_eede map[_eec .PdfObject ]struct{};_decb map[_eec .PdfObject ]int64 ;_eba map[_eec .PdfObject ]struct{};_fcc map[_eec .PdfObject ]struct{};_fcf int64 ;_dag bool ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_aaeb *Image )GetSamples ()[]uint32 {_gacbf :=_efe .ResampleBytes (_aaeb .Data ,int (_aaeb .BitsPerComponent ));if _aaeb .BitsPerComponent < 8{_gacbf =_aaeb .samplesTrimPadding (_gacbf );};_bcae :=int (_aaeb .Width )*int (_aaeb .Height )*_aaeb .ColorComponents ;if len (_gacbf )< _bcae {_bfg .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_gacbf ),_bcae );return _gacbf ;}else if len (_gacbf )> _bcae {_bfg .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_gacbf ),_bcae );_gacbf =_gacbf [:_bcae ];};return _gacbf ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_bedfa *XObjectImage )SetFilter (encoder _eec .StreamEncoder )error {_ggadg :=_bedfa .Stream ;_ffacf ,_fcdg :=_bedfa .Filter .DecodeBytes (_ggadg );if _fcdg !=nil {return _fcdg ;};_bedfa .Filter =encoder ;encoder .UpdateParams (_bedfa .getParamsDict ());_ggadg ,_fcdg =encoder .EncodeBytes (_ffacf );if _fcdg !=nil {return _fcdg ;};_bedfa .Stream =_ggadg ;return nil ;};

// SetOCProperties sets the optional content properties.
func (_gdcda *PdfWriter )SetOCProperties (ocProperties _eec .PdfObject )error {_abdg :=_gdcda ._fbafd ;if ocProperties !=nil {_bfg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");_abdg .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _gdcda .addObjects (ocProperties );};return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cb *PdfAction )GetContainingPdfObject ()_eec .PdfObject {return _cb ._aa };

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_bedbg ,_abcea :=_fdfec (basefont );if _abcea !=nil {return nil ,_abcea ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_bedbg ._acfd =_fcb .NewWinAnsiEncoder ();};return &PdfFont {_baaf :&_bedbg },nil ;};

// ToPdfObject implements interface PdfModel.
func (_eb *PdfActionMovie )ToPdfObject ()_eec .PdfObject {_eb .PdfAction .ToPdfObject ();_edb :=_eb ._aa ;_cge :=_edb .PdfObject .(*_eec .PdfObjectDictionary );_cge .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeMovie )));_cge .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_eb .Annotation );_cge .SetIfNotNil ("\u0054",_eb .T );_cge .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_eb .Operation );return _edb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_fdag *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_eec .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdde ,_bcfb :=_eec .GetNumbersAsFloat (objects );if _bcfb !=nil {return nil ,_bcfb ;};return _fdag .ColorFromFloats (_bdde );};

// AddOutlineTree adds outlines to a PDF file.
func (_cebd *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_cebd ._gbfcg =outlineTree };

// ToInteger convert to an integer format.
func (_cbcdd *PdfColorCalGray )ToInteger (bits int )uint32 {_ccac :=_fba .Pow (2,float64 (bits ))-1;return uint32 (_ccac *_cbcdd .Val ());};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_cdbf :=NewPdfAnnotation ();_gbf :=&PdfAnnotationInk {};_gbf .PdfAnnotation =_cdbf ;_gbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cdbf .SetContext (_gbf );return _gbf ;};

// StdFontName represents name of a standard font.
type StdFontName =_de .StdFontName ;

// ToPdfObject implements interface PdfModel.
func (_edag *PdfAnnotationLine )ToPdfObject ()_eec .PdfObject {_edag .PdfAnnotation .ToPdfObject ();_eded :=_edag ._dge ;_gedb :=_eded .PdfObject .(*_eec .PdfObjectDictionary );_edag .PdfAnnotationMarkup .appendToPdfDictionary (_gedb );_gedb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u004c\u0069\u006e\u0065"));_gedb .SetIfNotNil ("\u004c",_edag .L );_gedb .SetIfNotNil ("\u0042\u0053",_edag .BS );_gedb .SetIfNotNil ("\u004c\u0045",_edag .LE );_gedb .SetIfNotNil ("\u0049\u0043",_edag .IC );_gedb .SetIfNotNil ("\u004c\u004c",_edag .LL );_gedb .SetIfNotNil ("\u004c\u004c\u0045",_edag .LLE );_gedb .SetIfNotNil ("\u0043\u0061\u0070",_edag .Cap );_gedb .SetIfNotNil ("\u0049\u0054",_edag .IT );_gedb .SetIfNotNil ("\u004c\u004c\u004f",_edag .LLO );_gedb .SetIfNotNil ("\u0043\u0050",_edag .CP );_gedb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_edag .Measure );_gedb .SetIfNotNil ("\u0043\u004f",_edag .CO );return _eded ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_fgcac *PdfField )GetContainingPdfObject ()_eec .PdfObject {return _fgcac ._bedf };

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_cdbgf PdfModel ;_ggede _eec .PdfObject ;};

// GetContentStream returns the pattern cell's content stream
func (_faba *PdfTilingPattern )GetContentStream ()([]byte ,error ){_aaegd ,_ ,_abbbb :=_faba .GetContentStreamWithEncoder ();return _aaegd ,_abbbb ;};

// Encoder returns the font's text encoder.
func (_dagdd pdfCIDFontType2 )Encoder ()_fcb .TextEncoder {return _dagdd ._gffa };

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_bfbag *PdfPageResources )GetXObjectByName (keyName _eec .PdfObjectName )(*_eec .PdfObjectStream ,XObjectType ){if _bfbag .XObject ==nil {return nil ,XObjectTypeUndefined ;};_fdaca ,_ggeec :=_eec .TraceToDirectObject (_bfbag .XObject ).(*_eec .PdfObjectDictionary );if !_ggeec {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eec .TraceToDirectObject (_bfbag .XObject ));return nil ,XObjectTypeUndefined ;};if _eagcf :=_fdaca .Get (keyName );_eagcf !=nil {_caddg ,_ddag :=_eec .GetStream (_eagcf );if !_ddag {_bfg .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_eagcf );return nil ,XObjectTypeUndefined ;};_aeead :=_caddg .PdfObjectDictionary ;_caddgc ,_ddag :=_eec .TraceToDirectObject (_aeead .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_eec .PdfObjectName );if !_ddag {_bfg .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_aeead .String ());return nil ,XObjectTypeUndefined ;};if *_caddgc =="\u0049\u006d\u0061g\u0065"{return _caddg ,XObjectTypeImage ;}else if *_caddgc =="\u0046\u006f\u0072\u006d"{return _caddg ,XObjectTypeForm ;}else if *_caddgc =="\u0050\u0053"{return _caddg ,XObjectTypePS ;}else {_bfg .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_caddgc );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_gbcfa *PdfReader )PageFromIndirectObject (ind *_eec .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_gbcfa .PageList )!=len (_gbcfa ._bcaa ){return nil ,0,_fe .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};for _cebecf ,_bffbe :=range _gbcfa ._bcaa {if _bffbe ==ind {return _gbcfa .PageList [_cebecf ],_cebecf +1,nil ;};};return nil ,0,_fe .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_ageda *PdfFontDescriptor )ToPdfObject ()_eec .PdfObject {_eebcb :=_eec .MakeDict ();if _ageda ._eeedb ==nil {_ageda ._eeedb =&_eec .PdfIndirectObject {};};_ageda ._eeedb .PdfObject =_eebcb ;_eebcb .Set ("\u0054\u0079\u0070\u0065",_eec .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));if _ageda .FontName !=nil {_eebcb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ageda .FontName );};if _ageda .FontFamily !=nil {_eebcb .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_ageda .FontFamily );};if _ageda .FontStretch !=nil {_eebcb .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_ageda .FontStretch );};if _ageda .FontWeight !=nil {_eebcb .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_ageda .FontWeight );};if _ageda .Flags !=nil {_eebcb .Set ("\u0046\u006c\u0061g\u0073",_ageda .Flags );};if _ageda .FontBBox !=nil {_eebcb .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ageda .FontBBox );};if _ageda .ItalicAngle !=nil {_eebcb .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_ageda .ItalicAngle );};if _ageda .Ascent !=nil {_eebcb .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_ageda .Ascent );};if _ageda .Descent !=nil {_eebcb .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_ageda .Descent );};if _ageda .Leading !=nil {_eebcb .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_ageda .Leading );};if _ageda .CapHeight !=nil {_eebcb .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_ageda .CapHeight );};if _ageda .XHeight !=nil {_eebcb .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_ageda .XHeight );};if _ageda .StemV !=nil {_eebcb .Set ("\u0053\u0074\u0065m\u0056",_ageda .StemV );};if _ageda .StemH !=nil {_eebcb .Set ("\u0053\u0074\u0065m\u0048",_ageda .StemH );};if _ageda .AvgWidth !=nil {_eebcb .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_ageda .AvgWidth );};if _ageda .MaxWidth !=nil {_eebcb .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_ageda .MaxWidth );};if _ageda .MissingWidth !=nil {_eebcb .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_ageda .MissingWidth );};if _ageda .FontFile !=nil {_eebcb .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_ageda .FontFile );};if _ageda .FontFile2 !=nil {_eebcb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_ageda .FontFile2 );};if _ageda .FontFile3 !=nil {_eebcb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_ageda .FontFile3 );};if _ageda .CharSet !=nil {_eebcb .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_ageda .CharSet );};if _ageda .Style !=nil {_eebcb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ageda .FontName );};if _ageda .Lang !=nil {_eebcb .Set ("\u004c\u0061\u006e\u0067",_ageda .Lang );};if _ageda .FD !=nil {_eebcb .Set ("\u0046\u0044",_ageda .FD );};if _ageda .CIDSet !=nil {_eebcb .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_ageda .CIDSet );};return _ageda ._eeedb ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_agg :=NewPdfAnnotation ();_fde :=&PdfAnnotationRedact {};_fde .PdfAnnotation =_agg ;_fde .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_agg .SetContext (_fde );return _fde ;};func (_edcf *PdfReader )newPdfAnnotationWatermarkFromDict (_cbb *_eec .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_bfcd :=PdfAnnotationWatermark {};_bfcd .FixedPrint =_cbb .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_bfcd ,nil ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_ffgab *PdfPageResources )GetXObjectFormByName (keyName _eec .PdfObjectName )(*XObjectForm ,error ){_dffc ,_dafgd :=_ffgab .GetXObjectByName (keyName );if _dffc ==nil {return nil ,nil ;};if _dafgd !=XObjectTypeForm {return nil ,_fe .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");};_ecbca ,_bgeaf :=NewXObjectFormFromStream (_dffc );if _bgeaf !=nil {return nil ,_bgeaf ;};return _ecbca ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_cega *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _cega .UnderlyingCS ==nil {return nil ,_fe .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");};return _cega .UnderlyingCS .ColorFromFloats (vals );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_bacec *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aede :=vals [0];if _aede < 0.0||_aede > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgab :=vals [1];if _fgab < 0.0||_fgab > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfadf :=vals [2];if _cfadf < 0.0||_cfadf > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdcb :=NewPdfColorDeviceRGB (_aede ,_fgab ,_cfadf );return _gdcb ,nil ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_gbdag *PdfReader )CheckAccessRights (password []byte )(bool ,_bfb .Permissions ,error ){return _gbdag ._ggagaa .CheckAccessRights (password );};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_gbbf *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gbbf .AlternateSpace ==nil {return nil ,_fe .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};return _gbbf .AlternateSpace .ColorToRGB (color );};func (_babga *PdfPattern )getDict ()*_eec .PdfObjectDictionary {if _eadg ,_ebfa :=_babga ._ggede .(*_eec .PdfIndirectObject );_ebfa {_cdbdc ,_bdgc :=_eadg .PdfObject .(*_eec .PdfObjectDictionary );if !_bdgc {return nil ;};return _cdbdc ;}else if _bfcdd ,_fgdff :=_babga ._ggede .(*_eec .PdfObjectStream );_fgdff {return _bfcdd .PdfObjectDictionary ;}else {_bfg .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_babga ._ggede );return nil ;};};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _eec .PdfObject )(PdfColorspace ,error ){var _daba *_eec .PdfIndirectObject ;var _cgac *_eec .PdfObjectName ;var _cgbcae *_eec .PdfObjectArray ;if _edgb ,_dga :=obj .(*_eec .PdfIndirectObject );_dga {_daba =_edgb ;};obj =_eec .TraceToDirectObject (obj );switch _ggbd :=obj .(type ){case *_eec .PdfObjectArray :_cgbcae =_ggbd ;case *_eec .PdfObjectName :_cgac =_ggbd ;};if _cgac !=nil {switch *_cgac {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_bfg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_cgac );return nil ,_eebdf ;};};if _cgbcae !=nil &&_cgbcae .Len ()> 0{var _cbda _eec .PdfObject =_daba ;if _daba ==nil {_cbda =_cgbcae ;};if _gcgcd ,_gaeg :=_eec .GetName (_cgbcae .Get (0));_gaeg {switch _gcgcd .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _cgbcae .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _cgbcae .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _cgbcae .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _fbada (_cbda );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _caff (_cbda );case "\u004c\u0061\u0062":return _fdee (_cbda );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _dbabd (_cbda );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _egfc (_cbda );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _afgbg (_cbda );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _caded (_cbda );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _bbfg (_cbda );default:_bfg .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_gcgcd );};};};_bfg .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());return nil ,ErrTypeCheck ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_efff FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_efff .Mask ()&^fl .Mask ())};

// Encrypt encrypts the output file with a specified user/owner password.
func (_gfgce *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_dfgdgf :=RC4_128bit ;if options !=nil {_dfgdgf =options .Algorithm ;};_bcbbae :=_bfb .PermOwner ;if options !=nil {_bcbbae =options .Permissions ;};var _feeaa _ddd .Filter ;switch _dfgdgf {case RC4_128bit :_feeaa =_ddd .NewFilterV2 (16);case AES_128bit :_feeaa =_ddd .NewFilterAESV2 ();case AES_256bit :_feeaa =_ddd .NewFilterAESV3 ();default:return _b .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );};_edabd ,_cddd ,_cecec :=_eec .PdfCryptNewEncrypt (_feeaa ,userPass ,ownerPass ,_bcbbae );if _cecec !=nil {return _cecec ;};_gfgce ._fecff =_edabd ;if _cddd .Major !=0{_gfgce .SetVersion (_cddd .Major ,_cddd .Minor );};_gfgce ._affbd =_cddd .Encrypt ;_gfgce ._abbee =_eec .MakeArray (_eec .MakeHexString (_cddd .ID0 ),_eec .MakeHexString (_cddd .ID1 ));_cbebe :=_eec .MakeIndirectObject (_cddd .Encrypt );_gfgce ._bcacg =_cbebe ;_gfgce .addObject (_cbebe );return nil ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_eebcc :=NewPdfAnnotation ();_dae :=&PdfAnnotationSound {};_dae .PdfAnnotation =_eebcc ;_dae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eebcc .SetContext (_dae );return _dae ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_afgc *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_eec .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_decg ,_egga :=_eec .GetNumbersAsFloat (objects );if _egga !=nil {return nil ,_egga ;};return _afgc .ColorFromFloats (_decg );};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_abeab *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _abeab .Alternate ==nil {_bfg .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _abeab .N ==1{_bfg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_aacea :=NewPdfColorspaceDeviceGray ();return _aacea .ImageToRGB (img );}else if _abeab .N ==3{_bfg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return img ,nil ;}else if _abeab .N ==4{_bfg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_bfdad :=NewPdfColorspaceDeviceCMYK ();return _bfdad .ImageToRGB (img );}else {return img ,_fe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_bfg .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_abeab );_ebedb ,_eagd :=_abeab .Alternate .ImageToRGB (img );_bfg .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_bfg .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_ebedb );return _ebedb ,_eagd ;};func (_ggad *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _ggad ._cddbf };

// GetNumComponents returns the number of color components (1 for CalGray).
func (_ebdf *PdfColorCalGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_gdbf *PdfAnnotationTrapNet )ToPdfObject ()_eec .PdfObject {_gdbf .PdfAnnotation .ToPdfObject ();_dcceb :=_gdbf ._dge ;_fddg :=_dcceb .PdfObject .(*_eec .PdfObjectDictionary );_fddg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));return _dcceb ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_bbfgb *PdfFont )CharcodesToStrings (charcodes []_fcb .CharCode )([]string ,int ,int ){_ddac :=_bbfgb .baseFields ();_fdfda :=make ([]string ,0,len (charcodes ));_cebcd :=0;_beff :=_bbfgb .Encoder ();if _beff !=nil {switch _fedgb :=_beff .(type ){case _fcb .SimpleEncoder :_cbbag :=_fedgb .BaseName ();if _ ,_aacef :=_fbadd [_cbbag ];_aacef {for _ ,_ebafb :=range charcodes {if _gcab ,_fddb :=_beff .CharcodeToRune (_ebafb );_fddb {_fdfda =append (_fdfda ,string (_gcab ));}else {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_ebafb ,charcodes ,_ddac .isCIDFont (),_bbfgb ,_beff );_cebcd ++;_fdfda =append (_fdfda ,_cf .MissingCodeString );};};return _fdfda ,len (_fdfda ),_cebcd ;};};};for _ ,_gfgf :=range charcodes {if _ddac ._ecab !=nil {if _cccb ,_aegfc :=_ddac ._ecab .CharcodeToUnicode (_cf .CharCode (_gfgf ));_aegfc {_fdfda =append (_fdfda ,_cccb );continue ;};};if _beff !=nil {if _gcefd ,_dcbb :=_beff .CharcodeToRune (_gfgf );_dcbb {_fdfda =append (_fdfda ,string (_gcefd ));continue ;};};_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_gfgf ,charcodes ,_ddac .isCIDFont (),_bbfgb ,_beff );_cebcd ++;_fdfda =append (_fdfda ,_cf .MissingCodeString );};if _cebcd !=0{_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_cebcd ,_bbfgb );};return _fdfda ,len (_fdfda ),_cebcd ;};func _bcba (_dcgbg *_eec .PdfObjectStream )(*PdfFunctionType4 ,error ){_cgea :=&PdfFunctionType4 {};_cgea ._fccbd =_dcgbg ;_cfgd :=_dcgbg .PdfObjectDictionary ;_badfc ,_dafe :=_eec .TraceToDirectObject (_cfgd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_eec .PdfObjectArray );if !_dafe {_bfg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _badfc .Len ()%2!=0{_bfg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gaefa ,_ggbcfg :=_badfc .ToFloat64Array ();if _ggbcfg !=nil {return nil ,_ggbcfg ;};_cgea .Domain =_gaefa ;_badfc ,_dafe =_eec .TraceToDirectObject (_cfgd .Get ("\u0052\u0061\u006eg\u0065")).(*_eec .PdfObjectArray );if _dafe {if _badfc .Len ()< 0||_badfc .Len ()%2!=0{return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fgfaf ,_dfce :=_badfc .ToFloat64Array ();if _dfce !=nil {return nil ,_dfce ;};_cgea .Range =_fgfaf ;};_fdce ,_ggbcfg :=_eec .DecodeStream (_dcgbg );if _ggbcfg !=nil {return nil ,_ggbcfg ;};_cgea ._ddebb =_fdce ;_bfbdac :=_ca .NewPSParser (_fdce );_agcdde ,_ggbcfg :=_bfbdac .Parse ();if _ggbcfg !=nil {return nil ,_ggbcfg ;};_cgea .Program =_agcdde ;return _cgea ,nil ;};func _ebag (_eedca *_eec .PdfObjectDictionary )(*PdfShadingType5 ,error ){_cgfee :=PdfShadingType5 {};_ffef :=_eedca .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ffef ==nil {_bfg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_edcfd ,_bgcde :=_ffef .(*_eec .PdfObjectInteger );if !_bgcde {_bfg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ffef );return nil ,_eec .ErrTypeError ;};_cgfee .BitsPerCoordinate =_edcfd ;_ffef =_eedca .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ffef ==nil {_bfg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_edcfd ,_bgcde =_ffef .(*_eec .PdfObjectInteger );if !_bgcde {_bfg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ffef );return nil ,_eec .ErrTypeError ;};_cgfee .BitsPerComponent =_edcfd ;_ffef =_eedca .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _ffef ==nil {_bfg .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");return nil ,ErrRequiredAttributeMissing ;};_edcfd ,_bgcde =_ffef .(*_eec .PdfObjectInteger );if !_bgcde {_bfg .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ffef );return nil ,_eec .ErrTypeError ;};_cgfee .VerticesPerRow =_edcfd ;_ffef =_eedca .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ffef ==nil {_bfg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_egbc ,_bgcde :=_ffef .(*_eec .PdfObjectArray );if !_bgcde {_bfg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ffef );return nil ,_eec .ErrTypeError ;};_cgfee .Decode =_egbc ;if _dbebb :=_eedca .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dbebb !=nil {_cgfee .Function =[]PdfFunction {};if _cbdce ,_gefcd :=_dbebb .(*_eec .PdfObjectArray );_gefcd {for _ ,_afgcb :=range _cbdce .Elements (){_cafga ,_gddfc :=_bdfbe (_afgcb );if _gddfc !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gddfc );return nil ,_gddfc ;};_cgfee .Function =append (_cgfee .Function ,_cafga );};}else {_begdd ,_cgcgb :=_bdfbe (_dbebb );if _cgcgb !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cgcgb );return nil ,_cgcgb ;};_cgfee .Function =append (_cgfee .Function ,_begdd );};};return &_cgfee ,nil ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _eec .PdfObject ;Name _eec .PdfObject ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_efcdd byte )byte ;

// ToPdfObject implements interface PdfModel.
func (_cade *PdfAnnotationText )ToPdfObject ()_eec .PdfObject {_cade .PdfAnnotation .ToPdfObject ();_eddd :=_cade ._dge ;_daaf :=_eddd .PdfObject .(*_eec .PdfObjectDictionary );if _cade .PdfAnnotationMarkup !=nil {_cade .PdfAnnotationMarkup .appendToPdfDictionary (_daaf );};_daaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0054\u0065\u0078\u0074"));_daaf .SetIfNotNil ("\u004f\u0070\u0065\u006e",_cade .Open );_daaf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cade .Name );_daaf .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cade .State );_daaf .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_cade .StateModel );return _eddd ;};func _bgfbd ()string {_aafbed .Lock ();defer _aafbed .Unlock ();return _bbdfb };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gadaa *PdfShadingType2 )ToPdfObject ()_eec .PdfObject {_gadaa .PdfShading .ToPdfObject ();_ddbedg ,_fcfef :=_gadaa .getShadingDict ();if _fcfef !=nil {_bfg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ddbedg ==nil {_bfg .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _gadaa .Coords !=nil {_ddbedg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gadaa .Coords );};if _gadaa .Domain !=nil {_ddbedg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gadaa .Domain );};if _gadaa .Function !=nil {if len (_gadaa .Function )==1{_ddbedg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gadaa .Function [0].ToPdfObject ());}else {_cageb :=_eec .MakeArray ();for _ ,_ccaca :=range _gadaa .Function {_cageb .Append (_ccaca .ToPdfObject ());};_ddbedg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cageb );};};if _gadaa .Extend !=nil {_ddbedg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gadaa .Extend );};return _gadaa ._fbeg ;};

// ToPdfObject implements interface PdfModel.
func (_cfbg *PdfActionRendition )ToPdfObject ()_eec .PdfObject {_cfbg .PdfAction .ToPdfObject ();_gcb :=_cfbg ._aa ;_gfgc :=_gcb .PdfObject .(*_eec .PdfObjectDictionary );_gfgc .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeRendition )));_gfgc .SetIfNotNil ("\u0052",_cfbg .R );_gfgc .SetIfNotNil ("\u0041\u004e",_cfbg .AN );_gfgc .SetIfNotNil ("\u004f\u0050",_cfbg .OP );_gfgc .SetIfNotNil ("\u004a\u0053",_cfbg .JS );return _gcb ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_dggce *LTV )Enable (sig *PdfSignature ,extraCerts []*_ga .Certificate )error {if _ffeg :=_dggce .validateSig (sig );_ffeg !=nil {return _ffeg ;};_efeb ,_eaaf :=_dggce .generateVRIKey (sig );if _eaaf !=nil {return _eaaf ;};if _ ,_gbaaa :=_dggce ._ceeega .VRI [_efeb ];_gbaaa &&_dggce .SkipExisting {return nil ;};_abdda ,_eaaf :=sig .GetCerts ();if _eaaf !=nil {return _eaaf ;};return _dggce .enable (_abdda ,extraCerts ,_efeb );};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _eec .PdfObject ;T3DV _eec .PdfObject ;T3DA _eec .PdfObject ;T3DI _eec .PdfObject ;T3DB _eec .PdfObject ;};

// String returns a string representation of what flags are set.
func (_cggae FieldFlag )String ()string {_dfdbf :="";if _cggae ==FieldFlagClear {_dfdbf ="\u0043\u006c\u0065a\u0072";return _dfdbf ;};if _cggae &FieldFlagReadOnly > 0{_dfdbf +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cggae &FieldFlagRequired > 0{_dfdbf +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cggae &FieldFlagNoExport > 0{_dfdbf +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _cggae &FieldFlagNoToggleToOff > 0{_dfdbf +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _cggae &FieldFlagRadio > 0{_dfdbf +="\u007c\u0052\u0061\u0064\u0069\u006f";};if _cggae &FieldFlagPushbutton > 0{_dfdbf +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _cggae &FieldFlagRadiosInUnision > 0{_dfdbf +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _cggae &FieldFlagMultiline > 0{_dfdbf +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _cggae &FieldFlagPassword > 0{_dfdbf +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _cggae &FieldFlagFileSelect > 0{_dfdbf +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _cggae &FieldFlagDoNotScroll > 0{_dfdbf +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _cggae &FieldFlagComb > 0{_dfdbf +="\u007c\u0043\u006fm\u0062";};if _cggae &FieldFlagRichText > 0{_dfdbf +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _cggae &FieldFlagDoNotSpellCheck > 0{_dfdbf +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _cggae &FieldFlagCombo > 0{_dfdbf +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _cggae &FieldFlagEdit > 0{_dfdbf +="\u007c\u0045\u0064i\u0074";};if _cggae &FieldFlagSort > 0{_dfdbf +="\u007c\u0053\u006fr\u0074";};if _cggae &FieldFlagMultiSelect > 0{_dfdbf +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _cggae &FieldFlagCommitOnSelChange > 0{_dfdbf +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _beb .Trim (_dfdbf ,"\u007c");};

// ToPdfObject implements interface PdfModel.
func (_eaf *PdfAnnotationSquiggly )ToPdfObject ()_eec .PdfObject {_eaf .PdfAnnotation .ToPdfObject ();_ccge :=_eaf ._dge ;_gafdd :=_ccge .PdfObject .(*_eec .PdfObjectDictionary );_eaf .PdfAnnotationMarkup .appendToPdfDictionary (_gafdd );_gafdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));_gafdd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_eaf .QuadPoints );return _ccge ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_fbfe *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_eec .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcdf ,_aged :=_eec .GetNumbersAsFloat (objects );if _aged !=nil {return nil ,_aged ;};return _fbfe .ColorFromFloats (_bcdf );};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bebef *PdfWriter )SetPageLabels (pageLabels _eec .PdfObject )error {if pageLabels ==nil {return nil ;};_bfg .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");_bebef ._fbafd .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _bebef .addObjects (pageLabels );};

// ToPdfObject returns a PDF object representation of the outline.
func (_eadd *Outline )ToPdfObject ()_eec .PdfObject {return _eadd .ToPdfOutline ().ToPdfObject ()};func (_feccfg *pdfFontType0 )subsetRegistered ()error {_aggf ,_babd :=_feccfg .DescendantFont ._baaf .(*pdfCIDFontType2 );if !_babd {_bfg .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_feccfg .DescendantFont );return nil ;};if _aggf ==nil {return nil ;};if _aggf ._cddbf ==nil {_bfg .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _feccfg ._edff ==nil {_bfg .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");return nil ;};_beca ,_babd :=_eec .GetStream (_aggf ._cddbf .FontFile2 );if !_babd {_bfg .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");return _fe .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_eacd ,_fbea :=_eec .DecodeStream (_beca );if _fbea !=nil {_bfg .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fbea );return _fbea ;};_geage ,_fbea :=_df .Parse (_gf .NewReader (_eacd ));if _fbea !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_beca .Stream ));return _fbea ;};var _bccg []rune ;var _geddg *_df .Font ;switch _bgeea :=_feccfg ._edff .(type ){case *_fcb .TrueTypeFontEncoder :_bccg =_bgeea .RegisteredRunes ();_geddg ,_fbea =_geage .SubsetKeepRunes (_bccg );if _fbea !=nil {_bfg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbea );return _fbea ;};_bgeea .SubsetRegistered ();case *_fcb .IdentityEncoder :_bccg =_bgeea .RegisteredRunes ();_bfege :=make ([]_df .GlyphIndex ,len (_bccg ));for _ccgbe ,_aabdf :=range _bccg {_bfege [_ccgbe ]=_df .GlyphIndex (_aabdf );};_geddg ,_fbea =_geage .SubsetKeepIndices (_bfege );if _fbea !=nil {_bfg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbea );return _fbea ;};case _fcb .SimpleEncoder :_dfbed :=_bgeea .Charcodes ();for _ ,_gfdbe :=range _dfbed {_cafd ,_egeab :=_bgeea .CharcodeToRune (_gfdbe );if !_egeab {_bfg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_gfdbe );continue ;};_bccg =append (_bccg ,_cafd );};default:return _b .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_feccfg ._edff );};var _gfde _gf .Buffer ;_fbea =_geddg .Write (&_gfde );if _fbea !=nil {_bfg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbea );return _fbea ;};if _feccfg ._ecab !=nil {_ggebd :=make (map[_cf .CharCode ]rune ,len (_bccg ));for _ ,_gbgfg :=range _bccg {_fgdg ,_abdc :=_feccfg ._edff .RuneToCharcode (_gbgfg );if !_abdc {continue ;};_ggebd [_cf .CharCode (_fgdg )]=_gbgfg ;};_feccfg ._ecab =_cf .NewToUnicodeCMap (_ggebd );};_beca ,_fbea =_eec .MakeStream (_gfde .Bytes (),_eec .NewFlateEncoder ());if _fbea !=nil {_bfg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbea );return _fbea ;};_beca .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_eec .MakeInteger (int64 (_gfde .Len ())));if _eaaga ,_ffac :=_eec .GetStream (_aggf ._cddbf .FontFile2 );_ffac {*_eaaga =*_beca ;}else {_aggf ._cddbf .FontFile2 =_beca ;};_beabf :=_acaf ();if len (_feccfg ._cefc )> 0{_feccfg ._cefc =_cdaba (_feccfg ._cefc ,_beabf );};if len (_aggf ._cefc )> 0{_aggf ._cefc =_cdaba (_aggf ._cefc ,_beabf );};if len (_feccfg ._bade )> 0{_feccfg ._bade =_cdaba (_feccfg ._bade ,_beabf );};if _aggf ._cddbf !=nil {_afgfa ,_aagd :=_eec .GetName (_aggf ._cddbf .FontName );if _aagd &&len (_afgfa .String ())> 0{_bbdb :=_cdaba (_afgfa .String (),_beabf );_aggf ._cddbf .FontName =_eec .MakeName (_bbdb );};};return nil ;};type fontFile struct{_ggceb string ;_dbgb string ;_fdgg _fcb .SimpleEncoder ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_ffdde *pdfCIDFontType2 )ToPdfObject ()_eec .PdfObject {if _ffdde ._bgabg ==nil {_ffdde ._bgabg =&_eec .PdfIndirectObject {};};_degb :=_ffdde .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_ffdde ._bgabg .PdfObject =_degb ;if _ffdde .CIDSystemInfo !=nil {_degb .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_ffdde .CIDSystemInfo );};if _ffdde .DW !=nil {_degb .Set ("\u0044\u0057",_ffdde .DW );};if _ffdde .DW2 !=nil {_degb .Set ("\u0044\u0057\u0032",_ffdde .DW2 );};if _ffdde .W !=nil {_degb .Set ("\u0057",_ffdde .W );};if _ffdde .W2 !=nil {_degb .Set ("\u0057\u0032",_ffdde .W2 );};if _ffdde .CIDToGIDMap !=nil {_degb .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_ffdde .CIDToGIDMap );};return _ffdde ._bgabg ;};

// GetOutlineTree returns the outline tree.
func (_dfefg *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _dfefg ._dcdcg };

// IsColored specifies if the pattern is colored.
func (_gcfca *PdfTilingPattern )IsColored ()bool {if _gcfca .PaintType !=nil &&*_gcfca .PaintType ==1{return true ;};return false ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;func (_dgba *DSS )addCRLs (_fefd [][]byte )([]*_eec .PdfObjectStream ,error ){return _dgba .add (&_dgba .CRLs ,_dgba ._gebd ,_fefd );};

// Y returns the value of the yellow component of the color.
func (_gdacf *PdfColorDeviceCMYK )Y ()float64 {return _gdacf [2]};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_eec .PdfObjectInteger ;BitsPerComponent *_eec .PdfObjectInteger ;BitsPerFlag *_eec .PdfObjectInteger ;Decode *_eec .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_ffe :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");};_ffe .N =N ;return _ffe ,nil ;};func (_cafa *DSS )generateHashMaps ()error {_ddfd ,_egce :=_cafa .generateHashMap (_cafa .Certs );if _egce !=nil {return _egce ;};_ffcc ,_egce :=_cafa .generateHashMap (_cafa .OCSPs );if _egce !=nil {return _egce ;};_ggeb ,_egce :=_cafa .generateHashMap (_cafa .CRLs );if _egce !=nil {return _egce ;};_cafa ._bgeb =_ddfd ;_cafa ._ebca =_ffcc ;_cafa ._gebd =_ggeb ;return nil ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};func (_gebc *pdfFontSimple )getFontEncoding ()(_cbega string ,_ggfgg map[_fcb .CharCode ]_fcb .GlyphName ,_babc error ){_cbega ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _fabfd ,_cecda :=_cgfdg [_gebc ._cefc ];_cecda {_cbega =_fabfd ;}else if _gebc .fontFlags ()&_gfbg !=0{for _cegfa ,_dbafd :=range _cgfdg {if _beb .Contains (_gebc ._cefc ,_cegfa ){_cbega =_dbafd ;break ;};};};if _gebc .Encoding ==nil {return _cbega ,nil ,nil ;};switch _dggd :=_gebc .Encoding .(type ){case *_eec .PdfObjectName :return string (*_dggd ),nil ,nil ;case *_eec .PdfObjectDictionary :_gcbd ,_fcfce :=_eec .GetName (_dggd .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _fcfce {_cbega =_gcbd .String ();};if _begg :=_dggd .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_begg !=nil {_fdbd ,_dgdb :=_eec .GetArray (_begg );if !_dgdb {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_dggd ,_dggd .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));return "",nil ,_eec .ErrTypeError ;};_ggfgg ,_babc =_fcb .FromFontDifferences (_fdbd );};return _cbega ,_ggfgg ,_babc ;default:_bfg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_gebc .Encoding ,_gebc .Encoding );return "",nil ,_eec .ErrTypeError ;};};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_cccdf *PdfOutlineItem )ToPdfObject ()_eec .PdfObject {_geddc :=_cccdf ._bebd ;_efeag :=_geddc .PdfObject .(*_eec .PdfObjectDictionary );_efeag .Set ("\u0054\u0069\u0074l\u0065",_cccdf .Title );if _cccdf .A !=nil {_efeag .Set ("\u0041",_cccdf .A );};if _cddf :=_efeag .Get ("\u0053\u0045");_cddf !=nil {_efeag .Remove ("\u0053\u0045");};if _cccdf .C !=nil {_efeag .Set ("\u0043",_cccdf .C );};if _cccdf .Dest !=nil {_efeag .Set ("\u0044\u0065\u0073\u0074",_cccdf .Dest );};if _cccdf .F !=nil {_efeag .Set ("\u0046",_cccdf .F );};if _cccdf .Count !=nil {_efeag .Set ("\u0043\u006f\u0075n\u0074",_eec .MakeInteger (*_cccdf .Count ));};if _cccdf .Next !=nil {_efeag .Set ("\u004e\u0065\u0078\u0074",_cccdf .Next .ToPdfObject ());};if _cccdf .First !=nil {_efeag .Set ("\u0046\u0069\u0072s\u0074",_cccdf .First .ToPdfObject ());};if _cccdf .Prev !=nil {_efeag .Set ("\u0050\u0072\u0065\u0076",_cccdf .Prev .GetContext ().GetContainingPdfObject ());};if _cccdf .Last !=nil {_efeag .Set ("\u004c\u0061\u0073\u0074",_cccdf .Last .GetContext ().GetContainingPdfObject ());};if _cccdf .Parent !=nil {_efeag .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cccdf .Parent .GetContext ().GetContainingPdfObject ());};return _geddc ;};func (_dbdde *pdfFontSimple )updateStandard14Font (){_fgagd ,_gfeca :=_dbdde .Encoder ().(_fcb .SimpleEncoder );if !_gfeca {_bfg .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_dbdde .Encoder (),_dbdde );return ;};_daga :=_fgagd .Charcodes ();_dbdde ._fgabb =make (map[_fcb .CharCode ]float64 ,len (_daga ));for _ ,_eabdd :=range _daga {_ebcaa ,_ :=_fgagd .CharcodeToRune (_eabdd );_dbdde ._fgabb [_eabdd ]=_dbdde ._fcage [_ebcaa ].Wx ;};};

// ToPdfObject implements interface PdfModel.
func (_bgge *PdfActionGoTo3DView )ToPdfObject ()_eec .PdfObject {_bgge .PdfAction .ToPdfObject ();_becf :=_bgge ._aa ;_cfa :=_becf .PdfObject .(*_eec .PdfObjectDictionary );_cfa .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeGoTo3DView )));_cfa .SetIfNotNil ("\u0054\u0041",_bgge .TA );_cfa .SetIfNotNil ("\u0056",_bgge .V );return _becf ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// Initialize initializes the PdfSignature.
func (_bcab *PdfSignature )Initialize ()error {if _bcab .Handler ==nil {return _fe .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};return _bcab .Handler .InitSignature (_bcab );};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_adcd :=&PdfAppender {_ddab :reader ._fgdab ,Reader :reader ,_cgbc :reader ._ggagaa ,_fcc :reader ._beae };_dfbc ,_affa :=_adcd ._ddab .Seek (0,_dd .SeekEnd );if _affa !=nil {return nil ,_affa ;};_adcd ._fcf =_dfbc ;if _ ,_affa =_adcd ._ddab .Seek (0,_dd .SeekStart );_affa !=nil {return nil ,_affa ;};_adcd ._adbd ,_affa =NewPdfReader (_adcd ._ddab );if _affa !=nil {return nil ,_affa ;};for _ ,_afdd :=range _adcd .Reader .GetObjectNums (){if _adcd ._egd < _afdd {_adcd ._egd =_afdd ;};};_adcd ._ebgd =_adcd ._cgbc .GetXrefTable ();_adcd ._fbacf =_adcd ._cgbc .GetXrefOffset ();_adcd ._gcfc =append (_adcd ._gcfc ,_adcd ._adbd .PageList ...);_adcd ._eede =make (map[_eec .PdfObject ]struct{});_adcd ._decb =make (map[_eec .PdfObject ]int64 );_adcd ._eba =make (map[_eec .PdfObject ]struct{});_adcd ._eabc =_adcd ._adbd .AcroForm ;_adcd ._geag =_adcd ._adbd .DSS ;return _adcd ,nil ;};func (_ccd *PdfReader )newPdfActionSoundFromDict (_eebc *_eec .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_eebc .Get ("\u0053\u006f\u0075n\u0064"),Volume :_eebc .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_eebc .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_eebc .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_eebc .Get ("\u004d\u0069\u0078")},nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_ggbe *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// ToPdfObject implements interface PdfModel.
func (_dacbg *PdfAnnotationRedact )ToPdfObject ()_eec .PdfObject {_dacbg .PdfAnnotation .ToPdfObject ();_dab :=_dacbg ._dge ;_gccg :=_dab .PdfObject .(*_eec .PdfObjectDictionary );_dacbg .PdfAnnotationMarkup .appendToPdfDictionary (_gccg );_gccg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));_gccg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dacbg .QuadPoints );_gccg .SetIfNotNil ("\u0049\u0043",_dacbg .IC );_gccg .SetIfNotNil ("\u0052\u004f",_dacbg .RO );_gccg .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_dacbg .OverlayText );_gccg .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_dacbg .Repeat );_gccg .SetIfNotNil ("\u0044\u0041",_dacbg .DA );_gccg .SetIfNotNil ("\u0051",_dacbg .Q );return _dab ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_bfgd []byte ;_fedae []uint32 ;_deae *_eec .PdfObjectStream ;};func _degfg (_cffca _de .StdFont )pdfFontSimple {_ffgdd :=_cffca .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_bgga :"\u0054\u0079\u0070e\u0031",_cefc :_cffca .Name ()},_fcage :_cffca .GetMetricsTable (),_bfggg :&PdfFontDescriptor {FontName :_eec .MakeName (string (_ffgdd .Name )),FontFamily :_eec .MakeName (_ffgdd .Family ),FontWeight :_eec .MakeFloat (float64 (_ffgdd .Weight )),Flags :_eec .MakeInteger (int64 (_ffgdd .Flags )),FontBBox :_eec .MakeArrayFromFloats (_ffgdd .BBox [:]),ItalicAngle :_eec .MakeFloat (_ffgdd .ItalicAngle ),Ascent :_eec .MakeFloat (_ffgdd .Ascent ),Descent :_eec .MakeFloat (_ffgdd .Descent ),CapHeight :_eec .MakeFloat (_ffgdd .CapHeight ),XHeight :_eec .MakeFloat (_ffgdd .XHeight ),StemV :_eec .MakeFloat (_ffgdd .StemV ),StemH :_eec .MakeFloat (_ffgdd .StemH )},_gdbead :_cffca .Encoder ()};};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};func (_edce *PdfReader )newPdfAnnotationLinkFromDict (_eead *_eec .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_eedcd :=PdfAnnotationLink {};_eedcd .A =_eead .Get ("\u0041");_eedcd .Dest =_eead .Get ("\u0044\u0065\u0073\u0074");_eedcd .H =_eead .Get ("\u0048");_eedcd .PA =_eead .Get ("\u0050\u0041");_eedcd .QuadPoints =_eead .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_eedcd .BS =_eead .Get ("\u0042\u0053");return &_eedcd ,nil ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_edcd :=NewPdfAnnotation ();_bgec :=&PdfAnnotationLink {};_bgec .PdfAnnotation =_edcd ;_edcd .SetContext (_bgec );return _bgec ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_cbbcc *pdfFontSimple )ToPdfObject ()_eec .PdfObject {if _cbbcc ._geff ==nil {_cbbcc ._geff =&_eec .PdfIndirectObject {};};_bcdd :=_cbbcc .baseFields ().asPdfObjectDictionary ("");_cbbcc ._geff .PdfObject =_bcdd ;if _cbbcc .FirstChar !=nil {_bcdd .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_cbbcc .FirstChar );};if _cbbcc .LastChar !=nil {_bcdd .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_cbbcc .LastChar );};if _cbbcc .Widths !=nil {_bcdd .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_cbbcc .Widths );};if _cbbcc .Encoding !=nil {_bcdd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cbbcc .Encoding );}else if _cbbcc ._acfd !=nil {_ebdaf :=_cbbcc ._acfd .ToPdfObject ();if _ebdaf !=nil {_bcdd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ebdaf );};};return _cbbcc ._geff ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_gbcgee *PdfPageResources )GetFontByName (keyName _eec .PdfObjectName )(_eec .PdfObject ,bool ){if _gbcgee .Font ==nil {return nil ,false ;};_fegg ,_edfbg :=_eec .TraceToDirectObject (_gbcgee .Font ).(*_eec .PdfObjectDictionary );if !_edfbg {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_eec .TraceToDirectObject (_gbcgee .Font ));return nil ,false ;};if _dffbe :=_fegg .Get (keyName );_dffbe !=nil {return _dffbe ,true ;};return nil ,false ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);func _aadc (_dcede _eec .PdfObject )(*PdfBorderStyle ,error ){_dcag :=&PdfBorderStyle {};_dcag ._beeg =_dcede ;var _fff *_eec .PdfObjectDictionary ;_dcede =_eec .TraceToDirectObject (_dcede );_fff ,_bebg :=_dcede .(*_eec .PdfObjectDictionary );if !_bebg {return nil ,_fe .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _bgfd :=_fff .Get ("\u0054\u0079\u0070\u0065");_bgfd !=nil {_cdgf ,_eecg :=_bgfd .(*_eec .PdfObjectName );if !_eecg {_bfg .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_bgfd );}else {if *_cdgf !="\u0042\u006f\u0072\u0064\u0065\u0072"{_bfg .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_cdgf );};};};if _eafa :=_fff .Get ("\u0057");_eafa !=nil {_gadfc ,_afba :=_eec .GetNumberAsFloat (_eafa );if _afba !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_afba );return nil ,_afba ;};_dcag .W =&_gadfc ;};if _gdbef :=_fff .Get ("\u0053");_gdbef !=nil {_fgb ,_gde :=_gdbef .(*_eec .PdfObjectName );if !_gde {return nil ,_fe .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};var _ggedb BorderStyle ;switch *_fgb {case "\u0053":_ggedb =BorderStyleSolid ;case "\u0044":_ggedb =BorderStyleDashed ;case "\u0042":_ggedb =BorderStyleBeveled ;case "\u0049":_ggedb =BorderStyleInset ;case "\u0055":_ggedb =BorderStyleUnderline ;default:_bfg .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_fgb );return nil ,_fe .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_dcag .S =&_ggedb ;};if _decd :=_fff .Get ("\u0044");_decd !=nil {_gea ,_adfb :=_decd .(*_eec .PdfObjectArray );if !_adfb {_bfg .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_decd );return nil ,_fe .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");};_fgbb ,_agcca :=_gea .ToIntegerArray ();if _agcca !=nil {_bfg .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_agcca );return nil ,_agcca ;};_dcag .D =&_fgbb ;};return _dcag ,nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _eec .PdfObject ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_gcf :=NewPdfAnnotation ();_ffdc :=&PdfAnnotationStrikeOut {};_ffdc .PdfAnnotation =_gcf ;_ffdc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gcf .SetContext (_ffdc );return _ffdc ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_efgc *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_fe .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");};_fagec ,_bbga :=_fc .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gfbc ,img ._cbacg );if _bbga !=nil {return img ,_bbga ;};_cggg ,_bbga :=_fc .GrayConverter .Convert (_fagec );if _bbga !=nil {return img ,_bbga ;};return _bffcg (_cggg .Base ()),nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_eec .PdfObjectArray ;ExtGState _eec .PdfObject ;};

// SetContext sets the sub annotation (context).
func (_gdd *PdfAnnotation )SetContext (ctx PdfModel ){_gdd ._gda =ctx };

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_cec :=NewPdfAnnotation ();_aeba :=&PdfAnnotationCaret {};_aeba .PdfAnnotation =_cec ;_aeba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cec .SetContext (_aeba );return _aeba ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_cgedff *PdfPageResources )SetXObjectImageByName (keyName _eec .PdfObjectName ,ximg *XObjectImage )error {_cddcc :=ximg .ToPdfObject ().(*_eec .PdfObjectStream );_acfaf :=_cgedff .SetXObjectByName (keyName ,_cddcc );return _acfaf ;};

// SetContext sets the sub action (context).
func (_bfa *PdfAction )SetContext (ctx PdfModel ){_bfa ._ce =ctx };

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_bddeg *PdfReader )GetIndirectObjectByNumber (number int )(_eec .PdfObject ,error ){_ecdg ,_cfbb :=_bddeg ._ggagaa .LookupByNumber (number );return _ecdg ,_cfbb ;};

// ToPdfObject implements interface PdfModel.
func (_dddg *PdfActionHide )ToPdfObject ()_eec .PdfObject {_dddg .PdfAction .ToPdfObject ();_bggg :=_dddg ._aa ;_fga :=_bggg .PdfObject .(*_eec .PdfObjectDictionary );_fga .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeHide )));_fga .SetIfNotNil ("\u0054",_dddg .T );_fga .SetIfNotNil ("\u0048",_dddg .H );return _bggg ;};

// SetReason sets the `Reason` field of the signature.
func (_bgbad *PdfSignature )SetReason (reason string ){_bgbad .Reason =_eec .MakeString (reason )};func (_ggdb *LTV )enable (_acaa ,_fgabbe []*_ga .Certificate ,_cbgdf string )error {_ccaab ,_beed ,_fccaf :=_ggdb .buildCertChain (_acaa ,_fgabbe );if _fccaf !=nil {return _fccaf ;};_dgaab ,_fccaf :=_ggdb .getCerts (_ccaab );if _fccaf !=nil {return _fccaf ;};_agegb ,_fccaf :=_ggdb .getOCSPs (_ccaab ,_beed );if _fccaf !=nil {return _fccaf ;};_gcdfd ,_fccaf :=_ggdb .getCRLs (_ccaab );if _fccaf !=nil {return _fccaf ;};_cabgc :=_ggdb ._ceeega ;_cdgcc ,_fccaf :=_cabgc .addCerts (_dgaab );if _fccaf !=nil {return _fccaf ;};_bcgf ,_fccaf :=_cabgc .addOCSPs (_agegb );if _fccaf !=nil {return _fccaf ;};_dbdf ,_fccaf :=_cabgc .addCRLs (_gcdfd );if _fccaf !=nil {return _fccaf ;};if _cbgdf !=""{_cabgc .VRI [_cbgdf ]=&VRI {Cert :_cdgcc ,OCSP :_bcgf ,CRL :_dbdf };};_ggdb ._bcagf .SetDSS (_cabgc );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_edagd *PdfAnnotationProjection )ToPdfObject ()_eec .PdfObject {_edagd .PdfAnnotation .ToPdfObject ();_gac :=_edagd ._dge ;_ddcc :=_gac .PdfObject .(*_eec .PdfObjectDictionary );_edagd .PdfAnnotationMarkup .appendToPdfDictionary (_ddcc );return _gac ;};func (_edfdg *PdfReader )loadStructure ()error {if _edfdg ._ggagaa .GetCrypter ()!=nil &&!_edfdg ._ggagaa .IsAuthenticated (){return _b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_gegcf :=_edfdg ._ggagaa .GetTrailer ();if _gegcf ==nil {return _b .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_cabba ,_cbdgg :=_gegcf .Get ("\u0052\u006f\u006f\u0074").(*_eec .PdfObjectReference );if !_cbdgg {return _b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_gegcf );};_bbbae ,_bfae :=_edfdg ._ggagaa .LookupByReference (*_cabba );if _bfae !=nil {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bfae );return _bfae ;};_fbcc ,_cbdgg :=_bbbae .(*_eec .PdfIndirectObject );if !_cbdgg {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_bbbae ,*_gegcf );return _fe .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fcagb ,_cbdgg :=(*_fbcc ).PdfObject .(*_eec .PdfObjectDictionary );if !_cbdgg {_bfg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_fbcc .PdfObject );return _fe .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bfg .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_fcagb );_eedcb ,_cbdgg :=_fcagb .Get ("\u0050\u0061\u0067e\u0073").(*_eec .PdfObjectReference );if !_cbdgg {return _fe .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_caca ,_bfae :=_edfdg ._ggagaa .LookupByReference (*_eedcb );if _bfae !=nil {_bfg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _bfae ;};_edee ,_cbdgg :=_caca .(*_eec .PdfIndirectObject );if !_cbdgg {_bfg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");_bfg .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_edee );return _fe .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_fgfef ,_cbdgg :=_edee .PdfObject .(*_eec .PdfObjectDictionary );if !_cbdgg {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_edee );return _fe .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_feaga ,_cbdgg :=_eec .GetInt (_fgfef .Get ("\u0043\u006f\u0075n\u0074"));if !_cbdgg {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return _fe .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_cbdgg =_eec .GetName (_fgfef .Get ("\u0054\u0079\u0070\u0065"));!_cbdgg {_bfg .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");_fgfef .Set ("\u0054\u0079\u0070\u0065",_eec .MakeName ("\u0050\u0061\u0067e\u0073"));};_edfdg ._babb =_cabba ;_edfdg ._becgd =_fcagb ;_edfdg ._ecee =_fgfef ;_edfdg ._fgdfg =_edee ;_edfdg ._accd =int (*_feaga );_edfdg ._bcaa =[]*_eec .PdfIndirectObject {};_cgbgf :=map[_eec .PdfObject ]struct{}{};_bfae =_edfdg .buildPageList (_edee ,nil ,_cgbgf );if _bfae !=nil {return _bfae ;};_bfg .Log .Trace ("\u002d\u002d\u002d");_bfg .Log .Trace ("\u0054\u004f\u0043");_bfg .Log .Trace ("\u0050\u0061\u0067e\u0073");_bfg .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_edfdg ._bcaa ),_edfdg ._bcaa );_edfdg ._dcdcg ,_bfae =_edfdg .loadOutlines ();if _bfae !=nil {_bfg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_bfae );return _bfae ;};_edfdg .AcroForm ,_bfae =_edfdg .loadForms ();if _bfae !=nil {return _bfae ;};_edfdg .DSS ,_bfae =_edfdg .loadDSS ();if _bfae !=nil {return _bfae ;};return nil ;};func (_gaba *PdfSignature )extractChainFromCert ()([]*_ga .Certificate ,error ){var _ddce *_eec .PdfObjectArray ;switch _cadde :=_gaba .Cert .(type ){case *_eec .PdfObjectString :_ddce =_eec .MakeArray (_cadde );case *_eec .PdfObjectArray :_ddce =_cadde ;default:return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cadde );};var _ecaff _gf .Buffer ;for _ ,_ddbbf :=range _ddce .Elements (){_cebea ,_ecggg :=_eec .GetString (_ddbbf );if !_ecggg {return nil ,_b .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_ddbbf );};if _ ,_edabg :=_ecaff .Write (_cebea .Bytes ());_edabg !=nil {return nil ,_edabg ;};};return _ga .ParseCertificates (_ecaff .Bytes ());};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_faggf *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _faggf .flattenFieldsWithOpts (false ,appgen ,opts );};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_deeff *PdfPageResources )HasColorspaceByName (keyName _eec .PdfObjectName )bool {_gefbe ,_bgcff :=_deeff .GetColorspaces ();if _bgcff !=nil {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bgcff );return false ;};if _gefbe ==nil {return false ;};_ ,_gaegbc :=_gefbe .Colorspaces [string (keyName )];return _gaegbc ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_ceggd :=&PdfFieldSignature {};_ceggd .PdfField =NewPdfField ();_ceggd .PdfField .SetContext (_ceggd );_ceggd .PdfAnnotationWidget =NewPdfAnnotationWidget ();_ceggd .PdfAnnotationWidget .SetContext (_ceggd );_ceggd .PdfAnnotationWidget ._dge =_ceggd .PdfField ._bedf ;_ceggd .T =_eec .MakeString ("");_ceggd .F =_eec .MakeInteger (132);_ceggd .V =signature ;return _ceggd ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_gefga *PdfPage )GetPageAsIndirectObject ()*_eec .PdfIndirectObject {return _gefga ._gbegb };

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _eec .StreamEncoder ;FormType _eec .PdfObject ;BBox _eec .PdfObject ;Matrix _eec .PdfObject ;Resources *PdfPageResources ;Group _eec .PdfObject ;Ref _eec .PdfObject ;MetaData _eec .PdfObject ;PieceInfo _eec .PdfObject ;LastModified _eec .PdfObject ;StructParent _eec .PdfObject ;StructParents _eec .PdfObject ;OPI _eec .PdfObject ;OC _eec .PdfObject ;Name _eec .PdfObject ;

// Stream data.
Stream []byte ;_edeb *_eec .PdfObjectStream ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_beae :map[_eec .PdfObject ]struct{}{},_cdafg :_bbad (),_ggagaa :_eec .NewParserFromString (txt )};};func (_bcfba *PdfReader )newPdfAcroFormFromDict (_egdc *_eec .PdfIndirectObject ,_bfgb *_eec .PdfObjectDictionary )(*PdfAcroForm ,error ){_bggc :=NewPdfAcroForm ();if _egdc !=nil {_bggc ._eggd =_egdc ;_egdc .PdfObject =_eec .MakeDict ();};if _gdfced :=_bfgb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_gdfced !=nil {_ecaag ,_fade :=_eec .GetArray (_gdfced );if !_fade {return nil ,_b .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_gdfced );};var _fbgd []*PdfField ;for _ ,_efcg :=range _ecaag .Elements (){_faadd ,_gffea :=_eec .GetIndirect (_efcg );if !_gffea {if _ ,_fegb :=_efcg .(*_eec .PdfObjectNull );_fegb {_bfg .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");continue ;};_bfg .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_efcg );return nil ,_b .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_eafee ,_edfeb :=_bcfba .newPdfFieldFromIndirectObject (_faadd ,nil );if _edfeb !=nil {return nil ,_edfeb ;};_bfg .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_eafee );_fbgd =append (_fbgd ,_eafee );};_bggc .Fields =&_fbgd ;};if _cdebc :=_bfgb .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_cdebc !=nil {_adcefc ,_affd :=_eec .GetBool (_cdebc );if _affd {_bggc .NeedAppearances =_adcefc ;}else {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_cdebc );};};if _aceee :=_bfgb .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_aceee !=nil {_aagdc ,_abdd :=_eec .GetInt (_aceee );if _abdd {_bggc .SigFlags =_aagdc ;}else {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aceee );};};if _eeacg :=_bfgb .Get ("\u0043\u004f");_eeacg !=nil {_dfgbb ,_dadf :=_eec .GetArray (_eeacg );if _dadf {_bggc .CO =_dfgbb ;}else {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_eeacg );};};if _bdfgb :=_bfgb .Get ("\u0044\u0052");_bdfgb !=nil {if _ddee ,_gagdd :=_eec .GetDict (_bdfgb );_gagdd {_ffede ,_ecddg :=NewPdfPageResourcesFromDict (_ddee );if _ecddg !=nil {_bfg .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_ecddg );return nil ,_ecddg ;};_bggc .DR =_ffede ;}else {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bdfgb );};};if _bfdb :=_bfgb .Get ("\u0044\u0041");_bfdb !=nil {_debf ,_eece :=_eec .GetString (_bfdb );if _eece {_bggc .DA =_debf ;}else {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bfdb );};};if _gecca :=_bfgb .Get ("\u0051");_gecca !=nil {_eafff ,_gfgfg :=_eec .GetInt (_gecca );if _gfgfg {_bggc .Q =_eafff ;}else {_bfg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gecca );};};if _eecfc :=_bfgb .Get ("\u0058\u0046\u0041");_eecfc !=nil {_bggc .XFA =_eecfc ;};_bggc .ToPdfObject ();return _bggc ,nil ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_gfbcc *PdfPage )AddContentStreamByString (contentStr string )error {_dacgd ,_gcddg :=_eec .MakeStream ([]byte (contentStr ),_eec .NewFlateEncoder ());if _gcddg !=nil {return _gcddg ;};if _gfbcc .Contents ==nil {_gfbcc .Contents =_dacgd ;}else {_eaee :=_eec .TraceToDirectObject (_gfbcc .Contents );_dfceg ,_ggfad :=_eaee .(*_eec .PdfObjectArray );if !_ggfad {_dfceg =_eec .MakeArray (_eaee );};_dfceg .Append (_dacgd );_gfbcc .Contents =_dfceg ;};return nil ;};func _ccbga (_edfdf _eec .PdfObject ,_bcagg *PdfReader )(*OutlineDest ,error ){_efadg ,_abgdd :=_eec .GetArray (_edfdf );if !_abgdd {return nil ,_fe .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_cggce :=_efadg .Len ();if _cggce < 2{return nil ,_b .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_cggce );};_eaacg :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_fbagdc :=_efadg .Get (0);if _eaeb ,_cdgcd :=_eec .GetIndirect (_fbagdc );_cdgcd {if _ ,_cgbb ,_accc :=_bcagg .PageFromIndirectObject (_eaeb );_accc ==nil {_eaacg .Page =int64 (_cgbb -1);}else {_bfg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_eaeb );};_eaacg .PageObj =_eaeb ;}else if _aegdf ,_dgcdge :=_eec .GetIntVal (_fbagdc );_dgcdge {if _aegdf >=0&&_aegdf < len (_bcagg .PageList ){_eaacg .PageObj =_bcagg .PageList [_aegdf ].GetPageAsIndirectObject ();}else {_bfg .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_aegdf );};_eaacg .Page =int64 (_aegdf );}else {return nil ,_b .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_fbagdc );};_cbcdc ,_abgdd :=_eec .GetNameVal (_efadg .Get (1));if !_abgdd {_bfg .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_efadg .Get (1));return _eaacg ,nil ;};switch _cbcdc {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _cggce > 2{_eaacg .Y ,_ =_eec .GetNumberAsFloat (_eec .TraceToDirectObject (_efadg .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _cggce > 2{_eaacg .X ,_ =_eec .GetNumberAsFloat (_eec .TraceToDirectObject (_efadg .Get (2)));};case "\u0058\u0059\u005a":if _cggce > 4{_eaacg .X ,_ =_eec .GetNumberAsFloat (_eec .TraceToDirectObject (_efadg .Get (2)));_eaacg .Y ,_ =_eec .GetNumberAsFloat (_eec .TraceToDirectObject (_efadg .Get (3)));_eaacg .Zoom ,_ =_eec .GetNumberAsFloat (_eec .TraceToDirectObject (_efadg .Get (4)));};default:_cbcdc ="\u0046\u0069\u0074";};_eaacg .Mode =_cbcdc ;return _eaacg ,nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_eagda *PdfPage )error ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _eec .PdfObject ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _eec .PdfObject ;};

// HasXObjectByName checks if has XObject resource by name.
func (_aegaa *PdfPage )HasXObjectByName (name _eec .PdfObjectName )bool {_cccf ,_fcdbc :=_aegaa .Resources .XObject .(*_eec .PdfObjectDictionary );if !_fcdbc {return false ;};if _eddg :=_cccf .Get (name );_eddg !=nil {return true ;};return false ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_cabg :=&PdfColorspaceDeviceN {};return _cabg };

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _eec .PdfObjectName ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_geaac interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_aafbed .Lock ();defer _aafbed .Unlock ();_eccfa =creator };func _bffcg (_aabg *_fc .ImageBase )(_agfbg Image ){_agfbg .Width =int64 (_aabg .Width );_agfbg .Height =int64 (_aabg .Height );_agfbg .BitsPerComponent =int64 (_aabg .BitsPerComponent );_agfbg .ColorComponents =_aabg .ColorComponents ;_agfbg .Data =_aabg .Data ;_agfbg ._cbacg =_aabg .Decode ;_agfbg ._gfbc =_aabg .Alpha ;return _agfbg ;};const (_feab =0x00001;_fbbd =0x00002;_gfbg =0x00004;_feacg =0x00008;_dfdbd =0x00020;_fbbg =0x00040;_fcdae =0x10000;_bdb =0x20000;_fecfb =0x40000;);func _dbeeb ()string {return _bfg .Version };

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_eec .PdfObjectBool ;SigFlags *_eec .PdfObjectInteger ;CO *_eec .PdfObjectArray ;DR *PdfPageResources ;DA *_eec .PdfObjectString ;Q *_eec .PdfObjectInteger ;XFA _eec .PdfObject ;_eggd *_eec .PdfIndirectObject ;};

// AddImageResource adds an image to the XObject resources.
func (_bcgag *PdfPage )AddImageResource (name _eec .PdfObjectName ,ximg *XObjectImage )error {var _acgf *_eec .PdfObjectDictionary ;if _bcgag .Resources .XObject ==nil {_acgf =_eec .MakeDict ();_bcgag .Resources .XObject =_acgf ;}else {var _fdbaf bool ;_acgf ,_fdbaf =(_bcgag .Resources .XObject ).(*_eec .PdfObjectDictionary );if !_fdbaf {return _fe .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_acgf .Set (name ,ximg .ToPdfObject ());return nil ;};func _egfc (_cgebc _eec .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_bfg .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_cgebc .String (),_cgebc );_cged :=NewPdfColorspaceSpecialPattern ();if _afdg ,_gdff :=_cgebc .(*_eec .PdfIndirectObject );_gdff {_cged ._aadea =_afdg ;};_cgebc =_eec .TraceToDirectObject (_cgebc );if _bdc ,_dad :=_cgebc .(*_eec .PdfObjectName );_dad {if *_bdc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};return _cged ,nil ;};_aga ,_cgdf :=_cgebc .(*_eec .PdfObjectArray );if !_cgdf {_bfg .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_cgebc );return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _aga .Len ()!=1&&_aga .Len ()!=2{_bfg .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_aga );return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_cgebc =_aga .Get (0);if _ffbe ,_dggc :=_cgebc .(*_eec .PdfObjectName );_dggc {if *_ffbe !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_bfg .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_ffbe );return nil ,_b .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _aga .Len ()> 1{_cgebc =_aga .Get (1);_cgebc =_eec .TraceToDirectObject (_cgebc );_cebcb ,_dfgd :=NewPdfColorspaceFromPdfObject (_cgebc );if _dfgd !=nil {return nil ,_dfgd ;};_cged .UnderlyingCS =_cebcb ;};_bfg .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_cged .UnderlyingCS );return _cged ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_fdcc *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _fdcc ._fadd ==nil {_fdcc .GetAnnotations ();};_fdcc ._fadd =append (_fdcc ._fadd ,annot );};func _aefgb (_adcbg _eec .PdfObject )(*PdfPattern ,error ){_gdfe :=&PdfPattern {};var _bffbg *_eec .PdfObjectDictionary ;if _aggbf ,_efcgc :=_eec .GetIndirect (_adcbg );_efcgc {_gdfe ._ggede =_aggbf ;_dedcf ,_gdbfe :=_aggbf .PdfObject .(*_eec .PdfObjectDictionary );if !_gdbfe {_bfg .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_aggbf .PdfObject );return nil ,_eec .ErrTypeError ;};_bffbg =_dedcf ;}else if _ddccf ,_cdaa :=_eec .GetStream (_adcbg );_cdaa {_gdfe ._ggede =_ddccf ;_bffbg =_ddccf .PdfObjectDictionary ;}else {_bfg .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_adcbg );return nil ,_eec .ErrTypeError ;};_egfea :=_bffbg .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _egfea ==nil {_bfg .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");return nil ,ErrRequiredAttributeMissing ;};_fabg ,_ccaeg :=_egfea .(*_eec .PdfObjectInteger );if !_ccaeg {_bfg .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_egfea );return nil ,_eec .ErrTypeError ;};if *_fabg !=1&&*_fabg !=2{_bfg .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_fabg );return nil ,_eec .ErrRangeError ;};_gdfe .PatternType =int64 (*_fabg );switch *_fabg {case 1:_bedc ,_gedbf :=_aagdf (_bffbg );if _gedbf !=nil {return nil ,_gedbf ;};_bedc .PdfPattern =_gdfe ;_gdfe ._cdbgf =_bedc ;return _gdfe ,nil ;case 2:_ggbcfge ,_egfgc :=_dcbcf (_bffbg );if _egfgc !=nil {return nil ,_egfgc ;};_ggbcfge .PdfPattern =_gdfe ;_gdfe ._cdbgf =_ggbcfge ;return _gdfe ,nil ;};return nil ,_fe .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _eec .PdfObject ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_fgad *Image )ToGoImage ()(_ac .Image ,error ){_bfg .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_egaa ,_dbagg :=_fc .NewImage (int (_fgad .Width ),int (_fgad .Height ),int (_fgad .BitsPerComponent ),_fgad .ColorComponents ,_fgad .Data ,_fgad ._gfbc ,_fgad ._cbacg );if _dbagg !=nil {return nil ,_dbagg ;};return _egaa ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_dgbgg *PdfFilespec )GetContainingPdfObject ()_eec .PdfObject {return _dgbgg ._fdecf };

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func (_dbdb *Image )samplesTrimPadding (_dgcde []uint32 )[]uint32 {_efdba :=_dbdb .ColorComponents *int (_dbdb .Width )*int (_dbdb .Height );if len (_dgcde )==_efdba {return _dgcde ;};_aeaf :=make ([]uint32 ,_efdba );_afbg :=int (_dbdb .Width )*_dbdb .ColorComponents ;var _adafd ,_gecf ,_edffd ,_fdef int ;_babca :=_fc .BytesPerLine (int (_dbdb .Width ),int (_dbdb .BitsPerComponent ),_dbdb .ColorComponents );for _adafd =0;_adafd < int (_dbdb .Height );_adafd ++{_gecf =_adafd *int (_dbdb .Width );_edffd =_adafd *_babca ;for _fdef =0;_fdef < _afbg ;_fdef ++{_aeaf [_gecf +_fdef ]=_dgcde [_edffd +_fdef ];};};return _aeaf ;};func _fdeed (_gaegg *_eec .PdfObjectDictionary )(*PdfShadingType2 ,error ){_cbfge :=PdfShadingType2 {};_cbebc :=_gaegg .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _cbebc ==nil {_bfg .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;};_ffcbg ,_bbdbg :=_cbebc .(*_eec .PdfObjectArray );if !_bbdbg {_bfg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cbebc );return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _ffcbg .Len ()!=4{_bfg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ffcbg .Len ());return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_cbfge .Coords =_ffcbg ;if _ggaba :=_gaegg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ggaba !=nil {_ggaba =_eec .TraceToDirectObject (_ggaba );_dgggf ,_bbdc :=_ggaba .(*_eec .PdfObjectArray );if !_bbdc {_bfg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggaba );return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cbfge .Domain =_dgggf ;};_cbebc =_gaegg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cbebc ==nil {_bfg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_cbfge .Function =[]PdfFunction {};if _gddbc ,_fgfae :=_cbebc .(*_eec .PdfObjectArray );_fgfae {for _ ,_cgda :=range _gddbc .Elements (){_bdegd ,_fbdba :=_bdfbe (_cgda );if _fbdba !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbdba );return nil ,_fbdba ;};_cbfge .Function =append (_cbfge .Function ,_bdegd );};}else {_bgca ,_egagc :=_bdfbe (_cbebc );if _egagc !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egagc );return nil ,_egagc ;};_cbfge .Function =append (_cbfge .Function ,_bgca );};if _gfecad :=_gaegg .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gfecad !=nil {_gfecad =_eec .TraceToDirectObject (_gfecad );_ggcdg ,_gfab :=_gfecad .(*_eec .PdfObjectArray );if !_gfab {_bfg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gfecad );return nil ,_eec .ErrTypeError ;};if _ggcdg .Len ()!=2{_bfg .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ggcdg .Len ());return nil ,ErrInvalidAttribute ;};_cbfge .Extend =_ggcdg ;};return &_cbfge ,nil ;};type pdfFontType0 struct{fontCommon ;_aebd *_eec .PdfIndirectObject ;_edff _fcb .TextEncoder ;Encoding _eec .PdfObject ;DescendantFont *PdfFont ;_ceab *_cf .CMap ;};func (_cfdd *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _cfdd ._cddbf };func (_cbc *PdfReader )newPdfActionRenditionFromDict (_fdgb *_eec .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_fdgb .Get ("\u0052"),AN :_fdgb .Get ("\u0041\u004e"),OP :_fdgb .Get ("\u004f\u0050"),JS :_fdgb .Get ("\u004a\u0053")},nil ;};func (_fffd *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _aacd []*PdfFieldSignature ;for _ ,_aggdg :=range _fffd .AllFields (){switch _agdg :=_aggdg .GetContext ().(type ){case *PdfFieldSignature :_dbde :=_agdg ;_aacd =append (_aacd ,_dbde );};};return _aacd ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cbac *PdfColorspaceDeviceCMYK )ToPdfObject ()_eec .PdfObject {return _eec .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// Encoder returns the font's text encoder.
func (_feabd pdfFontType0 )Encoder ()_fcb .TextEncoder {return _feabd ._edff };

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_ggefd *PdfColorspaceDeviceN )ToPdfObject ()_eec .PdfObject {_dfcg :=_eec .MakeArray (_eec .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_dfcg .Append (_ggefd .ColorantNames );_dfcg .Append (_ggefd .AlternateSpace .ToPdfObject ());_dfcg .Append (_ggefd .TintTransform .ToPdfObject ());if _ggefd .Attributes !=nil {_dfcg .Append (_ggefd .Attributes .ToPdfObject ());};if _ggefd ._dcca !=nil {_ggefd ._dcca .PdfObject =_dfcg ;return _ggefd ._dcca ;};return _dfcg ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_ffed *PdfAcroForm ,_egba *PdfField ,_fgda *PdfAnnotationWidget )(*_eec .PdfObjectDictionary ,error );};type fontCommon struct{_cefc string ;_bgga string ;_bade string ;_fbgg _eec .PdfObject ;_ecab *_cf .CMap ;_cddbf *PdfFontDescriptor ;_gfefa int64 ;};

// ToPdfObject implements interface PdfModel.
func (_aadg *PdfAnnotationSquare )ToPdfObject ()_eec .PdfObject {_aadg .PdfAnnotation .ToPdfObject ();_eaad :=_aadg ._dge ;_afd :=_eaad .PdfObject .(*_eec .PdfObjectDictionary );if _aadg .PdfAnnotationMarkup !=nil {_aadg .PdfAnnotationMarkup .appendToPdfDictionary (_afd );};_afd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_afd .SetIfNotNil ("\u0042\u0053",_aadg .BS );_afd .SetIfNotNil ("\u0049\u0043",_aadg .IC );_afd .SetIfNotNil ("\u0042\u0045",_aadg .BE );_afd .SetIfNotNil ("\u0052\u0044",_aadg .RD );return _eaad ;};func (_agccc *PdfAppender )updateObjectsDeep (_edfa _eec .PdfObject ,_abb map[_eec .PdfObject ]struct{}){if _abb ==nil {_abb =map[_eec .PdfObject ]struct{}{};};if _ ,_dbfed :=_abb [_edfa ];_dbfed ||_edfa ==nil {return ;};_abb [_edfa ]=struct{}{};_dgf :=_eec .ResolveReferencesDeep (_edfa ,_agccc ._fcc );if _dgf !=nil {_bfg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgf );};switch _dcgf :=_edfa .(type ){case *_eec .PdfIndirectObject :switch {case _dcgf .GetParser ()==_agccc ._adbd ._ggagaa :return ;case _dcgf .GetParser ()==_agccc .Reader ._ggagaa :_affac ,_ :=_agccc ._adbd .GetIndirectObjectByNumber (int (_dcgf .ObjectNumber ));_dabc ,_ggfcb :=_affac .(*_eec .PdfIndirectObject );if _ggfcb &&_dabc !=nil {if _dabc .PdfObject !=_dcgf .PdfObject &&_dabc .PdfObject .WriteString ()!=_dcgf .PdfObject .WriteString (){_agccc .addNewObject (_edfa );_agccc ._decb [_edfa ]=_dcgf .ObjectNumber ;};};default:_agccc .addNewObject (_edfa );};_agccc .updateObjectsDeep (_dcgf .PdfObject ,_abb );case *_eec .PdfObjectArray :for _ ,_eebb :=range _dcgf .Elements (){_agccc .updateObjectsDeep (_eebb ,_abb );};case *_eec .PdfObjectDictionary :for _ ,_fdb :=range _dcgf .Keys (){_agccc .updateObjectsDeep (_dcgf .Get (_fdb ),_abb );};case *_eec .PdfObjectStreams :if _dcgf .GetParser ()!=_agccc ._adbd ._ggagaa {for _ ,_cbga :=range _dcgf .Elements (){_agccc .updateObjectsDeep (_cbga ,_abb );};};case *_eec .PdfObjectStream :switch {case _dcgf .GetParser ()==_agccc ._adbd ._ggagaa :return ;case _dcgf .GetParser ()==_agccc .Reader ._ggagaa :if _bbff ,_eafb :=_agccc ._adbd ._ggagaa .LookupByReference (_dcgf .PdfObjectReference );_eafb ==nil {var _bccc bool ;if _gbag ,_dfbf :=_eec .GetStream (_bbff );_dfbf &&_gf .Equal (_gbag .Stream ,_dcgf .Stream ){_bccc =true ;};if _dcfb ,_gfbd :=_eec .GetDict (_bbff );_bccc &&_gfbd {_bccc =_dcfb .WriteString ()==_dcgf .PdfObjectDictionary .WriteString ();};if _bccc {return ;};};if _dcgf .ObjectNumber !=0{_agccc ._decb [_edfa ]=_dcgf .ObjectNumber ;};default:if _ ,_fbad :=_agccc ._eede [_edfa ];!_fbad {_agccc .addNewObject (_edfa );};};_agccc .updateObjectsDeep (_dcgf .PdfObjectDictionary ,_abb );};};func (_acea *PdfReader )newPdfAnnotationFileAttachmentFromDict (_agcd *_eec .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_fggdc :=PdfAnnotationFileAttachment {};_abfb ,_dggg :=_acea .newPdfAnnotationMarkupFromDict (_agcd );if _dggg !=nil {return nil ,_dggg ;};_fggdc .PdfAnnotationMarkup =_abfb ;_fggdc .FS =_agcd .Get ("\u0046\u0053");_fggdc .Name =_agcd .Get ("\u004e\u0061\u006d\u0065");return &_fggdc ,nil ;};func _dbabd (_fege _eec .PdfObject )(*PdfColorspaceICCBased ,error ){_ebaa :=&PdfColorspaceICCBased {};if _fbeb ,_bdfg :=_fege .(*_eec .PdfIndirectObject );_bdfg {_ebaa ._gacd =_fbeb ;};_fege =_eec .TraceToDirectObject (_fege );_bdge ,_aecf :=_fege .(*_eec .PdfObjectArray );if !_aecf {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bdge .Len ()!=2{return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_fege =_eec .TraceToDirectObject (_bdge .Get (0));_ccgbf ,_aecf :=_fege .(*_eec .PdfObjectName );if !_aecf {return nil ,_b .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_ccgbf !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_b .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_fege =_bdge .Get (1);_gbee ,_aecf :=_eec .GetStream (_fege );if !_aecf {_bfg .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_fege );return nil ,_b .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dcgee :=_gbee .PdfObjectDictionary ;_adda ,_aecf :=_dcgee .Get ("\u004e").(*_eec .PdfObjectInteger );if !_aecf {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_adda !=1&&*_adda !=3&&*_adda !=4{return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");};_ebaa .N =int (*_adda );if _ecgcg :=_dcgee .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_ecgcg !=nil {_cfdg ,_bgdfd :=NewPdfColorspaceFromPdfObject (_ecgcg );if _bgdfd !=nil {return nil ,_bgdfd ;};_ebaa .Alternate =_cfdg ;};if _fdda :=_dcgee .Get ("\u0052\u0061\u006eg\u0065");_fdda !=nil {_fdda =_eec .TraceToDirectObject (_fdda );_cdfg ,_effb :=_fdda .(*_eec .PdfObjectArray );if !_effb {return nil ,_b .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");};if _cdfg .Len ()!=2*_ebaa .N {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");};_cfc ,_gcbfbd :=_cdfg .GetAsFloat64Slice ();if _gcbfbd !=nil {return nil ,_gcbfbd ;};_ebaa .Range =_cfc ;}else {_ebaa .Range =make ([]float64 ,2*_ebaa .N );for _cgdg :=0;_cgdg < _ebaa .N ;_cgdg ++{_ebaa .Range [2*_cgdg ]=0.0;_ebaa .Range [2*_cgdg +1]=1.0;};};if _cgcee :=_dcgee .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cgcee !=nil {_eaff ,_aafge :=_cgcee .(*_eec .PdfObjectStream );if !_aafge {return nil ,_b .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_ebaa .Metadata =_eaff ;};_becg ,_bcbf :=_eec .DecodeStream (_gbee );if _bcbf !=nil {return nil ,_bcbf ;};_ebaa .Data =_becg ;_ebaa ._dacag =_gbee ;return _ebaa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aba *PdfActionSound )ToPdfObject ()_eec .PdfObject {_aba .PdfAction .ToPdfObject ();_bgfb :=_aba ._aa ;_fbg :=_bgfb .PdfObject .(*_eec .PdfObjectDictionary );_fbg .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeSound )));_fbg .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_aba .Sound );_fbg .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_aba .Volume );_fbg .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_aba .Synchronous );_fbg .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_aba .Repeat );_fbg .SetIfNotNil ("\u004d\u0069\u0078",_aba .Mix );return _bgfb ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_eec .PdfObjectString ;Author *_eec .PdfObjectString ;Subject *_eec .PdfObjectString ;Keywords *_eec .PdfObjectString ;Creator *_eec .PdfObjectString ;Producer *_eec .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_eec .PdfObjectName ;_beega *_eec .PdfObjectDictionary ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;func _bdfbe (_edfga _eec .PdfObject )(PdfFunction ,error ){_edfga =_eec .ResolveReference (_edfga );if _abaf ,_aaadd :=_edfga .(*_eec .PdfObjectStream );_aaadd {_dcdac :=_abaf .PdfObjectDictionary ;_bggba ,_fdcdf :=_dcdac .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_eec .PdfObjectInteger );if !_fdcdf {_bfg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bggba ==0{return _abbc (_abaf );}else if *_bggba ==4{return _bcba (_abaf );}else {return nil ,_fe .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _dcccc ,_dgbaa :=_edfga .(*_eec .PdfIndirectObject );_dgbaa {_fdeeb ,_dfba :=_dcccc .PdfObject .(*_eec .PdfObjectDictionary );if !_dfba {_bfg .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_fe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_eaeg ,_dfba :=_fdeeb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_eec .PdfObjectInteger );if !_dfba {_bfg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_eaeg ==2{return _fgfc (_dcccc );}else if *_eaeg ==3{return _ageg (_dcccc );}else {return nil ,_fe .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _gbfca ,_abad :=_edfga .(*_eec .PdfObjectDictionary );_abad {_gbga ,_bfbda :=_gbfca .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_eec .PdfObjectInteger );if !_bfbda {_bfg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gbga ==2{return _fgfc (_gbfca );}else if *_gbga ==3{return _ageg (_gbfca );}else {return nil ,_fe .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_bfg .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_edfga );return nil ,_fe .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_eec .PdfObjectStream )(*XObjectImage ,error ){_eaadc :=&XObjectImage {};_eaadc ._cgdaf =stream ;_dfbg :=*(stream .PdfObjectDictionary );_fggag ,_ebccd :=_eec .NewEncoderFromStream (stream );if _ebccd !=nil {return nil ,_ebccd ;};_eaadc .Filter =_fggag ;if _ccgc :=_eec .TraceToDirectObject (_dfbg .Get ("\u0057\u0069\u0064t\u0068"));_ccgc !=nil {_ddaeg ,_gdacc :=_ccgc .(*_eec .PdfObjectInteger );if !_gdacc {return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");};_aecga :=int64 (*_ddaeg );_eaadc .Width =&_aecga ;}else {return nil ,_fe .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _afbdc :=_eec .TraceToDirectObject (_dfbg .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_afbdc !=nil {_dbed ,_ggeae :=_afbdc .(*_eec .PdfObjectInteger );if !_ggeae {return nil ,_fe .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_cacc :=int64 (*_dbed );_eaadc .Height =&_cacc ;}else {return nil ,_fe .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _dgdbd :=_eec .TraceToDirectObject (_dfbg .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_dgdbd !=nil {_ffedg ,_ageged :=NewPdfColorspaceFromPdfObject (_dgdbd );if _ageged !=nil {return nil ,_ageged ;};_eaadc .ColorSpace =_ffedg ;}else {_bfg .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");_eaadc .ColorSpace =NewPdfColorspaceDeviceGray ();};if _fcfafd :=_eec .TraceToDirectObject (_dfbg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_fcfafd !=nil {_bfcf ,_dcdab :=_fcfafd .(*_eec .PdfObjectInteger );if !_dcdab {return nil ,_fe .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_dfegg :=int64 (*_bfcf );_eaadc .BitsPerComponent =&_dfegg ;};_eaadc .Intent =_dfbg .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");_eaadc .ImageMask =_dfbg .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_eaadc .Mask =_dfbg .Get ("\u004d\u0061\u0073\u006b");_eaadc .Decode =_dfbg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_eaadc .Interpolate =_dfbg .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");_eaadc .Alternatives =_dfbg .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_eaadc .SMask =_dfbg .Get ("\u0053\u004d\u0061s\u006b");_eaadc .SMaskInData =_dfbg .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");_eaadc .Matte =_dfbg .Get ("\u004d\u0061\u0074t\u0065");_eaadc .Name =_dfbg .Get ("\u004e\u0061\u006d\u0065");_eaadc .StructParent =_dfbg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_eaadc .ID =_dfbg .Get ("\u0049\u0044");_eaadc .OPI =_dfbg .Get ("\u004f\u0050\u0049");_eaadc .Metadata =_dfbg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_eaadc .OC =_dfbg .Get ("\u004f\u0043");_eaadc .Stream =stream .Stream ;return _eaadc ,nil ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_dcgc :=map[rune ]int {};for _ ,_dcac :=range text {_dcgc [_dcac ]++;};return _dcgc ;};

// SetContext set the sub annotation (context).
func (_gdaea *PdfShading )SetContext (ctx PdfModel ){_gdaea ._gdcdb =ctx };

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_ffedec *LTV )EnableByName (name string ,extraCerts []*_ga .Certificate )error {_cdffd :=_ffedec ._bcagf ._adbd .AcroForm ;for _ ,_abbe :=range _cdffd .AllFields (){_fefa ,_ :=_abbe .GetContext ().(*PdfFieldSignature );if _fefa ==nil {continue ;};if _ffae :=_fefa .PartialName ();_ffae !=name {continue ;};return _ffedec .Enable (_fefa .V ,extraCerts );};return nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _eec .PdfObject ;IC _eec .PdfObject ;BE _eec .PdfObject ;RD _eec .PdfObject ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_geee *PdfColorspaceICCBased )ToPdfObject ()_eec .PdfObject {_fgcae :=&_eec .PdfObjectArray {};_fgcae .Append (_eec .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _ecbcg *_eec .PdfObjectStream ;if _geee ._dacag !=nil {_ecbcg =_geee ._dacag ;}else {_ecbcg =&_eec .PdfObjectStream {};};_cbbb :=_eec .MakeDict ();_cbbb .Set ("\u004e",_eec .MakeInteger (int64 (_geee .N )));if _geee .Alternate !=nil {_cbbb .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_geee .Alternate .ToPdfObject ());};if _geee .Metadata !=nil {_cbbb .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_geee .Metadata );};if _geee .Range !=nil {var _cbea []_eec .PdfObject ;for _ ,_aeaa :=range _geee .Range {_cbea =append (_cbea ,_eec .MakeFloat (_aeaa ));};_cbbb .Set ("\u0052\u0061\u006eg\u0065",_eec .MakeArray (_cbea ...));};_cbbb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_eec .MakeInteger (int64 (len (_geee .Data ))));_ecbcg .Stream =_geee .Data ;_ecbcg .PdfObjectDictionary =_cbbb ;_fgcae .Append (_ecbcg );if _geee ._gacd !=nil {_geee ._gacd .PdfObject =_fgcae ;return _geee ._gacd ;};return _fgcae ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_fceda OutlineDest )ToPdfObject ()_eec .PdfObject {if (_fceda .PageObj ==nil &&_fceda .Page < 0)||_fceda .Mode ==""{return _eec .MakeNull ();};_cdebe :=_eec .MakeArray ();if _fceda .PageObj !=nil {_cdebe .Append (_fceda .PageObj );}else {_cdebe .Append (_eec .MakeInteger (_fceda .Page ));};_cdebe .Append (_eec .MakeName (_fceda .Mode ));switch _fceda .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_cdebe .Append (_eec .MakeFloat (_fceda .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_cdebe .Append (_eec .MakeFloat (_fceda .X ));case "\u0058\u0059\u005a":_cdebe .Append (_eec .MakeFloat (_fceda .X ));_cdebe .Append (_eec .MakeFloat (_fceda .Y ));_cdebe .Append (_eec .MakeFloat (_fceda .Zoom ));default:_cdebe .Set (1,_eec .MakeName ("\u0046\u0069\u0074"));};return _cdebe ;};func (_fabfa *PdfFunctionType0 )processSamples ()error {_agdge :=_efe .ResampleBytes (_fabfa ._bfgd ,_fabfa .BitsPerSample );_fabfa ._fedae =_agdge ;return nil ;};func _decbb (_edagc _eec .PdfObject )[]*_eec .PdfObjectStream {if _edagc ==nil {return nil ;};_gecba ,_ebgdg :=_eec .GetArray (_edagc );if !_ebgdg ||_gecba .Len ()==0{return nil ;};_eaedae :=make ([]*_eec .PdfObjectStream ,0,_gecba .Len ());for _ ,_bdfgf :=range _gecba .Elements (){if _baba ,_eeecg :=_eec .GetStream (_bdfgf );_eeecg {_eaedae =append (_eaedae ,_baba );};};return _eaedae ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_gbfba *_eec .PdfIndirectObject ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_dggdf *PdfPattern )IsTiling ()bool {return _dggdf .PatternType ==1};func _fcgfa ()string {_aafbed .Lock ();defer _aafbed .Unlock ();_gaeeg :=_ea .GetLicenseKey ();if len (_gbabbc )> 0&&(_gaeeg .IsLicensed ()||_daffe ){return _gbabbc ;};return _b .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_dbeeb (),_gaeeg .TypeToString ());};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _eec .PdfObject ;Open _eec .PdfObject ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_bd :=NewPdfAction ();_bge :=&PdfActionRendition {};_bge .PdfAction =_bd ;_bd .SetContext (_bge );return _bge ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_eaab *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _eaab .UnderlyingCS .GetNumComponents ();};

// ToPdfObject returns a stream object.
func (_fcacf *XObjectForm )ToPdfObject ()_eec .PdfObject {_bgae :=_fcacf ._edeb ;_bfdg :=_bgae .PdfObjectDictionary ;if _fcacf .Filter !=nil {_bfdg =_fcacf .Filter .MakeStreamDict ();_bgae .PdfObjectDictionary =_bfdg ;};_bfdg .Set ("\u0054\u0079\u0070\u0065",_eec .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_bfdg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0046\u006f\u0072\u006d"));_bfdg .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_fcacf .FormType );_bfdg .SetIfNotNil ("\u0042\u0042\u006f\u0078",_fcacf .BBox );_bfdg .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_fcacf .Matrix );if _fcacf .Resources !=nil {_bfdg .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fcacf .Resources .ToPdfObject ());};_bfdg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_fcacf .Group );_bfdg .SetIfNotNil ("\u0052\u0065\u0066",_fcacf .Ref );_bfdg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_fcacf .MetaData );_bfdg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_fcacf .PieceInfo );_bfdg .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_fcacf .LastModified );_bfdg .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fcacf .StructParent );_bfdg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_fcacf .StructParents );_bfdg .SetIfNotNil ("\u004f\u0050\u0049",_fcacf .OPI );_bfdg .SetIfNotNil ("\u004f\u0043",_fcacf .OC );_bfdg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fcacf .Name );_bfdg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_eec .MakeInteger (int64 (len (_fcacf .Stream ))));_bgae .Stream =_fcacf .Stream ;return _bgae ;};func (_bagd *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _dfdbe :=_bagd ._cddbf ;_dfdbe !=nil {return _dfdbe ;};return _bagd ._bfggg ;};

// ToInteger convert to an integer format.
func (_cea *PdfColorDeviceGray )ToInteger (bits int )uint32 {_gbcc :=_fba .Pow (2,float64 (bits ))-1;return uint32 (_gbcc *_cea .Val ());};

// String returns a string describing the font descriptor.
func (_fcga *PdfFontDescriptor )String ()string {var _egffa []string ;if _fcga .FontName !=nil {_egffa =append (_egffa ,_fcga .FontName .String ());};if _fcga .FontFamily !=nil {_egffa =append (_egffa ,_fcga .FontFamily .String ());};if _fcga .fontFile !=nil {_egffa =append (_egffa ,_fcga .fontFile .String ());};if _fcga ._bbea !=nil {_egffa =append (_egffa ,_fcga ._bbea .String ());};_egffa =append (_egffa ,_b .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_fcga .FontFile3 !=nil ));return _b .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_beb .Join (_egffa ,"\u002c\u0020"));};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _eec .PdfObject )(_eec .PdfObjectName ,error ){var _cbdg *_eec .PdfObjectName ;var _fdc *_eec .PdfObjectArray ;if _edcdb ,_agfgf :=obj .(*_eec .PdfIndirectObject );_agfgf {if _efcf ,_aecdc :=_edcdb .PdfObject .(*_eec .PdfObjectArray );_aecdc {_fdc =_efcf ;}else if _ccef ,_bgee :=_edcdb .PdfObject .(*_eec .PdfObjectName );_bgee {_cbdg =_ccef ;};}else if _bdae ,_acee :=obj .(*_eec .PdfObjectArray );_acee {_fdc =_bdae ;}else if _gcca ,_efad :=obj .(*_eec .PdfObjectName );_efad {_cbdg =_gcca ;};if _cbdg !=nil {switch *_cbdg {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_cbdg ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_cbdg ,nil ;};};if _fdc !=nil &&_fdc .Len ()> 0{if _eebff ,_gee :=_fdc .Get (0).(*_eec .PdfObjectName );_gee {switch *_eebff {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fdc .Len ()==1{return *_eebff ,nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_eebff ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_eebff ,nil ;case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_eebff ,nil ;};};};return "",nil ;};

// GetPage returns the PdfPage model for the specified page number.
func (_cgedac *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _cgedac ._ggagaa .GetCrypter ()!=nil &&!_cgedac ._ggagaa .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};if len (_cgedac ._bcaa )< pageNumber {return nil ,_fe .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");};_deffb :=pageNumber -1;if _deffb < 0{return nil ,_b .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_fadec :=_cgedac .PageList [_deffb ];return _fadec ,nil ;};

// WriteToFile writes the Appender output to file specified by path.
func (_facf *PdfAppender )WriteToFile (outputPath string )error {_bdef ,_adbfa :=_cd .Create (outputPath );if _adbfa !=nil {return _adbfa ;};defer _bdef .Close ();return _facf .Write (_bdef );};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};func (_gafdg *PdfReader )newPdfAnnotationTrapNetFromDict (_bgef *_eec .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_ebbd :=PdfAnnotationTrapNet {};return &_ebbd ,nil ;};func _caded (_fgee _eec .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_fcgc :=NewPdfColorspaceSpecialSeparation ();if _dccb ,_fbgb :=_fgee .(*_eec .PdfIndirectObject );_fbgb {_fcgc ._beaf =_dccb ;};_fgee =_eec .TraceToDirectObject (_fgee );_abcd ,_abgd :=_fgee .(*_eec .PdfObjectArray );if !_abgd {return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _abcd .Len ()!=4{return nil ,_b .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_fgee =_abcd .Get (0);_begf ,_abgd :=_fgee .(*_eec .PdfObjectName );if !_abgd {return nil ,_b .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_begf !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_b .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};_fgee =_abcd .Get (1);_begf ,_abgd =_fgee .(*_eec .PdfObjectName );if !_abgd {return nil ,_b .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");};_fcgc .ColorantName =_begf ;_fgee =_abcd .Get (2);_ffeb ,_aedcc :=NewPdfColorspaceFromPdfObject (_fgee );if _aedcc !=nil {return nil ,_aedcc ;};_fcgc .AlternateSpace =_ffeb ;_affe ,_aedcc :=_bdfbe (_abcd .Get (3));if _aedcc !=nil {return nil ,_aedcc ;};_fcgc .TintTransform =_affe ;return _fcgc ,nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _eec .PdfObject ;NewWindow _eec .PdfObject ;T _eec .PdfObject ;};

// R returns the value of the red component of the color.
func (_eafc *PdfColorDeviceRGB )R ()float64 {return _eafc [0]};

// ToInteger convert to an integer format.
func (_gadc *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_gcbfe :=_fba .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gcbfe *_gadc .A ()),uint32 (_gcbfe *_gadc .B ()),uint32 (_gcbfe *_gadc .C ())};};func (_dddc *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_eec .PdfObjectArray ;Matrix *_eec .PdfObjectArray ;Function []PdfFunction ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _eec .PdfObject ;Mac _eec .PdfObject ;Unix _eec .PdfObject ;NewWindow _eec .PdfObject ;};func _caff (_gbbd _eec .PdfObject )(*PdfColorspaceCalRGB ,error ){_gagge :=NewPdfColorspaceCalRGB ();if _gegc ,_bea :=_gbbd .(*_eec .PdfIndirectObject );_bea {_gagge ._bag =_gegc ;};_gbbd =_eec .TraceToDirectObject (_gbbd );_faac ,_dffg :=_gbbd .(*_eec .PdfObjectArray );if !_dffg {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _faac .Len ()!=2{return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_gbbd =_eec .TraceToDirectObject (_faac .Get (0));_baeb ,_dffg :=_gbbd .(*_eec .PdfObjectName );if !_dffg {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_baeb !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_b .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gbbd =_eec .TraceToDirectObject (_faac .Get (1));_edbe ,_dffg :=_gbbd .(*_eec .PdfObjectDictionary );if !_dffg {return nil ,_b .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_gbbd =_edbe .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gbbd =_eec .TraceToDirectObject (_gbbd );_cege ,_dffg :=_gbbd .(*_eec .PdfObjectArray );if !_dffg {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");};if _cege .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bfgg ,_cggc :=_cege .GetAsFloat64Slice ();if _cggc !=nil {return nil ,_cggc ;};_gagge .WhitePoint =_bfgg ;_gbbd =_edbe .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gbbd !=nil {_gbbd =_eec .TraceToDirectObject (_gbbd );_ddbc ,_ecef :=_gbbd .(*_eec .PdfObjectArray );if !_ecef {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _ddbc .Len ()!=3{return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_beee ,_efea :=_ddbc .GetAsFloat64Slice ();if _efea !=nil {return nil ,_efea ;};_gagge .BlackPoint =_beee ;};_gbbd =_edbe .Get ("\u0047\u0061\u006dm\u0061");if _gbbd !=nil {_gbbd =_eec .TraceToDirectObject (_gbbd );_abcef ,_ddgb :=_gbbd .(*_eec .PdfObjectArray );if !_ddgb {return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _abcef .Len ()!=3{return nil ,_b .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_eefe ,_fbace :=_abcef .GetAsFloat64Slice ();if _fbace !=nil {return nil ,_fbace ;};_gagge .Gamma =_eefe ;};_gbbd =_edbe .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _gbbd !=nil {_gbbd =_eec .TraceToDirectObject (_gbbd );_bcfd ,_ebfgf :=_gbbd .(*_eec .PdfObjectArray );if !_ebfgf {return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _bcfd .Len ()!=9{_bfg .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_bcfd .String ());return nil ,_b .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_befb ,_gdea :=_bcfd .GetAsFloat64Slice ();if _gdea !=nil {return nil ,_gdea ;};_gagge .Matrix =_befb ;};return _gagge ,nil ;};

// SetDate sets the `M` field of the signature.
func (_ececff *PdfSignature )SetDate (date _bf .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_ececff .M =_eec .MakeString (date .Format (format ));};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_adada *OutlineItem )Insert (index uint ,item *OutlineItem ){_dadag :=uint (len (_adada .Entries ));if index > _dadag {index =_dadag ;};_adada .Entries =append (_adada .Entries [:index ],append ([]*OutlineItem {item },_adada .Entries [index :]...)...);};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_cg :=NewPdfAction ();_fec :=&PdfActionSubmitForm {};_fec .PdfAction =_cg ;_cg .SetContext (_fec );return _fec ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_bfbd :=NewPdfAction ();_ecd :=&PdfActionResetForm {};_ecd .PdfAction =_bfbd ;_bfbd .SetContext (_ecd );return _ecd ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _eec .PdfObject ;Flags _eec .PdfObject ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_gfdc *_eec .PdfObjectDictionary ;_bag *_eec .PdfIndirectObject ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_dded *PdfWriter )SetOptimizer (optimizer Optimizer ){_dded ._fgadg =optimizer };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_gfae *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _gfae .Alternate ==nil {if _gfae .N ==1{_fdfb :=NewPdfColorspaceDeviceGray ();return _fdfb .ColorFromFloats (vals );}else if _gfae .N ==3{_ebad :=NewPdfColorspaceDeviceRGB ();return _ebad .ColorFromFloats (vals );}else if _gfae .N ==4{_ggcc :=NewPdfColorspaceDeviceCMYK ();return _ggcc .ColorFromFloats (vals );}else {return nil ,_fe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _gfae .Alternate .ColorFromFloats (vals );};

// Encoder returns the font's text encoder.
func (_gece pdfCIDFontType0 )Encoder ()_fcb .TextEncoder {return _gece ._cadgb };

// GetContentStreams returns the content stream as an array of strings.
func (_ebggc *PdfPage )GetContentStreams ()([]string ,error ){_gbfbcf :=_ebggc .GetContentStreamObjs ();var _fbga []string ;for _ ,_badagb :=range _gbfbcf {_deef ,_aegc :=_gdbgc (_badagb );if _aegc !=nil {return nil ,_aegc ;};_fbga =append (_fbga ,_deef );};return _fbga ,nil ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_gffc *PdfFieldButton )IsCheckbox ()bool {return _gffc .GetType ()==ButtonTypeCheckbox };

// ColorFromFloats returns a new PdfColor based on input color components.
func (_ecgce *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_ecgce .GetNumComponents (){return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccab ,_afddb :=_ecgce .TintTransform .Evaluate (vals );if _afddb !=nil {return nil ,_afddb ;};_eaga ,_afddb :=_ecgce .AlternateSpace .ColorFromFloats (_ccab );if _afddb !=nil {return nil ,_afddb ;};return _eaga ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_agd *PdfActionLaunch )ToPdfObject ()_eec .PdfObject {_agd .PdfAction .ToPdfObject ();_gfb :=_agd ._aa ;_gfg :=_gfb .PdfObject .(*_eec .PdfObjectDictionary );_gfg .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeLaunch )));if _agd .F !=nil {_gfg .Set ("\u0046",_agd .F .ToPdfObject ());};_gfg .SetIfNotNil ("\u0057\u0069\u006e",_agd .Win );_gfg .SetIfNotNil ("\u004d\u0061\u0063",_agd .Mac );_gfg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_agd .Unix );_gfg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_agd .NewWindow );return _gfb ;};

// K returns the value of the key component of the color.
func (_dccee *PdfColorDeviceCMYK )K ()float64 {return _dccee [3]};

// Encoder returns the font's text encoder.
func (_cdffc *PdfFont )Encoder ()_fcb .TextEncoder {_bgdge :=_cdffc .actualFont ();if _bgdge ==nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_cdffc ._baaf );return nil ;};return _bgdge .Encoder ();};

// ToPdfObject implements interface PdfModel.
func (_da *PdfActionResetForm )ToPdfObject ()_eec .PdfObject {_da .PdfAction .ToPdfObject ();_bef :=_da ._aa ;_bec :=_bef .PdfObject .(*_eec .PdfObjectDictionary );_bec .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeResetForm )));_bec .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_da .Fields );_bec .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_da .Flags );return _bef ;};

// ToPdfObject converts date to a PDF string object.
func (_defda *PdfDate )ToPdfObject ()_eec .PdfObject {_eeddg :=_b .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_defda ._bgcc ,_defda ._dbbdc ,_defda ._dbcbf ,_defda ._dbfcf ,_defda ._bebab ,_defda ._gdfec ,_defda ._caab ,_defda ._acbag ,_defda ._dege );return _eec .MakeString (_eeddg );};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};func (_eaba *PdfReader )newPdfAnnotationPrinterMarkFromDict (_acf *_eec .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_ggfc :=PdfAnnotationPrinterMark {};_ggfc .MN =_acf .Get ("\u004d\u004e");return &_ggfc ,nil ;};func _faaf (_acdc *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_acdc }};

// ToPdfObject convert PdfInfo to pdf object.
func (_aega *PdfInfo )ToPdfObject ()_eec .PdfObject {_ddda :=_eec .MakeDict ();_ddda .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_aega .Title );_ddda .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_aega .Author );_ddda .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_aega .Subject );_ddda .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_aega .Keywords );_ddda .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_aega .Creator );_ddda .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_aega .Producer );_ddda .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_aega .Trapped );if _aega .CreationDate !=nil {_ddda .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_aega .CreationDate .ToPdfObject ());};if _aega .ModifiedDate !=nil {_ddda .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_aega .ModifiedDate .ToPdfObject ());};for _ ,_dcbg :=range _aega ._beega .Keys (){_ddda .SetIfNotNil (_dcbg ,_aega ._beega .Get (_dcbg ));};return _ddda ;};

// SetDecode sets the decode image float slice.
func (_abcac *Image )SetDecode (decode []float64 ){_abcac ._cbacg =decode };func (_abba Image )getBase ()_fc .ImageBase {return _fc .NewImageBase (int (_abba .Width ),int (_abba .Height ),int (_abba .BitsPerComponent ),_abba .ColorComponents ,_abba .Data ,_abba ._gfbc ,_abba ._cbacg );};

// WriteString outputs the object as it is to be written to file.
func (_cgbdb *pdfSignDictionary )WriteString ()string {_cgbdb ._dedbeb =0;_cgbdb ._bdgcc =0;_cgbdb ._cebcdc =0;_cgbdb ._dgdc =0;_ageag :=_gf .NewBuffer (nil );_ageag .WriteString ("\u003c\u003c");for _ ,_gedbfg :=range _cgbdb .Keys (){_gcbbb :=_cgbdb .Get (_gedbfg );switch _gedbfg {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_ageag .WriteString (_gedbfg .WriteString ());_ageag .WriteString ("\u0020");_cgbdb ._cebcdc =_ageag .Len ();_ageag .WriteString (_gcbbb .WriteString ());_ageag .WriteString ("\u0020");_cgbdb ._dgdc =_ageag .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_ageag .WriteString (_gedbfg .WriteString ());_ageag .WriteString ("\u0020");_cgbdb ._dedbeb =_ageag .Len ();_ageag .WriteString (_gcbbb .WriteString ());_ageag .WriteString ("\u0020");_cgbdb ._bdgcc =_ageag .Len ()-1;default:_ageag .WriteString (_gedbfg .WriteString ());_ageag .WriteString ("\u0020");_ageag .WriteString (_gcbbb .WriteString ());};};_ageag .WriteString ("\u003e\u003e");return _ageag .String ();};

// ToPdfObject returns the PDF representation of the function.
func (_acfcb *PdfFunctionType3 )ToPdfObject ()_eec .PdfObject {_ccacb :=_eec .MakeDict ();_ccacb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_eec .MakeInteger (3));_gdabc :=&_eec .PdfObjectArray {};for _ ,_bgdag :=range _acfcb .Domain {_gdabc .Append (_eec .MakeFloat (_bgdag ));};_ccacb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gdabc );if _acfcb .Range !=nil {_edddc :=&_eec .PdfObjectArray {};for _ ,_gdbgf :=range _acfcb .Range {_edddc .Append (_eec .MakeFloat (_gdbgf ));};_ccacb .Set ("\u0052\u0061\u006eg\u0065",_edddc );};if _acfcb .Functions !=nil {_gage :=&_eec .PdfObjectArray {};for _ ,_fccb :=range _acfcb .Functions {_gage .Append (_fccb .ToPdfObject ());};_ccacb .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_gage );};if _acfcb .Bounds !=nil {_cgdd :=&_eec .PdfObjectArray {};for _ ,_dcbcg :=range _acfcb .Bounds {_cgdd .Append (_eec .MakeFloat (_dcbcg ));};_ccacb .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_cgdd );};if _acfcb .Encode !=nil {_bagab :=&_eec .PdfObjectArray {};for _ ,_fbec :=range _acfcb .Encode {_bagab .Append (_eec .MakeFloat (_fbec ));};_ccacb .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_bagab );};if _acfcb ._bead !=nil {_acfcb ._bead .PdfObject =_ccacb ;return _acfcb ._bead ;};return _ccacb ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_fbeede *PdfPageResources )HasXObjectByName (keyName _eec .PdfObjectName )bool {_fbedg ,_ :=_fbeede .GetXObjectByName (keyName );return _fbedg !=nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_gcgd *PdfFont )GetCharMetrics (code _fcb .CharCode )(CharMetrics ,bool ){var _dfgf _de .CharMetrics ;switch _faad :=_gcgd ._baaf .(type ){case *pdfFontSimple :if _cbbeg ,_bbfgf :=_faad .GetCharMetrics (code );_bbfgf {return _cbbeg ,_bbfgf ;};case *pdfFontType0 :if _gcbg ,_fcce :=_faad .GetCharMetrics (code );_fcce {return _gcbg ,_fcce ;};case *pdfCIDFontType0 :if _cabb ,_bgdcd :=_faad .GetCharMetrics (code );_bgdcd {return _cabb ,_bgdcd ;};case *pdfCIDFontType2 :if _abed ,_cdgdg :=_faad .GetCharMetrics (code );_cdgdg {return _abed ,_cdgdg ;};default:_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_gcgd ._baaf );return _dfgf ,false ;};if _efefc ,_facd :=_gcgd .GetFontDescriptor ();_facd ==nil &&_efefc !=nil {return _de .CharMetrics {Wx :_efefc ._fbfef },true ;};_bfg .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_gcgd );return _dfgf ,false ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_fgdda *_eec .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_eec .PdfObjectName ;Filter *_eec .PdfObjectName ;SubFilter *_eec .PdfObjectName ;Contents *_eec .PdfObjectString ;Cert _eec .PdfObject ;ByteRange *_eec .PdfObjectArray ;Reference *_eec .PdfObjectArray ;Changes *_eec .PdfObjectArray ;Name *_eec .PdfObjectString ;M *_eec .PdfObjectString ;Location *_eec .PdfObjectString ;Reason *_eec .PdfObjectString ;ContactInfo *_eec .PdfObjectString ;R *_eec .PdfObjectInteger ;V *_eec .PdfObjectInteger ;PropBuild *_eec .PdfObjectDictionary ;PropAuthTime *_eec .PdfObjectInteger ;PropAuthType *_eec .PdfObjectName ;};func (_bdd *PdfReader )newPdfActionTransFromDict (_eag *_eec .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_eag .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_bead *_eec .PdfIndirectObject ;};var (_aafbed _ae .Mutex ;_ddcbf ="";_bgbag _bf .Time ;_eccfa ="";_bbdfb ="";_gagf _bf .Time ;_gbabbc ="";_cgdda ="";_egedc ="";);

// AddWatermarkImage adds a watermark to the page.
func (_accbb *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_aagff ,_gdccg :=_accbb .GetMediaBox ();if _gdccg !=nil {return _gdccg ;};_cgdfd :=_aagff .Urx -_aagff .Llx ;_acedb :=_aagff .Ury -_aagff .Lly ;_acbg :=float64 (*ximg .Width );_cafg :=(_cgdfd -_acbg )/2;if opt .FitToWidth {_acbg =_cgdfd ;_cafg =0;};_geccag :=_acedb ;_cadcc :=float64 (0);if opt .PreserveAspectRatio {_geccag =_acbg *float64 (*ximg .Height )/float64 (*ximg .Width );_cadcc =(_acedb -_geccag )/2;};if _accbb .Resources ==nil {_accbb .Resources =NewPdfPageResources ();};_fbcd :=0;_gacbg :=_eec .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_fbcd ));for _accbb .Resources .HasXObjectByName (_gacbg ){_fbcd ++;_gacbg =_eec .PdfObjectName (_b .Sprintf ("\u0049\u006d\u0077%\u0064",_fbcd ));};_gdccg =_accbb .AddImageResource (_gacbg ,ximg );if _gdccg !=nil {return _gdccg ;};_fbcd =0;_fcgf :=_eec .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_fbcd ));for _accbb .HasExtGState (_fcgf ){_fbcd ++;_fcgf =_eec .PdfObjectName (_b .Sprintf ("\u0047\u0053\u0025\u0064",_fbcd ));};_bfbg :=_eec .MakeDict ();_bfbg .Set ("\u0042\u004d",_eec .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_bfbg .Set ("\u0043\u0041",_eec .MakeFloat (opt .Alpha ));_bfbg .Set ("\u0063\u0061",_eec .MakeFloat (opt .Alpha ));_gdccg =_accbb .AddExtGState (_fcgf ,_bfbg );if _gdccg !=nil {return _gdccg ;};_affb :=_b .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_fcgf ,_acbg ,_geccag ,_cafg ,_cadcc ,_gacbg );_accbb .AddContentStreamByString (_affb );return nil ;};

// CustomKeys returns all custom info keys as list.
func (_eeeff *PdfInfo )CustomKeys ()[]string {if _eeeff ._beega ==nil {return nil ;};_dcff :=make ([]string ,len (_eeeff ._beega .Keys ()));for _ ,_edbfa :=range _eeeff ._beega .Keys (){_dcff =append (_dcff ,_edbfa .String ());};return _dcff ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _bfb .Permissions ;Algorithm EncryptionAlgorithm ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_cdc :=NewPdfAction ();_egf :=&PdfActionHide {};_egf .PdfAction =_cdc ;_cdc .SetContext (_egf );return _egf ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_eec .PdfObjectDictionary )(*PdfPageResources ,error ){_fcaaad :=NewPdfPageResources ();if _faff :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_faff !=nil {_fcaaad .ExtGState =_faff ;};if _bbeb :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");_bbeb !=nil &&!_eec .IsNullObject (_bbeb ){_fcaaad .ColorSpace =_bbeb ;};if _bgecc :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_bgecc !=nil {_fcaaad .Pattern =_bgecc ;};if _fdde :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_fdde !=nil {_fcaaad .Shading =_fdde ;};if _gbfbec :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_gbfbec !=nil {_fcaaad .XObject =_gbfbec ;};if _afaa :=_eec .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_afaa !=nil {_fcaaad .Font =_afaa ;};if _geed :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");_geed !=nil {_fcaaad .ProcSet =_geed ;};if _aabcf :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_aabcf !=nil {_fcaaad .Properties =_aabcf ;};return _fcaaad ,nil ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_fcbb *PdfPage )GetContainingPdfObject ()_eec .PdfObject {return _fcbb ._gbegb };

// IsPush returns true if the button field represents a push button, false otherwise.
func (_daeg *PdfFieldButton )IsPush ()bool {return _daeg .GetType ()==ButtonTypePush };func _eggfc (_dffff _eec .PdfObject )(*PdfPageResourcesColorspaces ,error ){_babgd :=&PdfPageResourcesColorspaces {};if _dfbd ,_eadb :=_dffff .(*_eec .PdfIndirectObject );_eadb {_babgd ._gbfba =_dfbd ;_dffff =_dfbd .PdfObject ;};_ddggd ,_ceefe :=_eec .GetDict (_dffff );if !_ceefe {return nil ,_fe .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_babgd .Names =[]string {};_babgd .Colorspaces =map[string ]PdfColorspace {};for _ ,_dcefe :=range _ddggd .Keys (){_fgccf :=_ddggd .Get (_dcefe );_babgd .Names =append (_babgd .Names ,string (_dcefe ));_bfca ,_bdbg :=NewPdfColorspaceFromPdfObject (_fgccf );if _bdbg !=nil {return nil ,_bdbg ;};_babgd .Colorspaces [string (_dcefe )]=_bfca ;};return _babgd ,nil ;};var _aebb =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _dd .ReadSeeker )(*PdfFont ,error ){const _bdff =_fcb .CharCode (32);const _ggdfa =_fcb .CharCode (255);_dcec ,_abbg :=_gag .ReadAll (r );if _abbg !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_abbg );return nil ,_abbg ;};_dada ,_abbg :=_de .TtfParse (_gf .NewReader (_dcec ));if _abbg !=nil {_bfg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_abbg );return nil ,_abbg ;};_ffded :=&pdfFontSimple {_fgabb :make (map[_fcb .CharCode ]float64 ),fontCommon :fontCommon {_bgga :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_ffded ._acfd =_fcb .NewWinAnsiEncoder ();_ffded ._cefc =_dada .PostScriptName ;_ffded .FirstChar =_eec .MakeInteger (int64 (_bdff ));_ffded .LastChar =_eec .MakeInteger (int64 (_ggdfa ));_cgdfb :=1000.0/float64 (_dada .UnitsPerEm );if len (_dada .Widths )<=0{return nil ,_fe .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_edcfc :=_cgdfb *float64 (_dada .Widths [0]);_aaag :=make ([]float64 ,0,_ggdfa -_bdff +1);for _ecce :=_bdff ;_ecce <=_ggdfa ;_ecce ++{_cagec ,_efcdf :=_ffded .Encoder ().CharcodeToRune (_ecce );if !_efcdf {_bfg .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_ecce );_aaag =append (_aaag ,_edcfc );continue ;};_cdfgf ,_aaffe :=_dada .Chars [_cagec ];if !_aaffe {_bfg .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_aaag =append (_aaag ,_edcfc );continue ;};_badae :=_cgdfb *float64 (_dada .Widths [_cdfgf ]);_aaag =append (_aaag ,_badae );};_ffded .Widths =_eec .MakeIndirectObject (_eec .MakeArrayFromFloats (_aaag ));if len (_aaag )< int (_ggdfa -_bdff +1){_bfg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_aaag ),255-32+1);return nil ,_eec .ErrRangeError ;};for _edceb :=_bdff ;_edceb <=_ggdfa ;_edceb ++{_ffded ._fgabb [_edceb ]=_aaag [_edceb -_bdff ];};_ffded .Encoding =_eec .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_deagf :=&PdfFontDescriptor {};_deagf .FontName =_eec .MakeName (_dada .PostScriptName );_deagf .Ascent =_eec .MakeFloat (_cgdfb *float64 (_dada .TypoAscender ));_deagf .Descent =_eec .MakeFloat (_cgdfb *float64 (_dada .TypoDescender ));_deagf .CapHeight =_eec .MakeFloat (_cgdfb *float64 (_dada .CapHeight ));_deagf .FontBBox =_eec .MakeArrayFromFloats ([]float64 {_cgdfb *float64 (_dada .Xmin ),_cgdfb *float64 (_dada .Ymin ),_cgdfb *float64 (_dada .Xmax ),_cgdfb *float64 (_dada .Ymax )});_deagf .ItalicAngle =_eec .MakeFloat (_dada .ItalicAngle );_deagf .MissingWidth =_eec .MakeFloat (_cgdfb *float64 (_dada .Widths [0]));_dfag ,_abbg :=_eec .MakeStream (_dcec ,_eec .NewFlateEncoder ());if _abbg !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_abbg );return nil ,_abbg ;};_dfag .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_eec .MakeInteger (int64 (len (_dcec ))));_deagf .FontFile2 =_dfag ;if _dada .Bold {_deagf .StemV =_eec .MakeInteger (120);}else {_deagf .StemV =_eec .MakeInteger (70);};_daedd :=_dfdbd ;if _dada .IsFixedPitch {_daedd |=_feab ;};if _dada .ItalicAngle !=0{_daedd |=_fbbg ;};_deagf .Flags =_eec .MakeInteger (int64 (_daedd ));_ffded ._cddbf =_deagf ;_bcbb :=&PdfFont {_baaf :_ffded };return _bcbb ,nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_eec .PdfObjectArray ;Domain *_eec .PdfObjectArray ;Function []PdfFunction ;Extend *_eec .PdfObjectArray ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_febec :=PdfWriter {};_febec ._agdb =map[_eec .PdfObject ]struct{}{};_febec ._gceg =[]_eec .PdfObject {};_febec ._fgdef =map[_eec .PdfObject ][]*_eec .PdfObjectDictionary {};_febec ._debg =map[_eec .PdfObject ]struct{}{};_febec ._effdf =1;_febec ._ebagb =3;_ebdfa :=_eec .MakeDict ();_dfgag :=[]struct{_afebd _eec .PdfObjectName ;_bbgce string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_fcgfa ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cfcgf ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_acdbc ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_eggge ()},{"\u0054\u0069\u0074l\u0065",_gcgac ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_bgfbd ()}};for _ ,_ceegb :=range _dfgag {if _ceegb ._bbgce !=""{_ebdfa .Set (_ceegb ._afebd ,_eec .MakeString (_ceegb ._bbgce ));};};if _baaea :=_geaga ();!_baaea .IsZero (){if _edcfe ,_befaa :=NewPdfDateFromTime (_baaea );_befaa ==nil {_ebdfa .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_edcfe .ToPdfObject ());};};if _ddaeb :=_febde ();!_ddaeb .IsZero (){if _gaeba ,_bgfgf :=NewPdfDateFromTime (_ddaeb );_bgfgf ==nil {_ebdfa .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_gaeba .ToPdfObject ());};};_ebee :=_eec .PdfIndirectObject {};_ebee .PdfObject =_ebdfa ;_febec ._fegdg =&_ebee ;_febec .addObject (&_ebee );_baeec :=_eec .PdfIndirectObject {};_abbgc :=_eec .MakeDict ();_abbgc .Set ("\u0054\u0079\u0070\u0065",_eec .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_baeec .PdfObject =_abbgc ;_febec ._eaef =&_baeec ;_febec .addObject (_febec ._eaef );_aafec ,_babge :=_ddbeg ("\u0077");if _babge !=nil {_bfg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_babge );};_febec ._fbfda =_aafec ;_agceg :=_eec .PdfIndirectObject {};_edbcg :=_eec .MakeDict ();_edbcg .Set ("\u0054\u0079\u0070\u0065",_eec .MakeName ("\u0050\u0061\u0067e\u0073"));_gfbfg :=_eec .PdfObjectArray {};_edbcg .Set ("\u004b\u0069\u0064\u0073",&_gfbfg );_edbcg .Set ("\u0043\u006f\u0075n\u0074",_eec .MakeInteger (0));_agceg .PdfObject =_edbcg ;_febec ._edffb =&_agceg ;_febec ._effa =map[_eec .PdfObject ]struct{}{};_febec .addObject (_febec ._edffb );_abbgc .Set ("\u0050\u0061\u0067e\u0073",&_agceg );_febec ._fbafd =_abbgc ;_bfg .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_baeec );return _febec ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_cdcc *PdfPage )GetContentStreamObjs ()[]_eec .PdfObject {if _cdcc .Contents ==nil {return nil ;};_beda :=_eec .TraceToDirectObject (_cdcc .Contents );if _agcbc ,_eebdb :=_beda .(*_eec .PdfObjectArray );_eebdb {return _agcbc .Elements ();};return []_eec .PdfObject {_beda };};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_fcfa *PdfField )FullName ()(string ,error ){var _fecf _gf .Buffer ;_fgbce :=[]string {};if _fcfa .T !=nil {_fgbce =append (_fgbce ,_fcfa .T .Decoded ());};_egfdf :=map[*PdfField ]bool {};_egfdf [_fcfa ]=true ;_bccb :=_fcfa .Parent ;for _bccb !=nil {if _ ,_efdad :=_egfdf [_bccb ];_efdad {return _fecf .String (),_fe .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _bccb .T ==nil {return _fecf .String (),_fe .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_fgbce =append (_fgbce ,_bccb .T .Decoded ());_egfdf [_bccb ]=true ;_bccb =_bccb .Parent ;};for _fbgbg :=len (_fgbce )-1;_fbgbg >=0;_fbgbg --{_fecf .WriteString (_fgbce [_fbgbg ]);if _fbgbg > 0{_fecf .WriteString ("\u002e");};};return _fecf .String (),nil ;};var (_cddc =_ef .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_aabbe =_ef .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_eeac =_ef .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");_fadaf ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_geab ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_caag ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";);

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_egefb *Outline )Insert (index uint ,item *OutlineItem ){_gdcbb :=uint (len (_egefb .Entries ));if index > _gdcbb {index =_gdcbb ;};_egefb .Entries =append (_egefb .Entries [:index ],append ([]*OutlineItem {item },_egefb .Entries [index :]...)...);};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_acdab *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_eec .StreamEncoder ,error ){_bgabf ,_aefbg :=_acdab ._ggede .(*_eec .PdfObjectStream );if !_aefbg {_bfg .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_acdab ._ggede );return nil ,nil ,_eec .ErrTypeError ;};_bfaga ,_edea :=_eec .DecodeStream (_bgabf );if _edea !=nil {_bfg .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_edea );return nil ,nil ,_edea ;};_beceg ,_edea :=_eec .NewEncoderFromStream (_bgabf );if _edea !=nil {_bfg .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_edea );return nil ,nil ,_edea ;};return _bfaga ,_beceg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfa *PdfAnnotationHighlight )ToPdfObject ()_eec .PdfObject {_dfa .PdfAnnotation .ToPdfObject ();_fcab :=_dfa ._dge ;_geda :=_fcab .PdfObject .(*_eec .PdfObjectDictionary );_dfa .PdfAnnotationMarkup .appendToPdfDictionary (_geda );_geda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));_geda .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dfa .QuadPoints );return _fcab ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_caf *PdfColorspaceDeviceGray )ToPdfObject ()_eec .PdfObject {return _eec .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _eec .PdfObject )(*PdfFilespec ,error ){_dfde :=&PdfFilespec {};var _eeddc *_eec .PdfObjectDictionary ;if _fcbg ,_cffd :=_eec .GetIndirect (obj );_cffd {_dfde ._fdecf =_fcbg ;_dggfe ,_ecad :=_eec .GetDict (_fcbg .PdfObject );if !_ecad {_bfg .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_eec .ErrTypeError ;};_eeddc =_dggfe ;}else if _cbcg ,_caea :=_eec .GetDict (obj );_caea {_dfde ._fdecf =_cbcg ;_eeddc =_cbcg ;}else {_bfg .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_eec .ErrTypeError ;};if _eeddc ==nil {_bfg .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_fe .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _dgfg :=_eeddc .Get ("\u0054\u0079\u0070\u0065");_dgfg !=nil {_eggea ,_bbgcd :=_dgfg .(*_eec .PdfObjectName );if !_bbgcd {_bfg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dgfg );}else {if *_eggea !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_bfg .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_eggea );};};};if _bcgea :=_eeddc .Get ("\u0046\u0053");_bcgea !=nil {_dfde .FS =_bcgea ;};if _def :=_eeddc .Get ("\u0046");_def !=nil {_dfde .F =_def ;};if _edba :=_eeddc .Get ("\u0055\u0046");_edba !=nil {_dfde .UF =_edba ;};if _befbe :=_eeddc .Get ("\u0044\u004f\u0053");_befbe !=nil {_dfde .DOS =_befbe ;};if _feag :=_eeddc .Get ("\u004d\u0061\u0063");_feag !=nil {_dfde .Mac =_feag ;};if _gcfa :=_eeddc .Get ("\u0055\u006e\u0069\u0078");_gcfa !=nil {_dfde .Unix =_gcfa ;};if _efdbd :=_eeddc .Get ("\u0049\u0044");_efdbd !=nil {_dfde .ID =_efdbd ;};if _decac :=_eeddc .Get ("\u0056");_decac !=nil {_dfde .V =_decac ;};if _bedb :=_eeddc .Get ("\u0045\u0046");_bedb !=nil {_dfde .EF =_bedb ;};if _gab :=_eeddc .Get ("\u0052\u0046");_gab !=nil {_dfde .RF =_gab ;};if _aebbg :=_eeddc .Get ("\u0044\u0065\u0073\u0063");_aebbg !=nil {_dfde .Desc =_aebbg ;};if _dabe :=_eeddc .Get ("\u0043\u0049");_dabe !=nil {_dfde .CI =_dabe ;};return _dfde ,nil ;};func _eggge ()string {_aafbed .Lock ();defer _aafbed .Unlock ();return _cgdda };

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_ebgbg *PdfReader )GetNamedDestinations ()(_eec .PdfObject ,error ){_fccbda :=_eec .ResolveReference (_ebgbg ._becgd .Get ("\u004e\u0061\u006de\u0073"));if _fccbda ==nil {return nil ,nil ;};if !_ebgbg ._bceb {_fgbbgd :=_ebgbg .traverseObjectData (_fccbda );if _fgbbgd !=nil {return nil ,_fgbbgd ;};};return _fccbda ,nil ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _bf .Time )(PdfDate ,error ){_cdgdc :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_afgdc ,_ :=_fd .ParseInt (_cdgdc [1:3],10,32);_caec ,_ :=_fd .ParseInt (_cdgdc [4:6],10,32);return PdfDate {_bgcc :int64 (timeObj .Year ()),_dbbdc :int64 (timeObj .Month ()),_dbcbf :int64 (timeObj .Day ()),_dbfcf :int64 (timeObj .Hour ()),_bebab :int64 (timeObj .Minute ()),_gdfec :int64 (timeObj .Second ()),_caab :_cdgdc [0],_acbag :_afgdc ,_dege :_caec },nil ;};func (_adeag *PdfReader )newPdfAnnotationRichMediaFromDict (_begd *_eec .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_eeaf :=&PdfAnnotationRichMedia {};_eeaf .RichMediaSettings =_begd .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_eeaf .RichMediaContent =_begd .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _eeaf ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_fgeea *PdfField )SetContext (ctx PdfModel ){_fgeea ._ecbf =ctx };

// ToPdfObject implements interface PdfModel.
func (_ge *PdfActionURI )ToPdfObject ()_eec .PdfObject {_ge .PdfAction .ToPdfObject ();_ed :=_ge ._aa ;_aec :=_ed .PdfObject .(*_eec .PdfObjectDictionary );_aec .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeURI )));_aec .SetIfNotNil ("\u0055\u0052\u0049",_ge .URI );_aec .SetIfNotNil ("\u0049\u0073\u004da\u0070",_ge .IsMap );return _ed ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_dafc *PdfAppender )UpdateObject (obj _eec .PdfObject ){_dafc .replaceObject (obj ,obj );if _ ,_eddbd :=_dafc ._eede [obj ];!_eddbd {_dafc ._gba =append (_dafc ._gba ,obj );_dafc ._eede [obj ]=struct{}{};};};

// MergePageWith appends page content to source Pdf file page content.
func (_fcff *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_cgaa :=pageNum -1;var _fedab *PdfPage ;for _fgff ,_baa :=range _fcff ._gcfc {if _fgff ==_cgaa {_fedab =_baa ;};};if _fedab ==nil {return _b .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );};if _fedab ._gbegb !=nil &&_fedab ._gbegb .GetParser ()==_fcff ._adbd ._ggagaa {_fedab =_fedab .Duplicate ();_fcff ._gcfc [_cgaa ]=_fedab ;};page =page .Duplicate ();_fdebg (page );_fgea :=_bafd (_fedab );_edab :=_bafd (page );_ddcd :=make (map[_eec .PdfObjectName ]_eec .PdfObjectName );for _ebgec :=range _edab {if _ ,_gfbf :=_fgea [_ebgec ];_gfbf {for _agga :=1;true ;_agga ++{_daca :=_eec .PdfObjectName (string (_ebgec )+_fd .Itoa (_agga ));if _ ,_feed :=_fgea [_daca ];!_feed {_ddcd [_ebgec ]=_daca ;break ;};};};};_dgc ,_gaa :=page .GetContentStreams ();if _gaa !=nil {return _gaa ;};_gaaa ,_gaa :=_fedab .GetContentStreams ();if _gaa !=nil {return _gaa ;};for _gbdbb ,_bae :=range _dgc {for _gffe ,_acg :=range _ddcd {_bae =_beb .Replace (_bae ,"\u002f"+string (_gffe ),"\u002f"+string (_acg ),-1);};_dgc [_gbdbb ]=_bae ;};_gaaa =append (_gaaa ,_dgc ...);if _gdad :=_fedab .SetContentStreams (_gaaa ,_eec .NewFlateEncoder ());_gdad !=nil {return _gdad ;};_fedab ._fadd =append (_fedab ._fadd ,page ._fadd ...);if _fedab .Resources ==nil {_fedab .Resources =NewPdfPageResources ();};if page .Resources !=nil {_fedab .Resources .Font =_fcff .mergeResources (_fedab .Resources .Font ,page .Resources .Font ,_ddcd );_fedab .Resources .XObject =_fcff .mergeResources (_fedab .Resources .XObject ,page .Resources .XObject ,_ddcd );_fedab .Resources .Properties =_fcff .mergeResources (_fedab .Resources .Properties ,page .Resources .Properties ,_ddcd );if _fedab .Resources .ProcSet ==nil {_fedab .Resources .ProcSet =page .Resources .ProcSet ;};_fedab .Resources .Shading =_fcff .mergeResources (_fedab .Resources .Shading ,page .Resources .Shading ,_ddcd );_fedab .Resources .ExtGState =_fcff .mergeResources (_fedab .Resources .ExtGState ,page .Resources .ExtGState ,_ddcd );};_gfce ,_gaa :=_fedab .GetMediaBox ();if _gaa !=nil {return _gaa ;};_bgdg ,_gaa :=page .GetMediaBox ();if _gaa !=nil {return _gaa ;};var _geaa bool ;if _gfce .Llx > _bgdg .Llx {_gfce .Llx =_bgdg .Llx ;_geaa =true ;};if _gfce .Lly > _bgdg .Lly {_gfce .Lly =_bgdg .Lly ;_geaa =true ;};if _gfce .Urx < _bgdg .Urx {_gfce .Urx =_bgdg .Urx ;_geaa =true ;};if _gfce .Ury < _bgdg .Ury {_gfce .Ury =_bgdg .Ury ;_geaa =true ;};if _geaa {_fedab .MediaBox =_gfce ;};return nil ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_ggagaa *_eec .PdfParser ;_babb _eec .PdfObject ;_fgdfg *_eec .PdfIndirectObject ;_ecee *_eec .PdfObjectDictionary ;_bcaa []*_eec .PdfIndirectObject ;PageList []*PdfPage ;_accd int ;_becgd *_eec .PdfObjectDictionary ;_dcdcg *PdfOutlineTreeNode ;AcroForm *PdfAcroForm ;DSS *DSS ;_cdafg *modelManager ;_bceb bool ;_beae map[_eec .PdfObject ]struct{};_fgdab _dd .ReadSeeker ;_abcgb string ;};func (_aaaf *PdfReader )newPdfActionMovieFromDict (_ebef *_eec .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_ebef .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_ebef .Get ("\u0054"),Operation :_ebef .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;};func _bdfd (_babg string )(map[_fcb .CharCode ]_fcb .GlyphName ,error ){_dgdg :=_beb .Split (_babg ,"\u000a");_fcdf :=make (map[_fcb .CharCode ]_fcb .GlyphName );for _ ,_faggc :=range _dgdg {_bbcb :=_eeac .FindStringSubmatch (_faggc );if _bbcb ==nil {continue ;};_cbaab ,_cfcg :=_bbcb [1],_bbcb [2];_cdac ,_cdcdb :=_fd .Atoi (_cbaab );if _cdcdb !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_faggc );return nil ,_eec .ErrTypeError ;};_fcdf [_fcb .CharCode (_cdac )]=_fcb .GlyphName (_cfcg );};_bfg .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_fcdf );return _fcdf ,nil ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_dcdge :=&XObjectForm {};_dedd :=&_eec .PdfObjectStream {};_dedd .PdfObjectDictionary =_eec .MakeDict ();_dcdge ._edeb =_dedd ;return _dcdge ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_ebagf :=&PdfSignature {Type :_eec .MakeName ("\u0053\u0069\u0067"),Handler :handler };_bcdda :=&pdfSignDictionary {PdfObjectDictionary :_eec .MakeDict (),_fffdd :&handler ,_eegbf :_ebagf };_ebagf ._fgdda =_eec .MakeIndirectObject (_bcdda );return _ebagf ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_daecc *PdfColorspaceCalGray )ToPdfObject ()_eec .PdfObject {_cdde :=&_eec .PdfObjectArray {};_cdde .Append (_eec .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_fgfd :=_eec .MakeDict ();if _daecc .WhitePoint !=nil {_fgfd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_eec .MakeArray (_eec .MakeFloat (_daecc .WhitePoint [0]),_eec .MakeFloat (_daecc .WhitePoint [1]),_eec .MakeFloat (_daecc .WhitePoint [2])));}else {_bfg .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _daecc .BlackPoint !=nil {_fgfd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_eec .MakeArray (_eec .MakeFloat (_daecc .BlackPoint [0]),_eec .MakeFloat (_daecc .BlackPoint [1]),_eec .MakeFloat (_daecc .BlackPoint [2])));};_fgfd .Set ("\u0047\u0061\u006dm\u0061",_eec .MakeFloat (_daecc .Gamma ));_cdde .Append (_fgfd );if _daecc ._fecd !=nil {_daecc ._fecd .PdfObject =_cdde ;return _daecc ._fecd ;};return _cdde ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// Evaluate runs the function on the passed in slice and returns the results.
func (_bacd *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_bfg .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gffee :=[]float64 {0.0};if _bacd .C0 !=nil {_gffee =_bacd .C0 ;};_fbgcf :=[]float64 {1.0};if _bacd .C1 !=nil {_fbgcf =_bacd .C1 ;};var _ecga []float64 ;for _ggbcb :=0;_ggbcb < len (_gffee );_ggbcb ++{_cafdf :=_gffee [_ggbcb ]+_fba .Pow (x [0],_bacd .N )*(_fbgcf [_ggbcb ]-_gffee [_ggbcb ]);_ecga =append (_ecga ,_cafdf );};return _ecga ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eeab *PdfAnnotationScreen )ToPdfObject ()_eec .PdfObject {_eeab .PdfAnnotation .ToPdfObject ();_cbba :=_eeab ._dge ;_cfag :=_cbba .PdfObject .(*_eec .PdfObjectDictionary );_cfag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));_cfag .SetIfNotNil ("\u0054",_eeab .T );_cfag .SetIfNotNil ("\u004d\u004b",_eeab .MK );_cfag .SetIfNotNil ("\u0041",_eeab .A );_cfag .SetIfNotNil ("\u0041\u0041",_eeab .AA );return _cbba ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_dbecf *PdfColorLab )GetNumComponents ()int {return 3};

// ToPdfObject implements interface PdfModel.
func (_fdec *PdfAnnotationStamp )ToPdfObject ()_eec .PdfObject {_fdec .PdfAnnotation .ToPdfObject ();_cdgd :=_fdec ._dge ;_gae :=_cdgd .PdfObject .(*_eec .PdfObjectDictionary );_fdec .PdfAnnotationMarkup .appendToPdfDictionary (_gae );_gae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0053\u0074\u0061m\u0070"));_gae .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fdec .Name );return _cdgd ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_egfba *PdfPage )ToPdfObject ()_eec .PdfObject {_edbg :=_egfba ._gbegb ;_egfba .GetPageDict ();return _edbg ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_bbaa *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _bbaa ._cdbgf .(*PdfShadingPattern );};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_eec .PdfObjectArray ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_cbeb *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_gedg ,_dfcd :=color .(*PdfColorDeviceGray );if !_dfcd {_bfg .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_gedg ),float64 (*_gedg ),float64 (*_gedg )),nil ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_cbf :=NewPdfAnnotation ();_cgag :=&PdfAnnotationProjection {};_cgag .PdfAnnotation =_cbf ;_cgag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbf .SetContext (_cgag );return _cgag ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_deac *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_abdgd ,_befec :=_eec .GetDict (_deac ._fbafd .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_befec {_abdgd =_eec .MakeDict ();_deac ._fbafd .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_abdgd );};_aadce ,_befec :=_eec .GetDict (_abdgd .Get (_eec .PdfObjectName (extName )));if !_befec {_aadce =_eec .MakeDict ();_abdgd .Set (_eec .PdfObjectName (extName ),_aadce );};if _cgca ,_ :=_eec .GetNameVal (_aadce .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));_cgca !=baseVersion {_aadce .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_eec .MakeName (baseVersion ));};if _ffbg ,_ :=_eec .GetIntVal (_aadce .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));_ffbg !=extLevel {_aadce .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_eec .MakeInteger (int64 (extLevel )));};};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_bbba *PdfTilingPattern )ToPdfObject ()_eec .PdfObject {_bbba .PdfPattern .ToPdfObject ();_geef :=_bbba .getDict ();if _bbba .PaintType !=nil {_geef .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_bbba .PaintType );};if _bbba .TilingType !=nil {_geef .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_bbba .TilingType );};if _bbba .BBox !=nil {_geef .Set ("\u0042\u0042\u006f\u0078",_bbba .BBox .ToPdfObject ());};if _bbba .XStep !=nil {_geef .Set ("\u0058\u0053\u0074e\u0070",_bbba .XStep );};if _bbba .YStep !=nil {_geef .Set ("\u0059\u0053\u0074e\u0070",_bbba .YStep );};if _bbba .Resources !=nil {_geef .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bbba .Resources .ToPdfObject ());};if _bbba .Matrix !=nil {_geef .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bbba .Matrix );};return _bbba ._ggede ;};

// GetBorderWidth returns the border style's width.
func (_cgcd *PdfBorderStyle )GetBorderWidth ()float64 {if _cgcd .W ==nil {return 1;};return *_cgcd .W ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// Height returns the height of `rect`.
func (_fggeg *PdfRectangle )Height ()float64 {return _fba .Abs (_fggeg .Ury -_fggeg .Lly )};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};func (_bfda *PdfReader )newPdfAnnotationScreenFromDict (_dddgb *_eec .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_cbde :=PdfAnnotationScreen {};_cbde .T =_dddgb .Get ("\u0054");_cbde .MK =_dddgb .Get ("\u004d\u004b");_cbde .A =_dddgb .Get ("\u0041");_cbde .AA =_dddgb .Get ("\u0041\u0041");return &_cbde ,nil ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_cgcff *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _agacd []*PdfOutlineTreeNode ;var _abee []string ;var _cgfe func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_cgfe =func (_gcage *PdfOutlineTreeNode ,_fgffg *[]*PdfOutlineTreeNode ,_ccabc *[]string ,_eabe int ){if _gcage ==nil {return ;};if _gcage ._geaac ==nil {_bfg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_bcdaf ,_abfe :=_gcage ._geaac .(*PdfOutlineItem );if _abfe {*_fgffg =append (*_fgffg ,&_bcdaf .PdfOutlineTreeNode );_gffad :=_beb .Repeat ("\u0020",_eabe *2)+_bcdaf .Title .Decoded ();*_ccabc =append (*_ccabc ,_gffad );};if _gcage .First !=nil {_cgegd :=_beb .Repeat ("\u0020",_eabe *2)+"\u002b";*_ccabc =append (*_ccabc ,_cgegd );_cgfe (_gcage .First ,_fgffg ,_ccabc ,_eabe +1);};if _abfe &&_bcdaf .Next !=nil {_cgfe (_bcdaf .Next ,_fgffg ,_ccabc ,_eabe );};};_cgfe (_cgcff ._dcdcg ,&_agacd ,&_abee ,0);return _agacd ,_abee ,nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_fdca *PdfShading )GetContext ()PdfModel {return _fdca ._gdcdb };

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_fbceg *PdfPageResourcesColorspaces )Set (key _eec .PdfObjectName ,val PdfColorspace ){if _ ,_gegb :=_fbceg .Colorspaces [string (key )];!_gegb {_fbceg .Names =append (_fbceg .Names ,string (key ));};_fbceg .Colorspaces [string (key )]=val ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_geddb *PdfAcroForm )GetContainingPdfObject ()_eec .PdfObject {return _geddb ._eggd };

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_fbab *modelManager )GetModelFromPrimitive (primitive _eec .PdfObject )PdfModel {model ,_fdfcd :=_fbab ._bfageb [primitive ];if !_fdfcd {return nil ;};return model ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_cdabc *PdfAcroForm )ToPdfObject ()_eec .PdfObject {_cgfce :=_cdabc ._eggd ;_dbbdb :=_cgfce .PdfObject .(*_eec .PdfObjectDictionary );if _cdabc .Fields !=nil {_dfdc :=_eec .PdfObjectArray {};for _ ,_egbbc :=range *_cdabc .Fields {_adfe :=_egbbc .GetContext ();if _adfe !=nil {_dfdc .Append (_adfe .ToPdfObject ());}else {_dfdc .Append (_egbbc .ToPdfObject ());};};_dbbdb .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_dfdc );};if _cdabc .NeedAppearances !=nil {_dbbdb .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_cdabc .NeedAppearances );};if _cdabc .SigFlags !=nil {_dbbdb .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_cdabc .SigFlags );};if _cdabc .CO !=nil {_dbbdb .Set ("\u0043\u004f",_cdabc .CO );};if _cdabc .DR !=nil {_dbbdb .Set ("\u0044\u0052",_cdabc .DR .ToPdfObject ());};if _cdabc .DA !=nil {_dbbdb .Set ("\u0044\u0041",_cdabc .DA );};if _cdabc .Q !=nil {_dbbdb .Set ("\u0051",_cdabc .Q );};if _cdabc .XFA !=nil {_dbbdb .Set ("\u0058\u0046\u0041",_cdabc .XFA );};return _cgfce ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_fdfeg *PdfColorspaceLab )DecodeArray ()[]float64 {_aeegg :=[]float64 {0,100};if _fdfeg .Range !=nil &&len (_fdfeg .Range )==4{_aeegg =append (_aeegg ,_fdfeg .Range ...);}else {_aeegg =append (_aeegg ,-100,100,-100,100);};return _aeegg ;};

// Add appends an outline item as a child of the current outline item.
func (_cgcde *OutlineItem )Add (item *OutlineItem ){_cgcde .Entries =append (_cgcde .Entries ,item )};func _beag (_cecf *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_cecf }};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dadc *PdfShading )ToPdfObject ()_eec .PdfObject {_gdaf :=_dadc ._fbeg ;_dgdae ,_beagc :=_dadc .getShadingDict ();if _beagc !=nil {_bfg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _dadc .ShadingType !=nil {_dgdae .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_dadc .ShadingType );};if _dadc .ColorSpace !=nil {_dgdae .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_dadc .ColorSpace .ToPdfObject ());};if _dadc .Background !=nil {_dgdae .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_dadc .Background );};if _dadc .BBox !=nil {_dgdae .Set ("\u0042\u0042\u006f\u0078",_dadc .BBox .ToPdfObject ());};if _dadc .AntiAlias !=nil {_dgdae .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_dadc .AntiAlias );};return _gdaf ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_bddbf *LTV )EnableAll (extraCerts []*_ga .Certificate )error {_gfbdg :=_bddbf ._bcagf ._adbd .AcroForm ;for _ ,_acda :=range _gfbdg .AllFields (){_beggc ,_ :=_acda .GetContext ().(*PdfFieldSignature );if _beggc ==nil {continue ;};_efcfdd :=_beggc .V ;if _agbfbf :=_bddbf .validateSig (_efcfdd );_agbfbf !=nil {_bfg .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_agbfbf );};if _afbfb :=_bddbf .Enable (_efcfdd ,extraCerts );_afbfb !=nil {return _afbfb ;};};return nil ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_acbga :=&PdfPageResourcesColorspaces {};_acbga .Names =[]string {};_acbga .Colorspaces =map[string ]PdfColorspace {};_acbga ._gbfba =&_eec .PdfIndirectObject {};return _acbga ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_aafbed .Lock ();defer _aafbed .Unlock ();_ddcbf =author };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fbgfc *PdfShadingType1 )ToPdfObject ()_eec .PdfObject {_fbgfc .PdfShading .ToPdfObject ();_cfaga ,_gaccd :=_fbgfc .getShadingDict ();if _gaccd !=nil {_bfg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _fbgfc .Domain !=nil {_cfaga .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fbgfc .Domain );};if _fbgfc .Matrix !=nil {_cfaga .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fbgfc .Matrix );};if _fbgfc .Function !=nil {if len (_fbgfc .Function )==1{_cfaga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbgfc .Function [0].ToPdfObject ());}else {_gedcda :=_eec .MakeArray ();for _ ,_eafcbb :=range _fbgfc .Function {_gedcda .Append (_eafcbb .ToPdfObject ());};_cfaga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gedcda );};};return _fbgfc ._fbeg ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_gbfbb *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_fdfc :=_efe .NewReader (img .getBase ());_gefgg :=_fc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._gfbc ,img ._cbacg );_bdgf :=_efe .NewWriter (_gefgg );_bebc :=_fba .Pow (2,float64 (img .BitsPerComponent ))-1;_bfafe :=_gbfbb .GetNumComponents ();_gbdaf :=make ([]uint32 ,_bfafe );_aadgf :=make ([]float64 ,_bfafe );for {_ffdff :=_fdfc .ReadSamples (_gbdaf );if _ffdff ==_dd .EOF {break ;}else if _ffdff !=nil {return img ,_ffdff ;};for _gdab :=0;_gdab < _bfafe ;_gdab ++{_eaed :=float64 (_gbdaf [_gdab ])/_bebc ;_aadgf [_gdab ]=_eaed ;};_efgf ,_ffdff :=_gbfbb .TintTransform .Evaluate (_aadgf );if _ffdff !=nil {return img ,_ffdff ;};for _ ,_dfdac :=range _efgf {_dfdac =_fba .Min (_fba .Max (0,_dfdac ),1.0);if _ffdff =_bdgf .WriteSample (uint32 (_dfdac *_bebc ));_ffdff !=nil {return img ,_ffdff ;};};};return _gbfbb .AlternateSpace .ImageToRGB (_bffcg (&_gefgg ));};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_aedc *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cdce *PdfColorspaceSpecialPattern )ToPdfObject ()_eec .PdfObject {if _cdce .UnderlyingCS ==nil {return _eec .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_egef :=_eec .MakeArray (_eec .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_egef .Append (_cdce .UnderlyingCS .ToPdfObject ());if _cdce ._aadea !=nil {_cdce ._aadea .PdfObject =_egef ;return _cdce ._aadea ;};return _egef ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_ecfg :=&PdfColorspaceLab {};_ecfg .BlackPoint =[]float64 {0.0,0.0,0.0};_ecfg .Range =[]float64 {-100,100,-100,100};return _ecfg ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _eec .PdfObject ;V _eec .PdfObject ;};func (_cecd *pdfFontType0 )baseFields ()*fontCommon {return &_cecd .fontCommon };

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_eec .PdfIndirectObject )*PdfOutlineItem {_eggfa :=PdfOutlineItem {};_eggfa ._geaac =&_eggfa ;_eggfa .Title =_eec .MakeString (title );_aadd :=_eec .MakeArray ();_aadd .Append (page );_aadd .Append (_eec .MakeName ("\u0046\u0069\u0074"));_eggfa .Dest =_aadd ;return &_eggfa ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_fgafg *PdfFont )CharcodesToUnicode (charcodes []_fcb .CharCode )[]rune {_bdfb ,_ ,_ :=_fgafg .CharcodesToUnicodeWithStats (charcodes );return _bdfb ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _eec .PdfObjectArray )(*PdfRectangle ,error ){_egede :=PdfRectangle {};if arr .Len ()!=4{return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");};var _ffgec error ;_egede .Llx ,_ffgec =_eec .GetNumberAsFloat (arr .Get (0));if _ffgec !=nil {return nil ,_ffgec ;};_egede .Lly ,_ffgec =_eec .GetNumberAsFloat (arr .Get (1));if _ffgec !=nil {return nil ,_ffgec ;};_egede .Urx ,_ffgec =_eec .GetNumberAsFloat (arr .Get (2));if _ffgec !=nil {return nil ,_ffgec ;};_egede .Ury ,_ffgec =_eec .GetNumberAsFloat (arr .Get (3));if _ffgec !=nil {return nil ,_ffgec ;};return &_egede ,nil ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _bf .Time ){_aafbed .Lock ();defer _aafbed .Unlock ();_bgbag =creationDate ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;func _cfcgf ()string {_aafbed .Lock ();defer _aafbed .Unlock ();if len (_eccfa )> 0{return _eccfa ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};func _egbec (_cegf _eec .PdfObject )(*PdfFontDescriptor ,error ){_fdbe :=&PdfFontDescriptor {};_cegf =_eec .ResolveReference (_cegf );if _fgec ,_ccda :=_cegf .(*_eec .PdfIndirectObject );_ccda {_fdbe ._eeedb =_fgec ;_cegf =_fgec .PdfObject ;};_bbcd ,_feef :=_eec .GetDict (_cegf );if !_feef {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cegf );return nil ,_eec .ErrTypeError ;};if _abcbb :=_bbcd .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_abcbb !=nil {_fdbe .FontName =_abcbb ;}else {_bfg .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");};_efbd ,_ :=_eec .GetName (_fdbe .FontName );if _bagb :=_bbcd .Get ("\u0054\u0079\u0070\u0065");_bagb !=nil {_ddfe ,_aced :=_bagb .(*_eec .PdfObjectName );if !_aced ||string (*_ddfe )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_bfg .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_bagb ,_efbd ,_fdbe .FontName );};}else {_bfg .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_efbd ,_fdbe .FontName );};_fdbe .FontFamily =_bbcd .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_fdbe .FontStretch =_bbcd .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_fdbe .FontWeight =_bbcd .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");_fdbe .Flags =_bbcd .Get ("\u0046\u006c\u0061g\u0073");_fdbe .FontBBox =_bbcd .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_fdbe .ItalicAngle =_bbcd .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_fdbe .Ascent =_bbcd .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");_fdbe .Descent =_bbcd .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_fdbe .Leading =_bbcd .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_fdbe .CapHeight =_bbcd .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_fdbe .XHeight =_bbcd .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");_fdbe .StemV =_bbcd .Get ("\u0053\u0074\u0065m\u0056");_fdbe .StemH =_bbcd .Get ("\u0053\u0074\u0065m\u0048");_fdbe .AvgWidth =_bbcd .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_fdbe .MaxWidth =_bbcd .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");_fdbe .MissingWidth =_bbcd .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_fdbe .FontFile =_bbcd .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_fdbe .FontFile2 =_bbcd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");_fdbe .FontFile3 =_bbcd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_fdbe .CharSet =_bbcd .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_fdbe .Style =_bbcd .Get ("\u0053\u0074\u0079l\u0065");_fdbe .Lang =_bbcd .Get ("\u004c\u0061\u006e\u0067");_fdbe .FD =_bbcd .Get ("\u0046\u0044");_fdbe .CIDSet =_bbcd .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _fdbe .Flags !=nil {if _dcdedd ,_gdffd :=_eec .GetIntVal (_fdbe .Flags );_gdffd {_fdbe ._fcdcb =_dcdedd ;};};if _fdbe .MissingWidth !=nil {if _badgg ,_bgcd :=_eec .GetNumberAsFloat (_fdbe .MissingWidth );_bgcd ==nil {_fdbe ._fbfef =_badgg ;};};if _fdbe .FontFile !=nil {_eabf ,_cdbdf :=_dfbfc (_fdbe .FontFile );if _cdbdf !=nil {return _fdbe ,_cdbdf ;};_bfg .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_eabf );_fdbe .fontFile =_eabf ;};if _fdbe .FontFile2 !=nil {_cadb ,_cdaf :=_de .NewFontFile2FromPdfObject (_fdbe .FontFile2 );if _cdaf !=nil {return _fdbe ,_cdaf ;};_bfg .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_cadb .String ());_fdbe ._bbea =&_cadb ;};return _fdbe ,nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_ceaaf *PdfPage )AppendContentStream (contentStr string )error {_fdad ,_fcdaf :=_ceaaf .GetContentStreams ();if _fcdaf !=nil {return _fcdaf ;};if len (_fdad )==0{_fdad =[]string {contentStr };return _ceaaf .SetContentStreams (_fdad ,_eec .NewFlateEncoder ());};var _geae _gf .Buffer ;_geae .WriteString (_fdad [len (_fdad )-1]);_geae .WriteString ("\u000a");_geae .WriteString (contentStr );_fdad [len (_fdad )-1]=_geae .String ();return _ceaaf .SetContentStreams (_fdad ,_eec .NewFlateEncoder ());};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_aebee *PdfOutline )ToPdfObject ()_eec .PdfObject {_aegba :=_aebee ._aagc ;_bcbcc :=_aegba .PdfObject .(*_eec .PdfObjectDictionary );_bcbcc .Set ("\u0054\u0079\u0070\u0065",_eec .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _aebee .First !=nil {_bcbcc .Set ("\u0046\u0069\u0072s\u0074",_aebee .First .ToPdfObject ());};if _aebee .Last !=nil {_bcbcc .Set ("\u004c\u0061\u0073\u0074",_aebee .Last .GetContext ().GetContainingPdfObject ());};if _aebee .Parent !=nil {_bcbcc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aebee .Parent .GetContext ().GetContainingPdfObject ());};if _aebee .Count !=nil {_bcbcc .Set ("\u0043\u006f\u0075n\u0074",_eec .MakeInteger (*_aebee .Count ));};return _aegba ;};func _dfbfc (_dfff _eec .PdfObject )(*fontFile ,error ){_bfg .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_dfff );_cccab :=&fontFile {};_dfff =_eec .TraceToDirectObject (_dfff );_aaadb ,_abgfg :=_dfff .(*_eec .PdfObjectStream );if !_abgfg {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_dfff );return nil ,_eec .ErrTypeError ;};_gege :=_aaadb .PdfObjectDictionary ;_acae ,_ffgcf :=_eec .DecodeStream (_aaadb );if _ffgcf !=nil {return nil ,_ffgcf ;};_fcgca ,_abgfg :=_eec .GetNameVal (_gege .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_abgfg {_cccab ._dbgb =_fcgca ;if _fcgca =="\u0054\u0079\u0070\u0065\u0031\u0043"{_bfg .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");return nil ,ErrType1CFontNotSupported ;};};_ecfc ,_ :=_eec .GetIntVal (_gege .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_ebfcb ,_ :=_eec .GetIntVal (_gege .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _ecfc > len (_acae ){_ecfc =len (_acae );};if _ecfc +_ebfcb > len (_acae ){_ebfcb =len (_acae )-_ecfc ;};_ceca :=_acae [:_ecfc ];var _gfcf []byte ;if _ebfcb > 0{_gfcf =_acae [_ecfc :_ecfc +_ebfcb ];};if _ecfc > 0&&_ebfcb > 0{_adba :=_cccab .loadFromSegments (_ceca ,_gfcf );if _adba !=nil {return nil ,_adba ;};};return _cccab ,nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _eec .PdfObject ;LE _eec .PdfObject ;BS _eec .PdfObject ;IC _eec .PdfObject ;BE _eec .PdfObject ;IT _eec .PdfObject ;Measure _eec .PdfObject ;};func (_bfeg *PdfReader )newPdfAnnotationHighlightFromDict (_cgec *_eec .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_daae :=PdfAnnotationHighlight {};_gbb ,_dacb :=_bfeg .newPdfAnnotationMarkupFromDict (_cgec );if _dacb !=nil {return nil ,_dacb ;};_daae .PdfAnnotationMarkup =_gbb ;_daae .QuadPoints =_cgec .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_daae ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gb *PdfActionGoToE )ToPdfObject ()_eec .PdfObject {_gb .PdfAction .ToPdfObject ();_aeg :=_gb ._aa ;_bgf :=_aeg .PdfObject .(*_eec .PdfObjectDictionary );_bgf .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeGoToE )));if _gb .F !=nil {_bgf .Set ("\u0046",_gb .F .ToPdfObject ());};_bgf .SetIfNotNil ("\u0044",_gb .D );_bgf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gb .NewWindow );_bgf .SetIfNotNil ("\u0054",_gb .T );return _aeg ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_ffdeba *PdfPageResources )ToPdfObject ()_eec .PdfObject {_abgde :=_ffdeba ._daab ;_abgde .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ffdeba .ExtGState );if _ffdeba ._efgdg !=nil {_ffdeba .ColorSpace =_ffdeba ._efgdg .ToPdfObject ();};_abgde .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ffdeba .ColorSpace );_abgde .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_ffdeba .Pattern );_abgde .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ffdeba .Shading );_abgde .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_ffdeba .XObject );_abgde .SetIfNotNil ("\u0046\u006f\u006e\u0074",_ffdeba .Font );_abgde .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_ffdeba .ProcSet );_abgde .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_ffdeba .Properties );return _abgde ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _eec .PdfObject ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_gfggb *PdfPage )SetContentStreams (cStreams []string ,encoder _eec .StreamEncoder )error {if len (cStreams )==0{_gfggb .Contents =nil ;return nil ;};if encoder ==nil {encoder =_eec .NewRawEncoder ();};var _fdfad []*_eec .PdfObjectStream ;for _ ,_cbfdd :=range cStreams {_ggdfe :=&_eec .PdfObjectStream {};_gbfbf :=encoder .MakeStreamDict ();_fgade ,_degg :=encoder .EncodeBytes ([]byte (_cbfdd ));if _degg !=nil {return _degg ;};_gbfbf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_eec .MakeInteger (int64 (len (_fgade ))));_ggdfe .PdfObjectDictionary =_gbfbf ;_ggdfe .Stream =_fgade ;_fdfad =append (_fdfad ,_ggdfe );};if len (_fdfad )==1{_gfggb .Contents =_fdfad [0];}else {_edfdb :=_eec .MakeArray ();for _ ,_bcggc :=range _fdfad {_edfdb .Append (_bcggc );};_gfggb .Contents =_edfdb ;};return nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// GetNumComponents returns the number of color components (3 for RGB).
func (_bfce *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_cbef *PdfPageResources )GetXObjectImageByName (keyName _eec .PdfObjectName )(*XObjectImage ,error ){_fffc ,_gbgaf :=_cbef .GetXObjectByName (keyName );if _fffc ==nil {return nil ,nil ;};if _gbgaf !=XObjectTypeImage {return nil ,_fe .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");};_egbfb ,_eabb :=NewXObjectImageFromStream (_fffc );if _eabb !=nil {return nil ,_eabb ;};return _egbfb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebge *PdfAnnotationFreeText )ToPdfObject ()_eec .PdfObject {_ebge .PdfAnnotation .ToPdfObject ();_acbb :=_ebge ._dge ;_bee :=_acbb .PdfObject .(*_eec .PdfObjectDictionary );_ebge .PdfAnnotationMarkup .appendToPdfDictionary (_bee );_bee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));_bee .SetIfNotNil ("\u0044\u0041",_ebge .DA );_bee .SetIfNotNil ("\u0051",_ebge .Q );_bee .SetIfNotNil ("\u0052\u0043",_ebge .RC );_bee .SetIfNotNil ("\u0044\u0053",_ebge .DS );_bee .SetIfNotNil ("\u0043\u004c",_ebge .CL );_bee .SetIfNotNil ("\u0049\u0054",_ebge .IT );_bee .SetIfNotNil ("\u0042\u0045",_ebge .BE );_bee .SetIfNotNil ("\u0052\u0044",_ebge .RD );_bee .SetIfNotNil ("\u0042\u0053",_ebge .BS );_bee .SetIfNotNil ("\u004c\u0045",_ebge .LE );return _acbb ;};func _edgdg (_bbbaea []byte )([]byte ,error ){_bgdef :=_e .New ();if _ ,_gffag :=_dd .Copy (_bgdef ,_gf .NewReader (_bbbaea ));_gffag !=nil {return nil ,_gffag ;};return _bgdef .Sum (nil ),nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_bfdf *PdfFieldButton )GetType ()ButtonType {_gdadda :=ButtonTypeCheckbox ;if _bfdf .Ff !=nil {if (uint32 (*_bfdf .Ff )&FieldFlagPushbutton .Mask ())> 0{_gdadda =ButtonTypePush ;}else if (uint32 (*_bfdf .Ff )&FieldFlagRadio .Mask ())> 0{_gdadda =ButtonTypeRadio ;};};return _gdadda ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _eec .PdfObject ;Name _eec .PdfObject ;State _eec .PdfObject ;StateModel _eec .PdfObject ;};func _bdecf (_bbcc _eec .PdfObject ){_bfg .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_bbcc ,_bbcc .String ());if _bgbce ,_ecaab :=_bbcc .(*_eec .PdfObjectStream );_ecaab {_bfgfg ,_ebafa :=_eec .DecodeStream (_bgbce );if _ebafa !=nil {_bfg .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_ebafa );return ;};_bfg .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_bfgfg );}else if _gafe ,_bgead :=_bbcc .(*_eec .PdfIndirectObject );_bgead {_bfg .Log .Debug ("\u0025\u0054\u0020%\u0076",_gafe .PdfObject ,_gafe .PdfObject );_bfg .Log .Debug ("\u0025\u0073",_gafe .PdfObject .String ());};};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_cdae :=PdfColorDeviceGray (grayVal );return &_cdae ;};func (_fbfaa fontCommon )coreString ()string {_abebb :="";if _fbfaa ._cddbf !=nil {_abebb =_fbfaa ._cddbf .String ();};return _b .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_fbfaa ._bgga ,_fbfaa ._cefc ,_fbfaa ._bade ,_fbfaa ._gfefa ,_fbfaa ._fbgg !=nil ,_fbfaa .fontFlags (),_abebb );};func (_gcfg *PdfWriter )addObjects (_ebedc _eec .PdfObject )error {_bfg .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _gefba ,_gaada :=_ebedc .(*_eec .PdfIndirectObject );_gaada {_bfg .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_bfg .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_ebedc ,_gefba );_bfg .Log .Trace ("\u002d\u0020\u0025\u0073",_gefba .PdfObject );if _gcfg .addObject (_gefba ){_fecdb :=_gcfg .addObjects (_gefba .PdfObject );if _fecdb !=nil {return _fecdb ;};};return nil ;};if _agdbe ,_bfaed :=_ebedc .(*_eec .PdfObjectStream );_bfaed {_bfg .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_bfg .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_ebedc ,_ebedc );if _gcfg .addObject (_agdbe ){_cfdaf :=_gcfg .addObjects (_agdbe .PdfObjectDictionary );if _cfdaf !=nil {return _cfdaf ;};};return nil ;};if _dcdg ,_adcdd :=_ebedc .(*_eec .PdfObjectDictionary );_adcdd {_bfg .Log .Trace ("\u0044\u0069\u0063\u0074");_bfg .Log .Trace ("\u002d\u0020\u0025\u0073",_ebedc );for _ ,_gddca :=range _dcdg .Keys (){_gfacg :=_dcdg .Get (_gddca );if _defe ,_egdf :=_gfacg .(*_eec .PdfObjectReference );_egdf {_gfacg =_defe .Resolve ();_dcdg .Set (_gddca ,_gfacg );};if _gddca !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _gfcd :=_gcfg .addObjects (_gfacg );_gfcd !=nil {return _gfcd ;};}else {if _ ,_cecef :=_gfacg .(*_eec .PdfObjectNull );_cecef {continue ;};if _gafcd :=_gcfg .hasObject (_gfacg );!_gafcd {_bfg .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_gfacg ,_gfacg ,_gfacg );_gcfg ._fgdef [_gfacg ]=append (_gcfg ._fgdef [_gfacg ],_dcdg );};};};return nil ;};if _edbeaf ,_cceae :=_ebedc .(*_eec .PdfObjectArray );_cceae {_bfg .Log .Trace ("\u0041\u0072\u0072a\u0079");_bfg .Log .Trace ("\u002d\u0020\u0025\u0073",_ebedc );if _edbeaf ==nil {return _fe .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _fcead ,_cfcgde :=range _edbeaf .Elements (){if _ccffef ,_bgfdb :=_cfcgde .(*_eec .PdfObjectReference );_bgfdb {_cfcgde =_ccffef .Resolve ();_edbeaf .Set (_fcead ,_cfcgde );};if _begaa :=_gcfg .addObjects (_cfcgde );_begaa !=nil {return _begaa ;};};return nil ;};if _ ,_ebafab :=_ebedc .(*_eec .PdfObjectReference );_ebafab {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_ebedc );return _fe .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// Encoder returns the font's text encoder.
func (_bedg *pdfFontSimple )Encoder ()_fcb .TextEncoder {if _bedg ._acfd !=nil {return _bedg ._acfd ;};if _bedg ._gdbead !=nil {return _bedg ._gdbead ;};_daefg ,_ :=_fcb .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );return _daefg ;};

// Add appends a top level outline item to the outline.
func (_cgcga *Outline )Add (item *OutlineItem ){_cgcga .Entries =append (_cgcga .Entries ,item )};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_defd *PdfReader )GetPageLabels ()(_eec .PdfObject ,error ){_feaad :=_eec .ResolveReference (_defd ._becgd .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _feaad ==nil {return nil ,nil ;};if !_defd ._bceb {_fcebg :=_defd .traverseObjectData (_feaad );if _fcebg !=nil {return nil ,_fcebg ;};};return _feaad ,nil ;};func (_gcbb *PdfReader )newPdfAnnotationFromIndirectObject (_cbfb *_eec .PdfIndirectObject )(*PdfAnnotation ,error ){_edcc ,_fbag :=_cbfb .PdfObject .(*_eec .PdfObjectDictionary );if !_fbag {return nil ,_b .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_gcbb ._cdafg .GetModelFromPrimitive (_edcc );model !=nil {_cfd ,_dbgf :=model .(*PdfAnnotation );if !_dbgf {return nil ,_b .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");};return _cfd ,nil ;};_gef :=&PdfAnnotation {};_gef ._dge =_cbfb ;_gcbb ._cdafg .Register (_edcc ,_gef );if _fecc :=_edcc .Get ("\u0054\u0079\u0070\u0065");_fecc !=nil {_gadd ,_gga :=_fecc .(*_eec .PdfObjectName );if !_gga {_bfg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fecc );}else {if *_gadd !="\u0041\u006e\u006eo\u0074"{_bfg .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_gadd );};};};if _acb :=_edcc .Get ("\u0052\u0065\u0063\u0074");_acb !=nil {_gef .Rect =_acb ;};if _adcb :=_edcc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_adcb !=nil {_gef .Contents =_adcb ;};if _fdd :=_edcc .Get ("\u0050");_fdd !=nil {_gef .P =_fdd ;};if _eebd :=_edcc .Get ("\u004e\u004d");_eebd !=nil {_gef .NM =_eebd ;};if _bgda :=_edcc .Get ("\u004d");_bgda !=nil {_gef .M =_bgda ;};if _efb :=_edcc .Get ("\u0046");_efb !=nil {_gef .F =_efb ;};if _ccg :=_edcc .Get ("\u0041\u0050");_ccg !=nil {_gef .AP =_ccg ;};if _bcd :=_edcc .Get ("\u0041\u0053");_bcd !=nil {_gef .AS =_bcd ;};if _eaec :=_edcc .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_eaec !=nil {_gef .Border =_eaec ;};if _aebe :=_edcc .Get ("\u0043");_aebe !=nil {_gef .C =_aebe ;};if _fcec :=_edcc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fcec !=nil {_gef .StructParent =_fcec ;};if _afge :=_edcc .Get ("\u004f\u0043");_afge !=nil {_gef .OC =_afge ;};_gbc :=_edcc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _gbc ==nil {_bfg .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");_gef ._gda =nil ;return _gef ,nil ;};_gfa ,_dfdd :=_gbc .(*_eec .PdfObjectName );if !_dfdd {_bfg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gbc );return nil ,_b .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_gbc );};switch *_gfa {case "\u0054\u0065\u0078\u0074":_eebf ,_cbce :=_gcbb .newPdfAnnotationTextFromDict (_edcc );if _cbce !=nil {return nil ,_cbce ;};_eebf .PdfAnnotation =_gef ;_gef ._gda =_eebf ;return _gef ,nil ;case "\u004c\u0069\u006e\u006b":_dbbe ,_ede :=_gcbb .newPdfAnnotationLinkFromDict (_edcc );if _ede !=nil {return nil ,_ede ;};_dbbe .PdfAnnotation =_gef ;_gef ._gda =_dbbe ;return _gef ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_eef ,_daeb :=_gcbb .newPdfAnnotationFreeTextFromDict (_edcc );if _daeb !=nil {return nil ,_daeb ;};_eef .PdfAnnotation =_gef ;_gef ._gda =_eef ;return _gef ,nil ;case "\u004c\u0069\u006e\u0065":_bcb ,_fceb :=_gcbb .newPdfAnnotationLineFromDict (_edcc );if _fceb !=nil {return nil ,_fceb ;};_bcb .PdfAnnotation =_gef ;_gef ._gda =_bcb ;_bfg .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_gef ,_gef );_bfg .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_bcb ,_bcb );_bfg .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_bcb .PdfAnnotationMarkup ,_bcb .PdfAnnotationMarkup );return _gef ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_cde ,_dbf :=_gcbb .newPdfAnnotationSquareFromDict (_edcc );if _dbf !=nil {return nil ,_dbf ;};_cde .PdfAnnotation =_gef ;_gef ._gda =_cde ;return _gef ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_egc ,_aegga :=_gcbb .newPdfAnnotationCircleFromDict (_edcc );if _aegga !=nil {return nil ,_aegga ;};_egc .PdfAnnotation =_gef ;_gef ._gda =_egc ;return _gef ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_gcbf ,_cgee :=_gcbb .newPdfAnnotationPolygonFromDict (_edcc );if _cgee !=nil {return nil ,_cgee ;};_gcbf .PdfAnnotation =_gef ;_gef ._gda =_gcbf ;return _gef ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_bfd ,_abab :=_gcbb .newPdfAnnotationPolyLineFromDict (_edcc );if _abab !=nil {return nil ,_abab ;};_bfd .PdfAnnotation =_gef ;_gef ._gda =_bfd ;return _gef ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_abg ,_bfcc :=_gcbb .newPdfAnnotationHighlightFromDict (_edcc );if _bfcc !=nil {return nil ,_bfcc ;};_abg .PdfAnnotation =_gef ;_gef ._gda =_abg ;return _gef ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_cgeb ,_cae :=_gcbb .newPdfAnnotationUnderlineFromDict (_edcc );if _cae !=nil {return nil ,_cae ;};_cgeb .PdfAnnotation =_gef ;_gef ._gda =_cgeb ;return _gef ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_gged ,_edaf :=_gcbb .newPdfAnnotationSquigglyFromDict (_edcc );if _edaf !=nil {return nil ,_edaf ;};_gged .PdfAnnotation =_gef ;_gef ._gda =_gged ;return _gef ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_acd ,_cgfg :=_gcbb .newPdfAnnotationStrikeOut (_edcc );if _cgfg !=nil {return nil ,_cgfg ;};_acd .PdfAnnotation =_gef ;_gef ._gda =_acd ;return _gef ,nil ;case "\u0043\u0061\u0072e\u0074":_aaed ,_adea :=_gcbb .newPdfAnnotationCaretFromDict (_edcc );if _adea !=nil {return nil ,_adea ;};_aaed .PdfAnnotation =_gef ;_gef ._gda =_aaed ;return _gef ,nil ;case "\u0053\u0074\u0061m\u0070":_cdg ,_ggee :=_gcbb .newPdfAnnotationStampFromDict (_edcc );if _ggee !=nil {return nil ,_ggee ;};_cdg .PdfAnnotation =_gef ;_gef ._gda =_cdg ;return _gef ,nil ;case "\u0049\u006e\u006b":_feea ,_abea :=_gcbb .newPdfAnnotationInkFromDict (_edcc );if _abea !=nil {return nil ,_abea ;};_feea .PdfAnnotation =_gef ;_gef ._gda =_feea ;return _gef ,nil ;case "\u0050\u006f\u0070u\u0070":_aadf ,_eagg :=_gcbb .newPdfAnnotationPopupFromDict (_edcc );if _eagg !=nil {return nil ,_eagg ;};_aadf .PdfAnnotation =_gef ;_gef ._gda =_aadf ;return _gef ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_bbfc ,_fgca :=_gcbb .newPdfAnnotationFileAttachmentFromDict (_edcc );if _fgca !=nil {return nil ,_fgca ;};_bbfc .PdfAnnotation =_gef ;_gef ._gda =_bbfc ;return _gef ,nil ;case "\u0053\u006f\u0075n\u0064":_fge ,_bffg :=_gcbb .newPdfAnnotationSoundFromDict (_edcc );if _bffg !=nil {return nil ,_bffg ;};_fge .PdfAnnotation =_gef ;_gef ._gda =_fge ;return _gef ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_afb ,_bgged :=_gcbb .newPdfAnnotationRichMediaFromDict (_edcc );if _bgged !=nil {return nil ,_bgged ;};_afb .PdfAnnotation =_gef ;_gef ._gda =_afb ;return _gef ,nil ;case "\u004d\u006f\u0076i\u0065":_ccgd ,_ccga :=_gcbb .newPdfAnnotationMovieFromDict (_edcc );if _ccga !=nil {return nil ,_ccga ;};_ccgd .PdfAnnotation =_gef ;_gef ._gda =_ccgd ;return _gef ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_gfe ,_badc :=_gcbb .newPdfAnnotationScreenFromDict (_edcc );if _badc !=nil {return nil ,_badc ;};_gfe .PdfAnnotation =_gef ;_gef ._gda =_gfe ;return _gef ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_aaeg ,_agbfb :=_gcbb .newPdfAnnotationWidgetFromDict (_edcc );if _agbfb !=nil {return nil ,_agbfb ;};_aaeg .PdfAnnotation =_gef ;_gef ._gda =_aaeg ;return _gef ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_fdeb ,_daa :=_gcbb .newPdfAnnotationPrinterMarkFromDict (_edcc );if _daa !=nil {return nil ,_daa ;};_fdeb .PdfAnnotation =_gef ;_gef ._gda =_fdeb ;return _gef ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_cdbg ,_fdfe :=_gcbb .newPdfAnnotationTrapNetFromDict (_edcc );if _fdfe !=nil {return nil ,_fdfe ;};_cdbg .PdfAnnotation =_gef ;_gef ._gda =_cdbg ;return _gef ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_gcc ,_aed :=_gcbb .newPdfAnnotationWatermarkFromDict (_edcc );if _aed !=nil {return nil ,_aed ;};_gcc .PdfAnnotation =_gef ;_gef ._gda =_gcc ;return _gef ,nil ;case "\u0033\u0044":_gbg ,_bcfc :=_gcbb .newPdfAnnotation3DFromDict (_edcc );if _bcfc !=nil {return nil ,_bcfc ;};_gbg .PdfAnnotation =_gef ;_gef ._gda =_gbg ;return _gef ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_aab ,_dggb :=_gcbb .newPdfAnnotationProjectionFromDict (_edcc );if _dggb !=nil {return nil ,_dggb ;};_aab .PdfAnnotation =_gef ;_gef ._gda =_aab ;return _gef ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_fcd ,_cdbgb :=_gcbb .newPdfAnnotationRedactFromDict (_edcc );if _cdbgb !=nil {return nil ,_cdbgb ;};_fcd .PdfAnnotation =_gef ;_gef ._gda =_fcd ;return _gef ,nil ;};_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_gfa );return nil ,nil ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _eec .PdfObject ;Flags _eec .PdfObject ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_dfec *PdfPageResources )GetColorspaceByName (keyName _eec .PdfObjectName )(PdfColorspace ,bool ){_babe ,_cfbfb :=_dfec .GetColorspaces ();if _cfbfb !=nil {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cfbfb );return nil ,false ;};if _babe ==nil {return nil ,false ;};_agfbge ,_dfbaa :=_babe .Colorspaces [string (keyName )];if !_dfbaa {return nil ,false ;};return _agfbge ,true ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dgedca *PdfShadingType5 )ToPdfObject ()_eec .PdfObject {_dgedca .PdfShading .ToPdfObject ();_edced ,_baec :=_dgedca .getShadingDict ();if _baec !=nil {_bfg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _dgedca .BitsPerCoordinate !=nil {_edced .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dgedca .BitsPerCoordinate );};if _dgedca .BitsPerComponent !=nil {_edced .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dgedca .BitsPerComponent );};if _dgedca .VerticesPerRow !=nil {_edced .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_dgedca .VerticesPerRow );};if _dgedca .Decode !=nil {_edced .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dgedca .Decode );};if _dgedca .Function !=nil {if len (_dgedca .Function )==1{_edced .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dgedca .Function [0].ToPdfObject ());}else {_egeeg :=_eec .MakeArray ();for _ ,_acbad :=range _dgedca .Function {_egeeg .Append (_acbad .ToPdfObject ());};_edced .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egeeg );};};return _dgedca ._fbeg ;};func _efgcb (_cccee []byte )(_ddfee ,_gbccg string ,_dabad error ){_bfg .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_cccee ));_ccdf :=_cddc .FindIndex (_cccee );if _ccdf ==nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_eec .ErrTypeError ;};_gaaf :=_ccdf [1];_ccafc :=_beb .Index (string (_cccee [_gaaf :]),_fadaf );if _ccafc < 0{_ddfee =string (_cccee [_gaaf :]);return _ddfee ,"",nil ;};_bgfee :=_gaaf +_ccafc ;_ddfee =string (_cccee [_gaaf :_bgfee ]);_fdgfb :=_bgfee ;_ccafc =_beb .Index (string (_cccee [_fdgfb :]),_geab );if _ccafc < 0{_bfg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dabad );return "","",_eec .ErrTypeError ;};_fceff :=_fdgfb +_ccafc ;_gbccg =string (_cccee [_fdgfb :_fceff ]);return _ddfee ,_gbccg ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dedf pdfCIDFontType0 )GetRuneMetrics (r rune )(_de .CharMetrics ,bool ){return _de .CharMetrics {Wx :_dedf ._dbaf },true ;};

// String returns a string representation of the field.
func (_dgdfb *PdfField )String ()string {if _ebdd ,_efabf :=_dgdfb .ToPdfObject ().(*_eec .PdfIndirectObject );_efabf {return _b .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dgdfb ._ecbf ,_ebdd .PdfObject .String ());};return "";};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_bcacc *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_eec .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdab ,_acdd :=_eec .GetNumbersAsFloat (objects );if _acdd !=nil {return nil ,_acdd ;};return _bcacc .ColorFromFloats (_cdab );};func (_ccffe *PdfReader )newPdfAnnotationUnderlineFromDict (_age *_eec .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_afad :=PdfAnnotationUnderline {};_gcgf ,_cgff :=_ccffe .newPdfAnnotationMarkupFromDict (_age );if _cgff !=nil {return nil ,_cgff ;};_afad .PdfAnnotationMarkup =_gcgf ;_afad .QuadPoints =_age .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_afad ,nil ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_ccgf *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_eec .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_fe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");};_ebcc :=&PdfColorPattern {};_aggaf ,_faga :=objects [len (objects )-1].(*_eec .PdfObjectName );if !_faga {_bfg .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);return nil ,ErrTypeCheck ;};_ebcc .PatternName =*_aggaf ;if len (objects )> 1{_fcaf :=objects [0:len (objects )-1];if _ccgf .UnderlyingCS ==nil {_bfg .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");return nil ,_fe .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_cbff ,_cdgdb :=_ccgf .UnderlyingCS .ColorFromPdfObjects (_fcaf );if _cdgdb !=nil {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_cdgdb );return nil ,_cdgdb ;};_ebcc .Color =_cbff ;};return _ebcc ,nil ;};func (_fgged *PdfReader )flattenFieldsWithOpts (_fgdc bool ,_aafe FieldAppearanceGenerator ,_eggb *FieldFlattenOpts )error {if _eggb ==nil {_eggb =&FieldFlattenOpts {};};var _aggagf bool ;_begc :=map[*PdfAnnotation ]bool {};{var _fdbgf []*PdfField ;_gfaef :=_fgged .AcroForm ;if _gfaef !=nil {if _eggb .FilterFunc !=nil {_fdbgf =_gfaef .filteredFields (_eggb .FilterFunc ,true );_aggagf =_gfaef .Fields !=nil &&len (*_gfaef .Fields )> 0;}else {_fdbgf =_gfaef .AllFields ();};};for _ ,_gdccc :=range _fdbgf {for _ ,_ccbe :=range _gdccc .Annotations {_begc [_ccbe .PdfAnnotation ]=_gdccc .V !=nil ;if _aafe !=nil {_bfdfd ,_cegbg :=_aafe .GenerateAppearanceDict (_gfaef ,_gdccc ,_ccbe );if _cegbg !=nil {return _cegbg ;};_ccbe .AP =_bfdfd ;};};};};if _fgdc {for _ ,_cecg :=range _fgged .PageList {_egege ,_gdda :=_cecg .GetAnnotations ();if _gdda !=nil {return _gdda ;};for _ ,_bebca :=range _egege {_begc [_bebca ]=true ;};};};for _ ,_dgbgf :=range _fgged .PageList {var _bddbg []*PdfAnnotation ;if _aafe !=nil {if _cdea :=_aafe .WrapContentStream (_dgbgf );_cdea !=nil {return _cdea ;};};_faab ,_bfec :=_dgbgf .GetAnnotations ();if _bfec !=nil {return _bfec ;};for _ ,_ebcf :=range _faab {_feccf ,_edfec :=_begc [_ebcf ];if !_edfec {_bddbg =append (_bddbg ,_ebcf );continue ;};switch _ebcf .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_ddfg ,_fadac ,_bfef :=_bggdaa (_ebcf );if _bfef !=nil {if !_feccf {_bfg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");continue ;};_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_bfef );continue ;};if _ddfg ==nil {continue ;};_afgbf :=_dgbgf .Resources .GenerateXObjectName ();_dgbgf .Resources .SetXObjectFormByName (_afgbf ,_ddfg );_deeb :=_fba .Min (_fadac .Llx ,_fadac .Urx );_bgcf :=_fba .Min (_fadac .Lly ,_fadac .Ury );var _cbdc []string ;_cbdc =append (_cbdc ,"\u0071");_cbdc =append (_cbdc ,_b .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_deeb ,_bgcf ));_cbdc =append (_cbdc ,_b .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_afgbf .String ()));_cbdc =append (_cbdc ,"\u0051");_fcfc :=_beb .Join (_cbdc ,"\u000a");_bfef =_dgbgf .AppendContentStream (_fcfc );if _bfef !=nil {return _bfef ;};if _ddfg .Resources !=nil {_adbc ,_cceb :=_eec .GetDict (_ddfg .Resources .Font );if _cceb {for _ ,_edccd :=range _adbc .Keys (){if !_dgbgf .Resources .HasFontByName (_edccd ){_dgbgf .Resources .SetFontByName (_edccd ,_adbc .Get (_edccd ));};};};};};if len (_bddbg )> 0{_dgbgf ._fadd =_bddbg ;}else {_dgbgf ._fadd =[]*PdfAnnotation {};};};if !_aggagf {_fgged .AcroForm =nil ;};return nil ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_dffb *PdfFont )CharcodesToUnicodeWithStats (charcodes []_fcb .CharCode )(_cfegg []rune ,_cecb ,_ggbec int ){_cccgb ,_cecb ,_ggbec :=_dffb .CharcodesToStrings (charcodes );return []rune (_beb .Join (_cccgb ,"")),_cecb ,_ggbec ;};

// Items returns all children outline items.
func (_gdgbc *Outline )Items ()[]*OutlineItem {return _gdgbc .Entries };

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_eec .PdfObject ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_eec .PdfObject ;GetContainingPdfObject ()_eec .PdfObject ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_bcfcd *PdfPageResources )GetContainingPdfObject ()_eec .PdfObject {return _bcfcd ._daab };

// Evaluate runs the function on the passed in slice and returns the results.
func (_feedg *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_feedg .NumInputs {_bfg .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");return nil ,_fe .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _feedg ._fedae ==nil {_acfa :=_feedg .processSamples ();if _acfa !=nil {return nil ,_acfa ;};};_dcgg :=_feedg .Encode ;if _dcgg ==nil {_dcgg =[]float64 {};for _ccdfc :=0;_ccdfc < len (_feedg .Size );_ccdfc ++{_dcgg =append (_dcgg ,0);_dcgg =append (_dcgg ,float64 (_feedg .Size [_ccdfc ]-1));};};_aefce :=_feedg .Decode ;if _aefce ==nil {_aefce =_feedg .Range ;};_adfcc :=make ([]int ,len (x ));for _accb :=0;_accb < len (x );_accb ++{_ggccg :=x [_accb ];_gaddf :=_fba .Min (_fba .Max (_ggccg ,_feedg .Domain [2*_accb ]),_feedg .Domain [2*_accb +1]);_ccdag :=_fc .LinearInterpolate (_gaddf ,_feedg .Domain [2*_accb ],_feedg .Domain [2*_accb +1],_dcgg [2*_accb ],_dcgg [2*_accb +1]);_gfdbf :=_fba .Min (_fba .Max (_ccdag ,0),float64 (_feedg .Size [_accb ]-1));_ddbd :=int (_fba .Floor (_gfdbf +0.5));if _ddbd < 0{_ddbd =0;}else if _ddbd > _feedg .Size [_accb ]{_ddbd =_feedg .Size [_accb ]-1;};_adfcc [_accb ]=_ddbd ;};_fffee :=_adfcc [0];for _dcdd :=1;_dcdd < _feedg .NumInputs ;_dcdd ++{_gdeg :=_adfcc [_dcdd ];for _edbce :=0;_edbce < _dcdd ;_edbce ++{_gdeg *=_feedg .Size [_edbce ];};_fffee +=_gdeg ;};_fffee *=_feedg .NumOutputs ;var _fdaa []float64 ;for _ecaaf :=0;_ecaaf < _feedg .NumOutputs ;_ecaaf ++{_aafbc :=_fffee +_ecaaf ;if _aafbc >=len (_feedg ._fedae ){_bfg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");continue ;};_afaga :=_feedg ._fedae [_aafbc ];_cabaf :=_fc .LinearInterpolate (float64 (_afaga ),0,_fba .Pow (2,float64 (_feedg .BitsPerSample )),_aefce [2*_ecaaf ],_aefce [2*_ecaaf +1]);_cbgga :=_fba .Min (_fba .Max (_cabaf ,_feedg .Range [2*_ecaaf ]),_feedg .Range [2*_ecaaf +1]);_fdaa =append (_fdaa ,_cbgga );};return _fdaa ,nil ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_fecfc *XObjectImage )GetContainingPdfObject ()_eec .PdfObject {return _fecfc ._cgdaf };

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_eec .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_eec .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_eec .PdfObjectBool ;_gdcdb PdfModel ;_fbeg _eec .PdfObject ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _eec .PdfObject ;MK _eec .PdfObject ;A _eec .PdfObject ;AA _eec .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_bccd *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cccg :=vals [0];if _cccg < 0.0||_cccg > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcecf :=NewPdfColorCalGray (_cccg );return _fcecf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_egec *PdfAnnotationWidget )ToPdfObject ()_eec .PdfObject {_egec .PdfAnnotation .ToPdfObject ();_eefc :=_egec ._dge ;_dfcf :=_eefc .PdfObject .(*_eec .PdfObjectDictionary );if _egec ._dac {return _eefc ;};_egec ._dac =true ;_dfcf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));_dfcf .SetIfNotNil ("\u0048",_egec .H );_dfcf .SetIfNotNil ("\u004d\u004b",_egec .MK );_dfcf .SetIfNotNil ("\u0041",_egec .A );_dfcf .SetIfNotNil ("\u0041\u0041",_egec .AA );_dfcf .SetIfNotNil ("\u0042\u0053",_egec .BS );_ccca :=_egec .Parent ;if _egec ._febe !=nil {if _egec ._febe ._bedf ==_egec ._dge {_egec ._febe .ToPdfObject ();};_ccca =_egec ._febe .GetContainingPdfObject ();};if _ccca !=_eefc {_dfcf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ccca );};_egec ._dac =false ;return _eefc ;};

// Subtype returns the font's "Subtype" field.
func (_ccaf *PdfFont )Subtype ()string {_agdd :=_ccaf .baseFields ()._bgga ;if _dedg ,_gfafa :=_ccaf ._baaf .(*pdfFontType0 );_gfafa {_agdd =_agdd +"\u003a"+_dedg .DescendantFont .Subtype ();};return _agdd ;};

// ToPdfObject returns a stream object.
func (_ebddg *XObjectImage )ToPdfObject ()_eec .PdfObject {_fdggc :=_ebddg ._cgdaf ;_ccbb :=_fdggc .PdfObjectDictionary ;if _ebddg .Filter !=nil {_ccbb =_ebddg .Filter .MakeStreamDict ();_fdggc .PdfObjectDictionary =_ccbb ;};_ccbb .Set ("\u0054\u0079\u0070\u0065",_eec .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_ccbb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0049\u006d\u0061g\u0065"));_ccbb .Set ("\u0057\u0069\u0064t\u0068",_eec .MakeInteger (*(_ebddg .Width )));_ccbb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_eec .MakeInteger (*(_ebddg .Height )));if _ebddg .BitsPerComponent !=nil {_ccbb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_eec .MakeInteger (*(_ebddg .BitsPerComponent )));};if _ebddg .ColorSpace !=nil {_ccbb .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ebddg .ColorSpace .ToPdfObject ());};_ccbb .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_ebddg .Intent );_ccbb .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_ebddg .ImageMask );_ccbb .SetIfNotNil ("\u004d\u0061\u0073\u006b",_ebddg .Mask );_ccbb .SetIfNotNil ("\u0044\u0065\u0063\u006f\u0064\u0065",_ebddg .Decode );_ccbb .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_ebddg .Interpolate );_ccbb .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_ebddg .Alternatives );_ccbb .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_ebddg .SMask );_ccbb .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_ebddg .SMaskInData );_ccbb .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ebddg .Matte );_ccbb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebddg .Name );_ccbb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_ebddg .StructParent );_ccbb .SetIfNotNil ("\u0049\u0044",_ebddg .ID );_ccbb .SetIfNotNil ("\u004f\u0050\u0049",_ebddg .OPI );_ccbb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ebddg .Metadata );_ccbb .SetIfNotNil ("\u004f\u0043",_ebddg .OC );_ccbb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_eec .MakeInteger (int64 (len (_ebddg .Stream ))));_fdggc .Stream =_ebddg .Stream ;return _fdggc ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_aafbed .Lock ();defer _aafbed .Unlock ();_egedc =title };

// DecodeArray returns the component range values for the Separation colorspace.
func (_dcfd *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_acgd *PdfFieldButton )SetType (btype ButtonType ){_fggg :=uint32 (0);if _acgd .Ff !=nil {_fggg =uint32 (*_acgd .Ff );};switch btype {case ButtonTypePush :_fggg |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_fggg |=FieldFlagRadio .Mask ();};_acgd .Ff =_eec .MakeInteger (int64 (_fggg ));};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_fcebe *PdfPageResources )HasFontByName (keyName _eec .PdfObjectName )bool {_ ,_fceba :=_fcebe .GetFontByName (keyName );return _fceba ;};

// G returns the value of the green component of the color.
func (_eage *PdfColorDeviceRGB )G ()float64 {return _eage [1]};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_fdfdf *PdfPageResources )SetXObjectFormByName (keyName _eec .PdfObjectName ,xform *XObjectForm )error {_agaa :=xform .ToPdfObject ().(*_eec .PdfObjectStream );_eabgg :=_fdfdf .SetXObjectByName (keyName ,_agaa );return _eabgg ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_gdde :=NewPdfAnnotation ();_gdag :=&PdfAnnotationPopup {};_gdag .PdfAnnotation =_gdde ;_gdde .SetContext (_gdag );return _gdag ;};func (_cgg *PdfReader )newPdfAnnotationMarkupFromDict (_befe *_eec .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_eeee :=&PdfAnnotationMarkup {};if _dfg :=_befe .Get ("\u0054");_dfg !=nil {_eeee .T =_dfg ;};if _adfd :=_befe .Get ("\u0050\u006f\u0070u\u0070");_adfd !=nil {_ggc ,_dda :=_adfd .(*_eec .PdfIndirectObject );if !_dda {if _ ,_gdfd :=_adfd .(*_eec .PdfObjectNull );!_gdfd {return nil ,_fe .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");};}else {_dec ,_ggce :=_cgg .newPdfAnnotationFromIndirectObject (_ggc );if _ggce !=nil {return nil ,_ggce ;};if _dec !=nil {_ecdd ,_abgc :=_dec ._gda .(*PdfAnnotationPopup );if !_abgc {return nil ,_fe .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");};_eeee .Popup =_ecdd ;};};};if _bgfg :=_befe .Get ("\u0043\u0041");_bgfg !=nil {_eeee .CA =_bgfg ;};if _dgb :=_befe .Get ("\u0052\u0043");_dgb !=nil {_eeee .RC =_dgb ;};if _fdgee :=_befe .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");_fdgee !=nil {_eeee .CreationDate =_fdgee ;};if _fgaa :=_befe .Get ("\u0049\u0052\u0054");_fgaa !=nil {_eeee .IRT =_fgaa ;};if _efdd :=_befe .Get ("\u0053\u0075\u0062\u006a");_efdd !=nil {_eeee .Subj =_efdd ;};if _ddf :=_befe .Get ("\u0052\u0054");_ddf !=nil {_eeee .RT =_ddf ;};if _gedd :=_befe .Get ("\u0049\u0054");_gedd !=nil {_eeee .IT =_gedd ;};if _cdgc :=_befe .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_cdgc !=nil {_eeee .ExData =_cdgc ;};return _eeee ,nil ;};func (_fef *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_gcfbc *PdfReader )GetEncryptionMethod ()string {_gecfe :=_gcfbc ._ggagaa .GetCrypter ();return _gecfe .String ();};

// SetLocation sets the `Location` field of the signature.
func (_beagcg *PdfSignature )SetLocation (location string ){_beagcg .Location =_eec .MakeString (location );};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_fbf :=NewPdfAction ();_fda :=&PdfActionThread {};_fda .PdfAction =_fbf ;_fbf .SetContext (_fda );return _fda ;};func _acdbc ()string {_aafbed .Lock ();defer _aafbed .Unlock ();return _ddcbf };

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_addg *PdfAnnotation )ToPdfObject ()_eec .PdfObject {_daac :=_addg ._dge ;_fggb :=_daac .PdfObject .(*_eec .PdfObjectDictionary );_fggb .Clear ();_fggb .Set ("\u0054\u0079\u0070\u0065",_eec .MakeName ("\u0041\u006e\u006eo\u0074"));_fggb .SetIfNotNil ("\u0052\u0065\u0063\u0074",_addg .Rect );_fggb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_addg .Contents );_fggb .SetIfNotNil ("\u0050",_addg .P );_fggb .SetIfNotNil ("\u004e\u004d",_addg .NM );_fggb .SetIfNotNil ("\u004d",_addg .M );_fggb .SetIfNotNil ("\u0046",_addg .F );_fggb .SetIfNotNil ("\u0041\u0050",_addg .AP );_fggb .SetIfNotNil ("\u0041\u0053",_addg .AS );_fggb .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_addg .Border );_fggb .SetIfNotNil ("\u0043",_addg .C );_fggb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_addg .StructParent );_fggb .SetIfNotNil ("\u004f\u0043",_addg .OC );return _daac ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_dcded :=&PdfFilespec {};_dcded ._fdecf =_eec .MakeIndirectObject (_eec .MakeDict ());return _dcded ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_cdd :=NewPdfAnnotation ();_dced :=&PdfAnnotationStamp {};_dced .PdfAnnotation =_cdd ;_dced .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cdd .SetContext (_dced );return _dced ;};

// Register registers (caches) a model to primitive object relationship.
func (_bccgd *modelManager )Register (primitive _eec .PdfObject ,model PdfModel ){_bccgd ._fgbbf [model ]=primitive ;_bccgd ._bfageb [primitive ]=model ;};func _cffg (_agea *_eec .PdfObjectDictionary )bool {for _ ,_agfe :=range _agea .Keys (){if _ ,_bbgf :=_aebb [_agfe .String ()];_bbgf {return true ;};};return false ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_bbcdc *Image )GetParamsDict ()*_eec .PdfObjectDictionary {_bfcb :=_eec .MakeDict ();_bfcb .Set ("\u0057\u0069\u0064t\u0068",_eec .MakeInteger (_bbcdc .Width ));_bfcb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_eec .MakeInteger (_bbcdc .Height ));_bfcb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_eec .MakeInteger (int64 (_bbcdc .ColorComponents )));_bfcb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_eec .MakeInteger (_bbcdc .BitsPerComponent ));return _bfcb ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_dffa *modelManager )GetPrimitiveFromModel (model PdfModel )_eec .PdfObject {_ceae ,_cbab :=_dffa ._fgbbf [model ];if !_cbab {return nil ;};return _ceae ;};func _fbfaf (_fged *_eec .PdfObjectDictionary ,_egagd *fontCommon ,_bdgge _fcb .TextEncoder )(*pdfFontSimple ,error ){_gegcc :=_aaad (_egagd );_gegcc ._gdbead =_bdgge ;if _bdgge ==nil {_agbff :=_fged .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _agbff ==nil {_agbff =_eec .MakeInteger (0);};_gegcc .FirstChar =_agbff ;_cdgfg ,_egeea :=_eec .GetIntVal (_agbff );if !_egeea {_bfg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_agbff );return nil ,_eec .ErrTypeError ;};_gddae :=_fcb .CharCode (_cdgfg );_agbff =_fged .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _agbff ==nil {_agbff =_eec .MakeInteger (255);};_gegcc .LastChar =_agbff ;_cdgfg ,_egeea =_eec .GetIntVal (_agbff );if !_egeea {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_agbff );return nil ,_eec .ErrTypeError ;};_ebgba :=_fcb .CharCode (_cdgfg );_gegcc ._fgabb =make (map[_fcb .CharCode ]float64 );_agbff =_fged .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _agbff !=nil {_gegcc .Widths =_agbff ;_aaffa ,_bacf :=_eec .GetArray (_agbff );if !_bacf {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_agbff );return nil ,_eec .ErrTypeError ;};_baeda ,_ecaca :=_aaffa .ToFloat64Array ();if _ecaca !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");return nil ,_ecaca ;};if len (_baeda )!=int (_ebgba -_gddae +1){_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_ebgba -_gddae +1,len (_baeda ));return nil ,_eec .ErrRangeError ;};for _dgaba ,_ffea :=range _baeda {_gegcc ._fgabb [_gddae +_fcb .CharCode (_dgaba )]=_ffea ;};};};_gegcc .Encoding =_eec .TraceToDirectObject (_fged .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _gegcc ,nil ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_gdefa *PdfSignature )bool ;Validate (_fbdfd *PdfSignature ,_egbg Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_cdgbc *PdfSignature )(Hasher ,error );Sign (_dcbab *PdfSignature ,_gebe Hasher )error ;};type pdfCIDFontType2 struct{fontCommon ;_bgabg *_eec .PdfIndirectObject ;_gffa _fcb .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_eec .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _eec .PdfObject ;W _eec .PdfObject ;DW2 _eec .PdfObject ;W2 _eec .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _eec .PdfObject ;_bdfge map[_fcb .CharCode ]float64 ;_dbcf float64 ;_cfbcg map[rune ]int ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_bbac *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _bbac .baseFields ()._cddbf !=nil {return _bbac .baseFields ()._cddbf ;};if _ecgb :=_bbac ._baaf .getFontDescriptor ();_ecgb !=nil {return _ecgb ;};_bfg .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_bbac );return nil ;};func (_bbdf *Image )resampleLowBits (_degd []uint32 ){_aeggf :=_fc .BytesPerLine (int (_bbdf .Width ),int (_bbdf .BitsPerComponent ),_bbdf .ColorComponents );_dgcdg :=make ([]byte ,_bbdf .ColorComponents *_aeggf *int (_bbdf .Height ));_fcac :=int (_bbdf .BitsPerComponent )*_bbdf .ColorComponents *int (_bbdf .Width );_adeaga :=uint8 (8);var (_befef ,_ggac int ;_cebca uint32 ;);for _afbb :=0;_afbb < int (_bbdf .Height );_afbb ++{_ggac =_afbb *_aeggf ;for _egdcf :=0;_egdcf < _fcac ;_egdcf ++{_cebca =_degd [_befef ];_adeaga -=uint8 (_bbdf .BitsPerComponent );_dgcdg [_ggac ]|=byte (_cebca )<<_adeaga ;if _adeaga ==0{_adeaga =8;_ggac ++;};_befef ++;};};_bbdf .Data =_dgcdg ;};func (_feb *PdfReader )newPdfActionGotoEFromDict (_ccff *_eec .PdfObjectDictionary )(*PdfActionGoToE ,error ){_cbd ,_egfe :=_fecb (_ccff .Get ("\u0046"));if _egfe !=nil {return nil ,_egfe ;};return &PdfActionGoToE {D :_ccff .Get ("\u0044"),NewWindow :_ccff .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_ccff .Get ("\u0054"),F :_cbd },nil ;};func (_egb *PdfReader )newPdfAnnotation3DFromDict (_gcfd *_eec .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_abgg :=PdfAnnotation3D {};_abgg .T3DD =_gcfd .Get ("\u0033\u0044\u0044");_abgg .T3DV =_gcfd .Get ("\u0033\u0044\u0056");_abgg .T3DA =_gcfd .Get ("\u0033\u0044\u0041");_abgg .T3DI =_gcfd .Get ("\u0033\u0044\u0049");_abgg .T3DB =_gcfd .Get ("\u0033\u0044\u0042");return &_abgg ,nil ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_ecc *PdfFont )SubsetRegistered ()error {switch _gfdf :=_ecc ._baaf .(type ){case *pdfFontType0 :_faea :=_gfdf .subsetRegistered ();if _faea !=nil {_bfg .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_faea );return _faea ;};if _gfdf ._aebd !=nil {if _gfdf ._edff !=nil {_gfdf ._edff .ToPdfObject ();};_gfdf .ToPdfObject ();};default:_bfg .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_gfdf );};return nil ;};

// GetPdfInfo returns the PDF info dictionary.
func (_eaced *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_cbeaae :=PdfInfo {};_bcgca ,_bebec :=_eaced .GetTrailer ();if _bebec !=nil {return nil ,_bebec ;};var _agbec *_eec .PdfObjectDictionary ;_dbdc :=_bcgca .Get ("\u0049\u006e\u0066\u006f");switch _abgce :=_dbdc .(type ){case *_eec .PdfObjectReference :_fgfbf :=_abgce ;_dbdc ,_bebec =_eaced .GetIndirectObjectByNumber (int (_fgfbf .ObjectNumber ));_dbdc =_eec .TraceToDirectObject (_dbdc );if _bebec !=nil {return nil ,_bebec ;};_agbec ,_ =_dbdc .(*_eec .PdfObjectDictionary );case *_eec .PdfObjectDictionary :_agbec =_abgce ;};if _agbec ==nil {return nil ,_fe .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};for _ ,_daee :=range _agbec .Keys (){switch _daee {case "\u0054\u0069\u0074l\u0065":_cbeaae .Title ,_ =_eec .GetString (_agbec .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_cbeaae .Author ,_ =_eec .GetString (_agbec .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));case "\u0053u\u0062\u006a\u0065\u0063\u0074":_cbeaae .Subject ,_ =_eec .GetString (_agbec .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_cbeaae .Keywords ,_ =_eec .GetString (_agbec .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));case "\u0043r\u0065\u0061\u0074\u006f\u0072":_cbeaae .Creator ,_ =_eec .GetString (_agbec .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_cbeaae .Producer ,_ =_eec .GetString (_agbec .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));case "\u0054r\u0061\u0070\u0070\u0065\u0064":_cbeaae .Trapped ,_ =_eec .GetName (_agbec .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _dbeg ,_eadge :=_eec .GetString (_agbec .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));_eadge &&_dbeg .String ()!=""{_bfbe ,_ggfde :=NewPdfDate (_dbeg .String ());if _ggfde !=nil {return nil ,_ggfde ;};_cbeaae .CreationDate =&_bfbe ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _ecbfc ,_aafbd :=_eec .GetString (_agbec .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_aafbd &&_ecbfc .String ()!=""{_ebddc ,_ffebe :=NewPdfDate (_ecbfc .String ());if _ffebe !=nil {return nil ,_ffebe ;};_cbeaae .ModifiedDate =&_ebddc ;};default:_dddf ,_ :=_eec .GetString (_agbec .Get (_daee ));if _cbeaae ._beega ==nil {_cbeaae ._beega =_eec .MakeDict ();};_cbeaae ._beega .Set (_daee ,_dddf );};};return &_cbeaae ,nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _eec .PdfObject ;Movie _eec .PdfObject ;A _eec .PdfObject ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _dd .ReadSeeker )(*PdfReader ,error ){const _aedg ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";_cdfe :=&PdfReader {_fgdab :rs ,_beae :map[_eec .PdfObject ]struct{}{},_cdafg :_bbad (),_bceb :true };_cead ,_fefe :=_ddbeg ("\u0072");if _fefe !=nil {return nil ,_fefe ;};_fefe =_ea .Track (_cead ,_aedg );if _fefe !=nil {return nil ,_fefe ;};_cdfe ._abcgb =_cead ;_adae ,_fefe :=_eec .NewParser (rs );if _fefe !=nil {return nil ,_fefe ;};_cdfe ._ggagaa =_adae ;_dafg ,_fefe :=_cdfe .IsEncrypted ();if _fefe !=nil {return nil ,_fefe ;};if !_dafg {_fefe =_cdfe .loadStructure ();if _fefe !=nil {return nil ,_fefe ;};};return _cdfe ,nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_addgd *Image )SetSamples (samples []uint32 ){if _addgd .BitsPerComponent < 8{samples =_addgd .samplesAddPadding (samples );};_ddaa :=_efe .ResampleUint32 (samples ,int (_addgd .BitsPerComponent ),8);_cbdbc :=make ([]byte ,len (_ddaa ));for _eagccg ,_dgbgb :=range _ddaa {_cbdbc [_eagccg ]=byte (_dgbgb );};_addgd .Data =_cbdbc ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_cggf *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_fcfe :=_efe .NewReader (img .getBase ());_aadab :=_fc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_ddabc :=_efe .NewWriter (_aadab );_eeefe :=_fba .Pow (2,float64 (img .BitsPerComponent ))-1;_acfba :=make ([]uint32 ,3);var (_fgeb error ;_egcg ,_ebbg ,_ebda ,_cegg ,_feg ,_gcdd float64 ;);for {_fgeb =_fcfe .ReadSamples (_acfba );if _fgeb ==_dd .EOF {break ;}else if _fgeb !=nil {return img ,_fgeb ;};_egcg =float64 (_acfba [0])/_eeefe ;_ebbg =float64 (_acfba [1])/_eeefe ;_ebda =float64 (_acfba [2])/_eeefe ;_cegg =_cggf .Matrix [0]*_fba .Pow (_egcg ,_cggf .Gamma [0])+_cggf .Matrix [3]*_fba .Pow (_ebbg ,_cggf .Gamma [1])+_cggf .Matrix [6]*_fba .Pow (_ebda ,_cggf .Gamma [2]);_feg =_cggf .Matrix [1]*_fba .Pow (_egcg ,_cggf .Gamma [0])+_cggf .Matrix [4]*_fba .Pow (_ebbg ,_cggf .Gamma [1])+_cggf .Matrix [7]*_fba .Pow (_ebda ,_cggf .Gamma [2]);_gcdd =_cggf .Matrix [2]*_fba .Pow (_egcg ,_cggf .Gamma [0])+_cggf .Matrix [5]*_fba .Pow (_ebbg ,_cggf .Gamma [1])+_cggf .Matrix [8]*_fba .Pow (_ebda ,_cggf .Gamma [2]);_egcg =3.240479*_cegg +-1.537150*_feg +-0.498535*_gcdd ;_ebbg =-0.969256*_cegg +1.875992*_feg +0.041556*_gcdd ;_ebda =0.055648*_cegg +-0.204043*_feg +1.057311*_gcdd ;_egcg =_fba .Min (_fba .Max (_egcg ,0),1.0);_ebbg =_fba .Min (_fba .Max (_ebbg ,0),1.0);_ebda =_fba .Min (_fba .Max (_ebda ,0),1.0);_acfba [0]=uint32 (_egcg *_eeefe );_acfba [1]=uint32 (_ebbg *_eeefe );_acfba [2]=uint32 (_ebda *_eeefe );if _fgeb =_ddabc .WriteSamples (_acfba );_fgeb !=nil {return img ,_fgeb ;};};return _bffcg (&_aadab ),nil ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_ffce *pdfCIDFontType0 )ToPdfObject ()_eec .PdfObject {return _eec .MakeNull ()};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_fbaa *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_eec .PdfObject )(PdfColor ,error ){if _fbaa .Alternate ==nil {if _fbaa .N ==1{_dbda :=NewPdfColorspaceDeviceGray ();return _dbda .ColorFromPdfObjects (objects );}else if _fbaa .N ==3{_ccbg :=NewPdfColorspaceDeviceRGB ();return _ccbg .ColorFromPdfObjects (objects );}else if _fbaa .N ==4{_fagfd :=NewPdfColorspaceDeviceCMYK ();return _fagfd .ColorFromPdfObjects (objects );}else {return nil ,_fe .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _fbaa .Alternate .ColorFromPdfObjects (objects );};

// AddExtGState adds a graphics state to the XObject resources.
func (_dcaea *PdfPage )AddExtGState (name _eec .PdfObjectName ,egs *_eec .PdfObjectDictionary )error {if _dcaea .Resources ==nil {_dcaea .Resources =NewPdfPageResources ();};if _dcaea .Resources .ExtGState ==nil {_dcaea .Resources .ExtGState =_eec .MakeDict ();};_fcafb ,_adafe :=_eec .TraceToDirectObject (_dcaea .Resources .ExtGState ).(*_eec .PdfObjectDictionary );if !_adafe {_bfg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_eec .TraceToDirectObject (_dcaea .Resources .ExtGState ));return _fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fcafb .Set (name ,egs );return nil ;};func _aagdf (_eabcc *_eec .PdfObjectDictionary )(*PdfTilingPattern ,error ){_fgbbg :=&PdfTilingPattern {};_febd :=_eabcc .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _febd ==nil {_bfg .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gcec ,_dbaa :=_febd .(*_eec .PdfObjectInteger );if !_dbaa {_bfg .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_febd );return nil ,_eec .ErrTypeError ;};_fgbbg .PaintType =_gcec ;_febd =_eabcc .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _febd ==nil {_bfg .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gdcbbd ,_dbaa :=_febd .(*_eec .PdfObjectInteger );if !_dbaa {_bfg .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_febd );return nil ,_eec .ErrTypeError ;};_fgbbg .TilingType =_gdcbbd ;_febd =_eabcc .Get ("\u0042\u0042\u006f\u0078");if _febd ==nil {_bfg .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_febd =_eec .TraceToDirectObject (_febd );_gdcec ,_dbaa :=_febd .(*_eec .PdfObjectArray );if !_dbaa {_bfg .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_febd );return nil ,_eec .ErrTypeError ;};_fdbad ,_aggace :=NewPdfRectangle (*_gdcec );if _aggace !=nil {_bfg .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_aggace );return nil ,_aggace ;};_fgbbg .BBox =_fdbad ;_febd =_eabcc .Get ("\u0058\u0053\u0074e\u0070");if _febd ==nil {_bfg .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fcgdf ,_aggace :=_eec .GetNumberAsFloat (_febd );if _aggace !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_fcgdf );return nil ,_aggace ;};_fgbbg .XStep =_eec .MakeFloat (_fcgdf );_febd =_eabcc .Get ("\u0059\u0053\u0074e\u0070");if _febd ==nil {_bfg .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_dbecfe ,_aggace :=_eec .GetNumberAsFloat (_febd );if _aggace !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_dbecfe );return nil ,_aggace ;};_fgbbg .YStep =_eec .MakeFloat (_dbecfe );_febd =_eabcc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _febd ==nil {_bfg .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_eabcc ,_dbaa =_eec .TraceToDirectObject (_febd ).(*_eec .PdfObjectDictionary );if !_dbaa {return nil ,_b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_febd );};_cgace ,_aggace :=NewPdfPageResourcesFromDict (_eabcc );if _aggace !=nil {return nil ,_aggace ;};_fgbbg .Resources =_cgace ;if _agag :=_eabcc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_agag !=nil {_gecge ,_dcdf :=_agag .(*_eec .PdfObjectArray );if !_dcdf {_bfg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_agag );return nil ,_eec .ErrTypeError ;};_fgbbg .Matrix =_gecge ;};return _fgbbg ,nil ;};

// PdfVersion returns version of the PDF file.
func (_aafde *PdfReader )PdfVersion ()_eec .Version {return _aafde ._ggagaa .PdfVersion ()};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_beeg _eec .PdfObject ;};func _badbg (_dbfg _eec .PdfObject )(map[_fcb .CharCode ]float64 ,error ){if _dbfg ==nil {return nil ,nil ;};_fbce ,_baae :=_eec .GetArray (_dbfg );if !_baae {return nil ,nil ;};_gdeb :=map[_fcb .CharCode ]float64 {};_fcgcd :=_fbce .Len ();for _daaad :=0;_daaad < _fcgcd -1;_daaad ++{_gefb :=_eec .TraceToDirectObject (_fbce .Get (_daaad ));_bgfdg ,_acgda :=_eec .GetIntVal (_gefb );if !_acgda {return nil ,_b .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_daaad ,_gefb );};_daaad ++;if _daaad > _fcgcd -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_fbce );};_edfba :=_eec .TraceToDirectObject (_fbce .Get (_daaad ));switch _edfba .(type ){case *_eec .PdfObjectArray :_agba ,_ :=_eec .GetArray (_edfba );if _bgdad ,_cbfaf :=_agba .ToFloat64Array ();_cbfaf ==nil {for _becda :=0;_becda < len (_bgdad );_becda ++{_gdeb [_fcb .CharCode (_bgfdg +_becda )]=_bgdad [_becda ];};}else {return nil ,_b .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_daaad ,_edfba );};case *_eec .PdfObjectInteger :_dffee ,_beecg :=_eec .GetIntVal (_edfba );if !_beecg {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_daaad ,_edfba );};_daaad ++;if _daaad > _fcgcd -1{return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_fbce );};_gfacd :=_fbce .Get (_daaad );_abbbc ,_ebgf :=_eec .GetNumberAsFloat (_gfacd );if _ebgf !=nil {return nil ,_b .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_daaad ,_gfacd );};for _gbfc :=_bgfdg ;_gbfc <=_dffee ;_gbfc ++{_gdeb [_fcb .CharCode (_gbfc )]=_abbbc ;};default:return nil ,_b .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_daaad ,_edfba );};};return _gdeb ,nil ;};func (_fad *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};func (_acfdf SignatureValidationResult )String ()string {var _ecabc _gf .Buffer ;_ecabc .WriteString (_b .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_acfdf .Name ));if _acfdf .Date ._bgcc > 0{_ecabc .WriteString (_b .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_acfdf .Date .ToGoTime ().String ()));}else {_ecabc .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_acfdf .Reason )> 0{_ecabc .WriteString (_b .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_acfdf .Reason ));}else {_ecabc .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_acfdf .Location )> 0{_ecabc .WriteString (_b .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_acfdf .Location ));}else {_ecabc .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_acfdf .ContactInfo )> 0{_ecabc .WriteString (_b .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_acfdf .ContactInfo ));}else {_ecabc .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_ecabc .WriteString (_b .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_acfdf .Fields )));if _acfdf .IsSigned {_ecabc .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_ecabc .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _acfdf .IsVerified {_ecabc .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_ecabc .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _acfdf .IsTrusted {_ecabc .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_ecabc .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_acfdf .GeneralizedTime .IsZero (){_ecabc .WriteString (_b .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_acfdf .GeneralizedTime .String ()));};return _ecabc .String ();};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_aafbed .Lock ();defer _aafbed .Unlock ();_cgdda =subject };

// ToPdfObject returns the button field dictionary within an indirect object.
func (_bebb *PdfFieldButton )ToPdfObject ()_eec .PdfObject {_bebb .PdfField .ToPdfObject ();_ebcaf :=_bebb ._bedf ;_febc :=_ebcaf .PdfObject .(*_eec .PdfObjectDictionary );_febc .Set ("\u0046\u0054",_eec .MakeName ("\u0042\u0074\u006e"));if _bebb .Opt !=nil {_febc .Set ("\u004f\u0070\u0074",_bebb .Opt );};return _ebcaf ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_ffcaf *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccfe :=vals [0];if _ccfe < 0.0||_ccfe > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_deagg :=vals [1];if _deagg < 0.0||_deagg > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fae :=vals [2];if _fae < 0.0||_fae > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acfb :=NewPdfColorCalRGB (_ccfe ,_deagg ,_fae );return _acfb ,nil ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_fdge :=NewPdfAnnotation ();_bbe :=&PdfAnnotationSquare {};_bbe .PdfAnnotation =_fdge ;_bbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdge .SetContext (_bbe );return _bbe ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_ggaf :_eec .MakeIndirectObject (_eec .MakeDict ()),VRI :map[string ]*VRI {}};};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// A returns the value of the A component of the color.
func (_gcbfb *PdfColorCalRGB )A ()float64 {return _gcbfb [0]};func (_gefd *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _gefd ._ggagaa .GetCrypter ()!=nil &&!_gefd ._ggagaa .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_aeccb :=_gefd ._becgd ;_bdgb :=_aeccb .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _bdgb ==nil {return nil ,nil ;};_gbbg ,_ :=_eec .GetIndirect (_bdgb );_bdgb =_eec .TraceToDirectObject (_bdgb );if _eec .IsNullObject (_bdgb ){_bfg .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");return nil ,nil ;};_acecd ,_gafba :=_eec .GetDict (_bdgb );if !_gafba {_bfg .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bdgb );_bfg .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");return nil ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bdgb );};_bfg .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");_bfg .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_gefd ._bceb {_defcg :=_gefd .traverseObjectData (_acecd );if _defcg !=nil {_bfg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_defcg );return nil ,_defcg ;};};_bedaf ,_cgedg :=_gefd .newPdfAcroFormFromDict (_gbbg ,_acecd );if _cgedg !=nil {return nil ,_cgedg ;};return _bedaf ,nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_eda *PdfAnnotation )GetContext ()PdfModel {if _eda ==nil {return nil ;};return _eda ._gda ;};func (_fcge *PdfReader )newPdfAnnotationMovieFromDict (_edbc *_eec .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_dbcc :=PdfAnnotationMovie {};_dbcc .T =_edbc .Get ("\u0054");_dbcc .Movie =_edbc .Get ("\u004d\u006f\u0076i\u0065");_dbcc .A =_edbc .Get ("\u0041");return &_dbcc ,nil ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_eec .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_dcca *_eec .PdfIndirectObject ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_caeae pdfCIDFontType2 )GetCharMetrics (code _fcb .CharCode )(_de .CharMetrics ,bool ){if _ebde ,_ddef :=_caeae ._bdfge [code ];_ddef {return _de .CharMetrics {Wx :_ebde },true ;};_gbgd :=rune (code );_bbfce ,_bccf :=_caeae ._cfbcg [_gbgd ];if !_bccf {_bbfce =int (_caeae ._dbcf );};return _de .CharMetrics {Wx :float64 (_bbfce )},true ;};func (_bafe *PdfReader )newPdfSignatureFromIndirect (_bdgca *_eec .PdfIndirectObject )(*PdfSignature ,error ){_edeae ,_fcbc :=_bdgca .PdfObject .(*_eec .PdfObjectDictionary );if !_fcbc {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,ErrTypeCheck ;};if _aaddb ,_afgae :=_bafe ._cdafg .GetModelFromPrimitive (_bdgca ).(*PdfSignature );_afgae {return _aaddb ,nil ;};_afaae :=&PdfSignature {};_afaae ._fgdda =_bdgca ;_afaae .Type ,_ =_eec .GetName (_edeae .Get ("\u0054\u0079\u0070\u0065"));_afaae .Filter ,_fcbc =_eec .GetName (_edeae .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_fcbc {_bfg .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_afaae .SubFilter ,_ =_eec .GetName (_edeae .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_afaae .Contents ,_fcbc =_eec .GetString (_edeae .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_fcbc {_bfg .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_afaae .Cert =_edeae .Get ("\u0043\u0065\u0072\u0074");_afaae .ByteRange ,_ =_eec .GetArray (_edeae .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_afaae .Reference ,_ =_eec .GetArray (_edeae .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_afaae .Changes ,_ =_eec .GetArray (_edeae .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_afaae .Name ,_ =_eec .GetString (_edeae .Get ("\u004e\u0061\u006d\u0065"));_afaae .M ,_ =_eec .GetString (_edeae .Get ("\u004d"));_afaae .Location ,_ =_eec .GetString (_edeae .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));_afaae .Reason ,_ =_eec .GetString (_edeae .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_afaae .ContactInfo ,_ =_eec .GetString (_edeae .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_afaae .R ,_ =_eec .GetInt (_edeae .Get ("\u0052"));_afaae .V ,_ =_eec .GetInt (_edeae .Get ("\u0056"));_afaae .PropBuild ,_ =_eec .GetDict (_edeae .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_afaae .PropAuthTime ,_ =_eec .GetInt (_edeae .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));_afaae .PropAuthType ,_ =_eec .GetName (_edeae .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _afaae ,nil ;};func (_egece *PdfWriter )hasObject (_bffgfd _eec .PdfObject )bool {_ ,_cegfe :=_egece ._agdb [_bffgfd ];return _cegfe ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_abcde *PdfShading )GetContainingPdfObject ()_eec .PdfObject {return _abcde ._fbeg };

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_gec :=NewPdfAnnotation ();_febef :=&PdfAnnotation3D {};_febef .PdfAnnotation =_gec ;_gec .SetContext (_febef );return _febef ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_bbbfe *PdfReader )IsEncrypted ()(bool ,error ){return _bbbfe ._ggagaa .IsEncrypted ()};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_cgabd *XObjectForm )GetContainingPdfObject ()_eec .PdfObject {return _cgabd ._edeb };

// SetVersion sets the PDF version of the output file.
func (_gcae *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_gcae ._effdf =majorVersion ;_gcae ._ebagb =minorVersion ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_efeg :=NewPdfAnnotation ();_ffa :=&PdfAnnotationText {};_ffa .PdfAnnotation =_efeg ;_ffa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efeg .SetContext (_ffa );return _ffa ;};func _ddbeg (_bcfa string )(string ,error ){var _eabegc _gf .Buffer ;_eabegc .WriteString (_bcfa );_gcbc :=make ([]byte ,8+16);_abcbd :=_bf .Now ().UTC ().UnixNano ();_d .BigEndian .PutUint64 (_gcbc ,uint64 (_abcbd ));_ ,_ddbf :=_bgb .Read (_gcbc [8:]);if _ddbf !=nil {return "",_ddbf ;};_eabegc .WriteString (_g .EncodeToString (_gcbc ));return _eabegc .String (),nil ;};func (_cagf *PdfReader )newPdfAnnotationSquareFromDict (_edcdf *_eec .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_fceca :=PdfAnnotationSquare {};_dca ,_cdcd :=_cagf .newPdfAnnotationMarkupFromDict (_edcdf );if _cdcd !=nil {return nil ,_cdcd ;};_fceca .PdfAnnotationMarkup =_dca ;_fceca .BS =_edcdf .Get ("\u0042\u0053");_fceca .IC =_edcdf .Get ("\u0049\u0043");_fceca .BE =_edcdf .Get ("\u0042\u0045");_fceca .RD =_edcdf .Get ("\u0052\u0044");return &_fceca ,nil ;};func _ggg (_eagdc *_eec .PdfObjectDictionary )*VRI {_ceeb ,_ :=_eec .GetString (_eagdc .Get ("\u0054\u0055"));_fdeg ,_ :=_eec .GetString (_eagdc .Get ("\u0054\u0053"));return &VRI {Cert :_decbb (_eagdc .Get ("\u0043\u0065\u0072\u0074")),OCSP :_decbb (_eagdc .Get ("\u004f\u0043\u0053\u0050")),CRL :_decbb (_eagdc .Get ("\u0043\u0052\u004c")),TU :_ceeb ,TS :_fdeg };};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// ToPdfObject implements interface PdfModel.
func (_ag *PdfActionGoToR )ToPdfObject ()_eec .PdfObject {_ag .PdfAction .ToPdfObject ();_cfg :=_ag ._aa ;_abe :=_cfg .PdfObject .(*_eec .PdfObjectDictionary );_abe .SetIfNotNil ("\u0053",_eec .MakeName (string (ActionTypeGoToR )));if _ag .F !=nil {_abe .Set ("\u0046",_ag .F .ToPdfObject ());};_abe .SetIfNotNil ("\u0044",_ag .D );_abe .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ag .NewWindow );return _cfg ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _eec .StreamEncoder )(*XObjectImage ,error ){_ggace :=NewXObjectImage ();return UpdateXObjectImageFromImage (_ggace ,img ,cs ,encoder );};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_eade :=NewPdfAction ();_db :=&PdfActionMovie {};_db .PdfAction =_eade ;_eade .SetContext (_db );return _db ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_eec .PdfObjectName ;Colorants _eec .PdfObject ;Process _eec .PdfObject ;MixingHints _eec .PdfObject ;_bdgg *_eec .PdfIndirectObject ;};var _ _eec .PdfObject =&pdfSignDictionary {};

// ToPdfObject returns the PDF representation of the pattern.
func (_fgcdg *PdfPattern )ToPdfObject ()_eec .PdfObject {_eaddg :=_fgcdg .getDict ();_eaddg .Set ("\u0054\u0079\u0070\u0065",_eec .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_eaddg .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_eec .MakeInteger (_fgcdg .PatternType ));return _fgcdg ._ggede ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _eec .PdfObject ;LE _eec .PdfObject ;BS _eec .PdfObject ;IC _eec .PdfObject ;BE _eec .PdfObject ;IT _eec .PdfObject ;Measure _eec .PdfObject ;};func (_fcebcc *PdfReader )loadAnnotations (_dfgdga _eec .PdfObject )([]*PdfAnnotation ,error ){_fdbabg ,_dceg :=_eec .GetArray (_dfgdga );if !_dceg {return nil ,_b .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _aafggc []*PdfAnnotation ;for _ ,_cbadf :=range _fdbabg .Elements (){_cbadf =_eec .ResolveReference (_cbadf );if _ ,_feeed :=_cbadf .(*_eec .PdfObjectNull );_feeed {continue ;};_edbeac ,_aebf :=_cbadf .(*_eec .PdfObjectDictionary );_bgefg ,_gdbb :=_cbadf .(*_eec .PdfIndirectObject );if _aebf {_bgefg =&_eec .PdfIndirectObject {};_bgefg .PdfObject =_edbeac ;}else {if !_gdbb {return nil ,_b .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_acec ,_cggda :=_fcebcc .newPdfAnnotationFromIndirectObject (_bgefg );if _cggda !=nil {return nil ,_cggda ;};switch _ffbd :=_acec .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_bgeag :=range _fcebcc .AcroForm .AllFields (){if _bgeag ._bedf ==_ffbd .Parent {_ffbd ._febe =_bgeag ;break ;};};};if _acec !=nil {_aafggc =append (_aafggc ,_acec );};};return _aafggc ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_bggb *PdfColorspaceLab )ToPdfObject ()_eec .PdfObject {_gdfc :=_eec .MakeArray ();_gdfc .Append (_eec .MakeName ("\u004c\u0061\u0062"));_acdb :=_eec .MakeDict ();if _bggb .WhitePoint !=nil {_bggfb :=_eec .MakeArray (_eec .MakeFloat (_bggb .WhitePoint [0]),_eec .MakeFloat (_bggb .WhitePoint [1]),_eec .MakeFloat (_bggb .WhitePoint [2]));_acdb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bggfb );}else {_bfg .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};if _bggb .BlackPoint !=nil {_efab :=_eec .MakeArray (_eec .MakeFloat (_bggb .BlackPoint [0]),_eec .MakeFloat (_bggb .BlackPoint [1]),_eec .MakeFloat (_bggb .BlackPoint [2]));_acdb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_efab );};if _bggb .Range !=nil {_bbgc :=_eec .MakeArray (_eec .MakeFloat (_bggb .Range [0]),_eec .MakeFloat (_bggb .Range [1]),_eec .MakeFloat (_bggb .Range [2]),_eec .MakeFloat (_bggb .Range [3]));_acdb .Set ("\u0052\u0061\u006eg\u0065",_bbgc );};_gdfc .Append (_acdb );if _bggb ._bafdg !=nil {_bggb ._bafdg .PdfObject =_gdfc ;return _bggb ._bafdg ;};return _gdfc ;};func (_fbagd *LTV )buildCertChain (_ebbdb ,_dbgfb []*_ga .Certificate )([]*_ga .Certificate ,map[string ]*_ga .Certificate ,error ){_ceac :=map[string ]*_ga .Certificate {};for _ ,_ffadb :=range _ebbdb {_ceac [_ffadb .Subject .CommonName ]=_ffadb ;};_agcbe :=_ebbdb ;for _ ,_facdc :=range _dbgfb {_gcgba :=_facdc .Subject .CommonName ;if _ ,_cegaa :=_ceac [_gcgba ];_cegaa {continue ;};_ceac [_gcgba ]=_facdc ;_agcbe =append (_agcbe ,_facdc );};if len (_agcbe )==0{return nil ,nil ,ErrSignNoCertificates ;};var _egeb error ;for _egcee :=_agcbe [0];_egcee !=nil &&!_fbagd .CertClient .IsCA (_egcee );{_efbf ,_bbgd :=_ceac [_egcee .Issuer .CommonName ];if !_bbgd {if _efbf ,_egeb =_fbagd .CertClient .GetIssuer (_egcee );_egeb !=nil {_bfg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_egeb );break ;};_ceac [_egcee .Issuer .CommonName ]=_efbf ;_agcbe =append (_agcbe ,_efbf );};_egcee =_efbf ;};return _agcbe ,_ceac ,nil ;};func (_cbaa *pdfFontSimple )baseFields ()*fontCommon {return &_cbaa .fontCommon };

// GetAscent returns the Ascent of the font `descriptor`.
func (_eccf *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _eec .GetNumberAsFloat (_eccf .Ascent );};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_aafbed .Lock ();defer _aafbed .Unlock ();_gbabbc =producer };

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_gad :=NewPdfAction ();_ab :=&PdfActionGoToR {};_ab .PdfAction =_gad ;_gad .SetContext (_ab );return _ab ;};func (_bggbab *PdfReader )buildOutlineTree (_dbeb _eec .PdfObject ,_ddbdb *PdfOutlineTreeNode ,_ebbag *PdfOutlineTreeNode ,_bfabd map[_eec .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _bfabd ==nil {_bfabd =map[_eec .PdfObject ]struct{}{};};_bfabd [_dbeb ]=struct{}{};_eegbc ,_ecfcb :=_dbeb .(*_eec .PdfIndirectObject );if !_ecfcb {return nil ,nil ,_b .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_dbeb );};_dedgb ,_fdefa :=_eegbc .PdfObject .(*_eec .PdfObjectDictionary );if !_fdefa {return nil ,nil ,_fe .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bfg .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_dedgb ,_eegbc ,_eegbc );if _facb :=_dedgb .Get ("\u0054\u0069\u0074l\u0065");_facb !=nil {_egfefb ,_aeea :=_bggbab .newPdfOutlineItemFromIndirectObject (_eegbc );if _aeea !=nil {return nil ,nil ,_aeea ;};_egfefb .Parent =_ddbdb ;_egfefb .Prev =_ebbag ;_fcgaf :=_eec .ResolveReference (_dedgb .Get ("\u0046\u0069\u0072s\u0074"));if _ ,_eafbcg :=_bfabd [_fcgaf ];_fcgaf !=nil &&_fcgaf !=_eegbc &&!_eafbcg {if !_eec .IsNullObject (_fcgaf ){_fddbd ,_gcggg ,_abfg :=_bggbab .buildOutlineTree (_fcgaf ,&_egfefb .PdfOutlineTreeNode ,nil ,_bfabd );if _abfg !=nil {_bfg .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_abfg );}else {_egfefb .First =_fddbd ;_egfefb .Last =_gcggg ;};};};_dcbgeb :=_eec .ResolveReference (_dedgb .Get ("\u004e\u0065\u0078\u0074"));if _ ,_acafa :=_bfabd [_dcbgeb ];_dcbgeb !=nil &&_dcbgeb !=_eegbc &&!_acafa {if !_eec .IsNullObject (_dcbgeb ){_decgg ,_fbfec ,_ceea :=_bggbab .buildOutlineTree (_dcbgeb ,_ddbdb ,&_egfefb .PdfOutlineTreeNode ,_bfabd );if _ceea !=nil {_bfg .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_ceea );}else {_egfefb .Next =_decgg ;return &_egfefb .PdfOutlineTreeNode ,_fbfec ,nil ;};};};return &_egfefb .PdfOutlineTreeNode ,&_egfefb .PdfOutlineTreeNode ,nil ;};_baff ,_badeb :=_badgb (_eegbc );if _badeb !=nil {return nil ,nil ,_badeb ;};_baff .Parent =_ddbdb ;if _cecgc :=_dedgb .Get ("\u0046\u0069\u0072s\u0074");_cecgc !=nil {_cecgc =_eec .ResolveReference (_cecgc );if _ ,_dcceea :=_bfabd [_cecgc ];_cecgc !=nil &&_cecgc !=_eegbc &&!_dcceea {_agff :=_eec .TraceToDirectObject (_cecgc );if _ ,_eaeda :=_agff .(*_eec .PdfObjectNull );!_eaeda &&_agff !=nil {_bgdaac ,_cbcab ,_dgcfc :=_bggbab .buildOutlineTree (_cecgc ,&_baff .PdfOutlineTreeNode ,nil ,_bfabd );if _dgcfc !=nil {_bfg .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_dgcfc );}else {_baff .First =_bgdaac ;_baff .Last =_cbcab ;};};};};return &_baff .PdfOutlineTreeNode ,&_baff .PdfOutlineTreeNode ,nil ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_cca :=&PdfAction {};_cca ._aa =_eec .MakeIndirectObject (_eec .MakeDict ());return _cca ;};

// ToPdfObject implements interface PdfModel.
func (_gdbea *PdfAnnotationMovie )ToPdfObject ()_eec .PdfObject {_gdbea .PdfAnnotation .ToPdfObject ();_bcag :=_gdbea ._dge ;_aefa :=_bcag .PdfObject .(*_eec .PdfObjectDictionary );_aefa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u004d\u006f\u0076i\u0065"));_aefa .SetIfNotNil ("\u0054",_gdbea .T );_aefa .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_gdbea .Movie );_aefa .SetIfNotNil ("\u0041",_gdbea .A );return _bcag ;};func _deccg (_deeg *XObjectImage )error {if _deeg .SMask ==nil {return nil ;};_abcefc ,_aacae :=_deeg .SMask .(*_eec .PdfObjectStream );if !_aacae {_bfg .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _eec .ErrTypeError ;};_ffbdb :=_abcefc .PdfObjectDictionary ;_gefge :=_ffbdb .Get ("\u004d\u0061\u0074t\u0065");if _gefge ==nil {return nil ;};_fbcaa ,_bgceb :=_affbc (_gefge .(*_eec .PdfObjectArray ));if _bgceb !=nil {return _bgceb ;};_dabgb :=_eec .MakeArrayFromFloats ([]float64 {_fbcaa });_ffbdb .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_dabgb );return nil ;};type pdfFont interface{_de .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_eec .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_eebgc *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bgggf ,_cdgg :=color .(*PdfColorCalRGB );if !_cdgg {_bfg .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");return nil ,_fe .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_abeag :=_bgggf .A ();_gded :=_bgggf .B ();_eaccb :=_bgggf .C ();X :=_eebgc .Matrix [0]*_fba .Pow (_abeag ,_eebgc .Gamma [0])+_eebgc .Matrix [3]*_fba .Pow (_gded ,_eebgc .Gamma [1])+_eebgc .Matrix [6]*_fba .Pow (_eaccb ,_eebgc .Gamma [2]);Y :=_eebgc .Matrix [1]*_fba .Pow (_abeag ,_eebgc .Gamma [0])+_eebgc .Matrix [4]*_fba .Pow (_gded ,_eebgc .Gamma [1])+_eebgc .Matrix [7]*_fba .Pow (_eaccb ,_eebgc .Gamma [2]);Z :=_eebgc .Matrix [2]*_fba .Pow (_abeag ,_eebgc .Gamma [0])+_eebgc .Matrix [5]*_fba .Pow (_gded ,_eebgc .Gamma [1])+_eebgc .Matrix [8]*_fba .Pow (_eaccb ,_eebgc .Gamma [2]);_aabe :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cebcc :=-0.969256*X +1.875992*Y +0.041556*Z ;_cdf :=0.055648*X +-0.204043*Y +1.057311*Z ;_aabe =_fba .Min (_fba .Max (_aabe ,0),1.0);_cebcc =_fba .Min (_fba .Max (_cebcc ,0),1.0);_cdf =_fba .Min (_fba .Max (_cdf ,0),1.0);return NewPdfColorDeviceRGB (_aabe ,_cebcc ,_cdf ),nil ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_adcf *PdfReader )GetOCProperties ()(_eec .PdfObject ,error ){_febdb :=_adcf ._becgd ;_ccgea :=_febdb .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_ccgea =_eec .ResolveReference (_ccgea );if !_adcf ._bceb {_aafcd :=_adcf .traverseObjectData (_ccgea );if _aafcd !=nil {return nil ,_aafcd ;};};return _ccgea ,nil ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_fggfc *PdfReader )Inspect ()(map[string ]int ,error ){return _fggfc ._ggagaa .Inspect ()};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_edfe :=NewPdfAnnotation ();_bgdf :=&PdfAnnotationCircle {};_bgdf .PdfAnnotation =_edfe ;_bgdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edfe .SetContext (_bgdf );return _bgdf ;};func (_fbggg *PdfAcroForm )fill (_deff FieldValueProvider ,_efcfd FieldAppearanceGenerator )error {if _fbggg ==nil {return nil ;};_gdebe ,_aabfg :=_deff .FieldValues ();if _aabfg !=nil {return _aabfg ;};for _ ,_ecdbf :=range _fbggg .AllFields (){_edca :=_ecdbf .PartialName ();_bbeab ,_cfdgf :=_gdebe [_edca ];if !_cfdgf {if _dfbfd ,_fcffe :=_ecdbf .FullName ();_fcffe ==nil {_bbeab ,_cfdgf =_gdebe [_dfbfd ];};};if !_cfdgf {_bfg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_edca );continue ;};if _cbbd :=_efdda (_ecdbf ,_bbeab );_cbbd !=nil {return _cbbd ;};if _efcfd ==nil {continue ;};for _ ,_bbgfb :=range _ecdbf .Annotations {_gdbg ,_ecdbb :=_efcfd .GenerateAppearanceDict (_fbggg ,_ecdbf ,_bbgfb );if _ecdbb !=nil {return _ecdbb ;};_bbgfb .AP =_gdbg ;_bbgfb .ToPdfObject ();};};return nil ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _eec .PdfObject ;IC _eec .PdfObject ;RO _eec .PdfObject ;OverlayText _eec .PdfObject ;Repeat _eec .PdfObject ;DA _eec .PdfObject ;Q _eec .PdfObject ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_eec .PdfObjectInteger ;BitsPerComponent *_eec .PdfObjectInteger ;VerticesPerRow *_eec .PdfObjectInteger ;Decode *_eec .PdfObjectArray ;Function []PdfFunction ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dfaa pdfFontType0 )GetRuneMetrics (r rune )(_de .CharMetrics ,bool ){if _dfaa .DescendantFont ==nil {_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_dfaa );return _de .CharMetrics {},false ;};return _dfaa .DescendantFont .GetRuneMetrics (r );};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_dcee *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_fgba :=_dcee .actualFont ();if _fgba ==nil {_bfg .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_dcee ._baaf );return _de .CharMetrics {},false ;};if _dged ,_gdae :=_fgba .GetRuneMetrics (r );_gdae {return _dged ,true ;};if _dfgde ,_begec :=_dcee .GetFontDescriptor ();_begec ==nil &&_dfgde !=nil {return _de .CharMetrics {Wx :_dfgde ._fbfef },true ;};_bfg .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dcee );return _de .CharMetrics {},false ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_fdbeg *Image )ConvertToBinary ()error {if _fdbeg .ColorComponents ==1&&_fdbeg .BitsPerComponent ==1{return nil ;};_faadf ,_fbfg :=_fdbeg .ToGoImage ();if _fbfg !=nil {return _fbfg ;};_dbcdg ,_fbfg :=_fc .MonochromeConverter .Convert (_faadf );if _fbfg !=nil {return _fbfg ;};_fdbeg .BitsPerComponent =1;_fdbeg .ColorComponents =1;_fdbeg .Data =_dbcdg .Base ().Data ;return nil ;};

// IsCID returns true if the underlying font is CID.
func (_fccg *PdfFont )IsCID ()bool {return _fccg .baseFields ().isCIDFont ()};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_ddgca :=PdfDate {};_dcddb :=_dcgfb .FindAllStringSubmatch (dateStr ,1);if len (_dcddb )< 1{return _ddgca ,_b .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );};if len (_dcddb [0])!=10{return _ddgca ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");};_ddgca ._bgcc ,_ =_fd .ParseInt (_dcddb [0][1],10,32);_ddgca ._dbbdc ,_ =_fd .ParseInt (_dcddb [0][2],10,32);_ddgca ._dbcbf ,_ =_fd .ParseInt (_dcddb [0][3],10,32);_ddgca ._dbfcf ,_ =_fd .ParseInt (_dcddb [0][4],10,32);_ddgca ._bebab ,_ =_fd .ParseInt (_dcddb [0][5],10,32);_ddgca ._gdfec ,_ =_fd .ParseInt (_dcddb [0][6],10,32);if len (_dcddb [0][7])> 0{_ddgca ._caab =_dcddb [0][7][0];}else {_ddgca ._caab ='+';};if len (_dcddb [0][8])> 0{_ddgca ._acbag ,_ =_fd .ParseInt (_dcddb [0][8],10,32);}else {_ddgca ._acbag =0;};if len (_dcddb [0][9])> 0{_ddgca ._dege ,_ =_fd .ParseInt (_dcddb [0][9],10,32);}else {_ddgca ._dege =0;};return _ddgca ,nil ;};func _dcbdf (_deee *_eec .PdfObjectDictionary )(*PdfShadingType3 ,error ){_feeb :=PdfShadingType3 {};_ggbcc :=_deee .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _ggbcc ==nil {_bfg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;};_bfge ,_eaggb :=_ggbcc .(*_eec .PdfObjectArray );if !_eaggb {_bfg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggbcc );return nil ,_eec .ErrTypeError ;};if _bfge .Len ()!=6{_bfg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bfge .Len ());return nil ,ErrInvalidAttribute ;};_feeb .Coords =_bfge ;if _dbfaf :=_deee .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_dbfaf !=nil {_dbfaf =_eec .TraceToDirectObject (_dbfaf );_cddef ,_ededg :=_dbfaf .(*_eec .PdfObjectArray );if !_ededg {_bfg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dbfaf );return nil ,_eec .ErrTypeError ;};_feeb .Domain =_cddef ;};_ggbcc =_deee .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ggbcc ==nil {_bfg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_feeb .Function =[]PdfFunction {};if _addc ,_aafaa :=_ggbcc .(*_eec .PdfObjectArray );_aafaa {for _ ,_abfdb :=range _addc .Elements (){_abdb ,_ffdfd :=_bdfbe (_abfdb );if _ffdfd !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ffdfd );return nil ,_ffdfd ;};_feeb .Function =append (_feeb .Function ,_abdb );};}else {_edaaf ,_eeaecf :=_bdfbe (_ggbcc );if _eeaecf !=nil {_bfg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eeaecf );return nil ,_eeaecf ;};_feeb .Function =append (_feeb .Function ,_edaaf );};if _fgecc :=_deee .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_fgecc !=nil {_fgecc =_eec .TraceToDirectObject (_fgecc );_aaccd ,_cefgd :=_fgecc .(*_eec .PdfObjectArray );if !_cefgd {_bfg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fgecc );return nil ,_eec .ErrTypeError ;};if _aaccd .Len ()!=2{_bfg .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aaccd .Len ());return nil ,ErrInvalidAttribute ;};_feeb .Extend =_aaccd ;};return &_feeb ,nil ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_ccfg :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_ccfg ;};func _bbfg (_ffdb _eec .PdfObject )(*PdfColorspaceDeviceN ,error ){_aegd :=NewPdfColorspaceDeviceN ();if _gbfbc ,_ffbec :=_ffdb .(*_eec .PdfIndirectObject );_ffbec {_aegd ._dcca =_gbfbc ;};_ffdb =_eec .TraceToDirectObject (_ffdb );_ggag ,_fbeda :=_ffdb .(*_eec .PdfObjectArray );if !_fbeda {return nil ,_b .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _ggag .Len ()!=4&&_ggag .Len ()!=5{return nil ,_b .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_ffdb =_ggag .Get (0);_bbgca ,_fbeda :=_ffdb .(*_eec .PdfObjectName );if !_fbeda {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_bbgca !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_b .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_ffdb =_ggag .Get (1);_ffdb =_eec .TraceToDirectObject (_ffdb );_ddff ,_fbeda :=_ffdb .(*_eec .PdfObjectArray );if !_fbeda {return nil ,_b .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_aegd .ColorantNames =_ddff ;_ffdb =_ggag .Get (2);_afgeb ,_gbeb :=NewPdfColorspaceFromPdfObject (_ffdb );if _gbeb !=nil {return nil ,_gbeb ;};_aegd .AlternateSpace =_afgeb ;_abbb ,_gbeb :=_bdfbe (_ggag .Get (3));if _gbeb !=nil {return nil ,_gbeb ;};_aegd .TintTransform =_abbb ;if _ggag .Len ()==5{_eagc ,_bcfe :=_agbb (_ggag .Get (4));if _bcfe !=nil {return nil ,_bcfe ;};_aegd .Attributes =_eagc ;};return _aegd ,nil ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_ebga *PdfColorspaceSpecialIndexed )ToPdfObject ()_eec .PdfObject {_cbad :=_eec .MakeArray (_eec .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_cbad .Append (_ebga .Base .ToPdfObject ());_cbad .Append (_eec .MakeInteger (int64 (_ebga .HiVal )));_cbad .Append (_ebga .Lookup );if _ebga ._bgde !=nil {_ebga ._bgde .PdfObject =_cbad ;return _ebga ._bgde ;};return _cbad ;};

// String returns a string that describes `font`.
func (_fbafe *PdfFont )String ()string {_bffgc :="";if _fbafe ._baaf .Encoder ()!=nil {_bffgc =_fbafe ._baaf .Encoder ().String ();};return _b .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_fbafe ._baaf ,_fbafe .baseFields ().coreString (),_bffgc );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gcagd *PdfShadingType7 )ToPdfObject ()_eec .PdfObject {_gcagd .PdfShading .ToPdfObject ();_gdfa ,_cgcdf :=_gcagd .getShadingDict ();if _cgcdf !=nil {_bfg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _gcagd .BitsPerCoordinate !=nil {_gdfa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gcagd .BitsPerCoordinate );};if _gcagd .BitsPerComponent !=nil {_gdfa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gcagd .BitsPerComponent );};if _gcagd .BitsPerFlag !=nil {_gdfa .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gcagd .BitsPerFlag );};if _gcagd .Decode !=nil {_gdfa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gcagd .Decode );};if _gcagd .Function !=nil {if len (_gcagd .Function )==1{_gdfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcagd .Function [0].ToPdfObject ());}else {_fccde :=_eec .MakeArray ();for _ ,_feace :=range _gcagd .Function {_fccde .Append (_feace .ToPdfObject ());};_gdfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fccde );};};return _gcagd ._fbeg ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_bbf :=NewPdfAnnotation ();_ffde :=&PdfAnnotationMovie {};_ffde .PdfAnnotation =_bbf ;_bbf .SetContext (_ffde );return _ffde ;};

// C returns the value of the C component of the color.
func (_befee *PdfColorCalRGB )C ()float64 {return _befee [2]};

// ToPdfObject implements interface PdfModel.
func (_cgd *PdfAnnotationPolygon )ToPdfObject ()_eec .PdfObject {_cgd .PdfAnnotation .ToPdfObject ();_cfadg :=_cgd ._dge ;_gdbe :=_cfadg .PdfObject .(*_eec .PdfObjectDictionary );_cgd .PdfAnnotationMarkup .appendToPdfDictionary (_gdbe );_gdbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));_gdbe .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cgd .Vertices );_gdbe .SetIfNotNil ("\u004c\u0045",_cgd .LE );_gdbe .SetIfNotNil ("\u0042\u0053",_cgd .BS );_gdbe .SetIfNotNil ("\u0049\u0043",_cgd .IC );_gdbe .SetIfNotNil ("\u0042\u0045",_cgd .BE );_gdbe .SetIfNotNil ("\u0049\u0054",_cgd .IT );_gdbe .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cgd .Measure );return _cfadg ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bcbe pdfFontSimple )GetRuneMetrics (r rune )(_de .CharMetrics ,bool ){if _bcbe ._fcage !=nil {_cfca ,_fgaaa :=_bcbe ._fcage [r ];if _fgaaa {return _cfca ,true ;};};_ddge :=_bcbe .Encoder ();if _ddge ==nil {_bfg .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_bcbe );return _de .CharMetrics {},false ;};_bbag ,_bddf :=_ddge .RuneToCharcode (r );if !_bddf {if r !=' '{_bfg .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_bcbe );};return _de .CharMetrics {},false ;};_addea ,_fbda :=_bcbe .GetCharMetrics (_bbag );return _addea ,_fbda ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_dgcd *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func _fecb (_ffd _eec .PdfObject )(*PdfFilespec ,error ){if _ffd ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_ffd );};func (_ddeg *LTV )generateVRIKey (_bbfde *PdfSignature )(string ,error ){_adcda ,_ggbg :=_edgdg (_bbfde .Contents .Bytes ());if _ggbg !=nil {return "",_ggbg ;};return _beb .ToUpper (_g .EncodeToString (_adcda )),nil ;};func (_aeee PdfFont )actualFont ()pdfFont {if _aeee ._baaf ==nil {_bfg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aeee );};return _aeee ._baaf ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_aafg *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bggf :=vals [0];if _bggf < 0.0||_bggf > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbce :=vals [1];if _bbce < 0.0||_bbce > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccgef :=vals [2];if _ccgef < 0.0||_ccgef > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acef :=vals [3];if _acef < 0.0||_acef > 1.0{return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dabag :=NewPdfColorDeviceCMYK (_bggf ,_bbce ,_ccgef ,_acef );return _dabag ,nil ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_aebbe *Image )AlphaMap (mapFunc AlphaMapFunc ){for _dgca ,_ebcb :=range _aebbe ._gfbc {_aebbe ._gfbc [_dgca ]=mapFunc (_ebcb );};};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_fgce *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _fgce .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_bgecba *PdfPageResources )HasExtGState (keyName _eec .PdfObjectName )bool {_ ,_fabab :=_bgecba .GetFontByName (keyName );return _fabab ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_gcabe *PdfPageResources )AddExtGState (gsName _eec .PdfObjectName ,gsDict _eec .PdfObject )error {if _gcabe .ExtGState ==nil {_gcabe .ExtGState =_eec .MakeDict ();};_fddfd :=_gcabe .ExtGState ;_fgbg ,_ggfcc :=_eec .TraceToDirectObject (_fddfd ).(*_eec .PdfObjectDictionary );if !_ggfcc {_bfg .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_fddfd ,_eec .TraceToDirectObject (_fddfd ));return _eec .ErrTypeError ;};_fgbg .Set (gsName ,gsDict );return nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_eec .PdfObjectInteger ;BitsPerComponent *_eec .PdfObjectInteger ;BitsPerFlag *_eec .PdfObjectInteger ;Decode *_eec .PdfObjectArray ;Function []PdfFunction ;};func _bbfcf (_acag *_eec .PdfObjectDictionary ,_fdeec *fontCommon )(*pdfFontType0 ,error ){_aeecg ,_cefe :=_eec .GetArray (_acag .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_cefe {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_fdeec );return nil ,_eec .ErrRangeError ;};if _aeecg .Len ()!=1{_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_aeecg .Len ());return nil ,_eec .ErrRangeError ;};_aaced ,_eecgc :=_ddgd (_aeecg .Get (0),false );if _eecgc !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_eecgc ,_fdeec );return nil ,_eecgc ;};_gbffd :=_fbcg (_fdeec );_gbffd .DescendantFont =_aaced ;_cccd ,_cefe :=_eec .GetNameVal (_acag .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _cefe {if _cccd =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_cccd =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_gbffd ._edff =_fcb .NewIdentityTextEncoder (_cccd );}else if _cf .IsPredefinedCMap (_cccd ){_gbffd ._ceab ,_eecgc =_cf .LoadPredefinedCMap (_cccd );if _eecgc !=nil {_bfg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cccd ,_eecgc );};}else {_bfg .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_cccd );};};if _aegdb :=_aaced .baseFields ()._ecab ;_aegdb !=nil {if _debe :=_aegdb .Name ();_debe =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_debe =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_debe =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_debe =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_gbffd ._edff =_fcb .NewCMapEncoder (_cccd ,_gbffd ._ceab ,_aegdb );};};return _gbffd ,nil ;};func (_bfbf *PdfReader )newPdfFieldFromIndirectObject (_fddge *_eec .PdfIndirectObject ,_cdfb *PdfField )(*PdfField ,error ){if _fgdfc ,_efbg :=_bfbf ._cdafg .GetModelFromPrimitive (_fddge ).(*PdfField );_efbg {return _fgdfc ,nil ;};_eecc ,_cdbfg :=_eec .GetDict (_fddge );if !_cdbfg {return nil ,_b .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_decaf :=NewPdfField ();_decaf ._bedf =_fddge ;_decaf ._bedf .PdfObject =_eecc ;if _dcgeeg ,_gccf :=_eec .GetName (_eecc .Get ("\u0046\u0054"));_gccf {_decaf .FT =_dcgeeg ;};if _cdfb !=nil {_decaf .Parent =_cdfb ;};_decaf .T ,_ =_eecc .Get ("\u0054").(*_eec .PdfObjectString );_decaf .TU ,_ =_eecc .Get ("\u0054\u0055").(*_eec .PdfObjectString );_decaf .TM ,_ =_eecc .Get ("\u0054\u004d").(*_eec .PdfObjectString );_decaf .Ff ,_ =_eecc .Get ("\u0046\u0066").(*_eec .PdfObjectInteger );_decaf .V =_eecc .Get ("\u0056");_decaf .DV =_eecc .Get ("\u0044\u0056");_decaf .AA =_eecc .Get ("\u0041\u0041");_fgfb :=_decaf .FT ;if _fgfb ==nil &&_cdfb !=nil {_fgfb =_cdfb .FT ;};if _fgfb !=nil {switch *_fgfb {case "\u0054\u0078":_gaaag ,_dcae :=_gdga (_eecc );if _dcae !=nil {return nil ,_dcae ;};_gaaag .PdfField =_decaf ;_decaf ._ecbf =_gaaag ;case "\u0043\u0068":_abda ,_fcad :=_gbfd (_eecc );if _fcad !=nil {return nil ,_fcad ;};_abda .PdfField =_decaf ;_decaf ._ecbf =_abda ;case "\u0042\u0074\u006e":_aeeggf ,_cgebg :=_beegc (_eecc );if _cgebg !=nil {return nil ,_cgebg ;};_aeeggf .PdfField =_decaf ;_decaf ._ecbf =_aeeggf ;case "\u0053\u0069\u0067":_fccc ,_bafg :=_bfbf .newPdfFieldSignatureFromDict (_eecc );if _bafg !=nil {return nil ,_bafg ;};_fccc .PdfField =_decaf ;_decaf ._ecbf =_fccc ;default:_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_decaf .FT );return nil ,_fe .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _eegc ,_eaecf :=_eec .GetName (_eecc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_eaecf {if *_eegc =="\u0057\u0069\u0064\u0067\u0065\u0074"{_aded ,_acfbaf :=_bfbf .newPdfAnnotationFromIndirectObject (_fddge );if _acfbaf !=nil {return nil ,_acfbaf ;};_fada ,_acgg :=_aded .GetContext ().(*PdfAnnotationWidget );if !_acgg {return nil ,_fe .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_fada ._febe =_decaf ;_fada .Parent =_decaf ._bedf ;_decaf .Annotations =append (_decaf .Annotations ,_fada );return _decaf ,nil ;};};_cfeg :=true ;if _egbe ,_abgcd :=_eec .GetArray (_eecc .Get ("\u004b\u0069\u0064\u0073"));_abgcd {_fggdf :=make ([]*_eec .PdfIndirectObject ,0,_egbe .Len ());for _ ,_dbbd :=range _egbe .Elements (){_aafb ,_aeed :=_eec .GetIndirect (_dbbd );if !_aeed {_cfcb ,_dfgba :=_eec .GetStream (_dbbd );if _dfgba &&_cfcb .PdfObjectDictionary !=nil {_abdae ,_agec :=_eec .GetNameVal (_cfcb .Get ("\u0054\u0079\u0070\u0065"));if _agec &&_abdae =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_bfg .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");continue ;};};return nil ,_fe .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_eged ,_adbfe :=_eec .GetDict (_aafb );if !_adbfe {return nil ,ErrTypeCheck ;};if _cfeg {_cfeg =!_cffg (_eged );};_fggdf =append (_fggdf ,_aafb );};for _ ,_ebgcd :=range _fggdf {if _cfeg {_abdaee ,_gdba :=_bfbf .newPdfAnnotationFromIndirectObject (_ebgcd );if _gdba !=nil {_bfg .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gdba );return nil ,_gdba ;};_dcdee ,_cegea :=_abdaee ._gda .(*PdfAnnotationWidget );if !_cegea {return nil ,ErrTypeCheck ;};_dcdee ._febe =_decaf ;_decaf .Annotations =append (_decaf .Annotations ,_dcdee );}else {_cdfa ,_gddd :=_bfbf .newPdfFieldFromIndirectObject (_ebgcd ,_decaf );if _gddd !=nil {_bfg .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_gddd );return nil ,_gddd ;};_decaf .Kids =append (_decaf .Kids ,_cdfa );};};};return _decaf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ecgf *PdfAnnotationInk )ToPdfObject ()_eec .PdfObject {_ecgf .PdfAnnotation .ToPdfObject ();_gdcd :=_ecgf ._dge ;_gddb :=_gdcd .PdfObject .(*_eec .PdfObjectDictionary );_ecgf .PdfAnnotationMarkup .appendToPdfDictionary (_gddb );_gddb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0049\u006e\u006b"));_gddb .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_ecgf .InkList );_gddb .SetIfNotNil ("\u0042\u0053",_ecgf .BS );return _gdcd ;};func _efdda (_ddga *PdfField ,_dcdef _eec .PdfObject )error {switch _ddga .GetContext ().(type ){case *PdfFieldText :switch _dcaa :=_dcdef .(type ){case *_eec .PdfObjectName :_adag :=_dcaa ;_bfg .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_adag .String ());_ddga .V =_eec .MakeEncodedString (_dcaa .String (),true );case *_eec .PdfObjectString :_ddga .V =_eec .MakeEncodedString (_dcaa .String (),true );default:_bfg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_dcaa ,_dcaa );};case *PdfFieldButton :switch _dcdef .(type ){case *_eec .PdfObjectName :if len (_dcdef .String ())> 0{_ddga .V =_dcdef ;_efba (_ddga ,_dcdef );};case *_eec .PdfObjectString :if len (_dcdef .String ())> 0{_ddga .V =_eec .MakeName (_dcdef .String ());_efba (_ddga ,_ddga .V );};default:_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_ddga .PartialName (),_dcdef );_ddga .V =_dcdef ;};case *PdfFieldChoice :switch _dcdef .(type ){case *_eec .PdfObjectName :if len (_dcdef .String ())> 0{_ddga .V =_eec .MakeString (_dcdef .String ());_efba (_ddga ,_dcdef );};case *_eec .PdfObjectString :if len (_dcdef .String ())> 0{_ddga .V =_dcdef ;_efba (_ddga ,_eec .MakeName (_dcdef .String ()));};default:_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_ddga .PartialName (),_dcdef );_ddga .V =_dcdef ;};case *PdfFieldSignature :_bfg .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_ddga .PartialName (),_dcdef );};return nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_dfdca *PdfOutlineTreeNode )ToPdfObject ()_eec .PdfObject {return _dfdca .GetContext ().ToPdfObject ();};

// SetName sets the `Name` field of the signature.
func (_aafeg *PdfSignature )SetName (name string ){_aafeg .Name =_eec .MakeString (name )};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_eec .PdfObjectArray ;TI *_eec .PdfObjectInteger ;I *_eec .PdfObjectArray ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_efa :=NewPdfAnnotation ();_eeaa :=&PdfAnnotationWidget {};_eeaa .PdfAnnotation =_efa ;_efa .SetContext (_eeaa );return _eeaa ;};func (_gdce *PdfPage )getParentResources ()(*PdfPageResources ,error ){_bdeef :=_gdce .Parent ;for _bdeef !=nil {_ceceb ,_daebf :=_eec .GetDict (_bdeef );if !_daebf {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_fe .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _gbca :=_ceceb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gbca !=nil {_ecbd ,_ffafa :=_eec .GetDict (_gbca );if !_ffafa {return nil ,_fe .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_cegcb ,_eecgb :=NewPdfPageResourcesFromDict (_ecbd );if _eecgb !=nil {return nil ,_eecgb ;};return _cegcb ,nil ;};_bdeef =_ceceb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_aggbe *LTV )EnableChain (chain []*_ga .Certificate )error {return _aggbe .enable (nil ,chain ,"")};type pdfSignDictionary struct{*_eec .PdfObjectDictionary ;_fffdd *SignatureHandler ;_eegbf *PdfSignature ;_cfgac int64 ;_dedbeb int ;_bdgcc int ;_cebcdc int ;_dgdc int ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_bbee :=PdfColorCalGray (grayVal );return &_bbee ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_feead *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_eaeca :=_efe .NewReader (img .getBase ());_cbbba :=_fc .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_feead .AlternateSpace .GetNumComponents (),nil ,img ._gfbc ,nil );_bgaag :=_efe .NewWriter (_cbbba );_bggda :=_fba .Pow (2,float64 (img .BitsPerComponent ))-1;_bfg .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");_bfg .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_feead .TintTransform );_fcgg :=_feead .AlternateSpace .DecodeArray ();var (_efbc uint32 ;_egbf error ;);for {_efbc ,_egbf =_eaeca .ReadSample ();if _egbf ==_dd .EOF {break ;};if _egbf !=nil {return img ,_egbf ;};_eadeb :=float64 (_efbc )/_bggda ;_fafa ,_ega :=_feead .TintTransform .Evaluate ([]float64 {_eadeb });if _ega !=nil {return img ,_ega ;};for _gdg ,_efegac :=range _fafa {_bfbc :=_fc .LinearInterpolate (_efegac ,_fcgg [_gdg *2],_fcgg [_gdg *2+1],0,1);if _ega =_bgaag .WriteSample (uint32 (_bfbc *_bggda ));_ega !=nil {return img ,_ega ;};};};return _feead .AlternateSpace .ImageToRGB (_bffcg (&_cbbba ));};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_fbb :=NewPdfAction ();_dbb :=&PdfActionTrans {};_dbb .PdfAction =_fbb ;_fbb .SetContext (_dbb );return _dbb ;};func (_dgcac *PdfReader )lookupPageByObject (_eebba _eec .PdfObject )(*PdfPage ,error ){return nil ,_fe .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// GetNumComponents returns the number of color components (1 for Separation).
func (_aeef *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};func (_gbeaa *PdfSignature )extractChainFromPKCS7 ()([]*_ga .Certificate ,error ){_ggebdd ,_bgaae :=_ccc .Parse (_gbeaa .Contents .Bytes ());if _bgaae !=nil {return nil ,_bgaae ;};return _ggebdd .Certificates ,nil ;};func (_aeadc *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _aeadc ._ggagaa .GetCrypter ()!=nil &&!_aeadc ._ggagaa .IsAuthenticated (){return nil ,_b .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_gffca :=_aeadc ._becgd ;_dacbf :=_gffca .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _dacbf ==nil {return nil ,nil ;};_bfg .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_caage :=_eec .ResolveReference (_dacbf );_bfg .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_caage );if _ccgde :=_eec .IsNullObject (_caage );_ccgde {_bfg .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");return nil ,nil ;};_ffdag ,_acca :=_caage .(*_eec .PdfIndirectObject );if !_acca {if _ ,_bebe :=_eec .GetDict (_caage );!_bebe {_bfg .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");return nil ,nil ;};_bfg .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");_ffdag =_eec .MakeIndirectObject (_caage );};_fafb ,_acca :=_ffdag .PdfObject .(*_eec .PdfObjectDictionary );if !_acca {return nil ,_fe .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");};_bfg .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_fafb );_eeag ,_ ,_degc :=_aeadc .buildOutlineTree (_ffdag ,nil ,nil ,nil );if _degc !=nil {return nil ,_degc ;};_bfg .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_eeag );return _eeag ,nil ;};

// M returns the value of the magenta component of the color.
func (_gaga *PdfColorDeviceCMYK )M ()float64 {return _gaga [1]};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_fefdb *PdfField )GetContext ()PdfModel {return _fefdb ._ecbf };func (_agc *PdfReader )loadAction (_eggc _eec .PdfObject )(*PdfAction ,error ){if _gddf ,_dcf :=_eec .GetIndirect (_eggc );_dcf {_ffdeb ,_ace :=_agc .newPdfActionFromIndirectObject (_gddf );if _ace !=nil {return nil ,_ace ;};return _ffdeb ,nil ;}else if !_eec .IsNullObject (_eggc ){return nil ,_fe .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};return nil ,nil ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_afgdb *PdfRectangle )Normalize (){if _afgdb .Llx > _afgdb .Urx {_afgdb .Llx ,_afgdb .Urx =_afgdb .Urx ,_afgdb .Llx ;};if _afgdb .Lly > _afgdb .Ury {_afgdb .Lly ,_afgdb .Ury =_afgdb .Ury ,_afgdb .Lly ;};};func (_bbeceb *PdfWriter )copyObject (_debea _eec .PdfObject ,_edcaa map[_eec .PdfObject ]_eec .PdfObject ,_aggab map[_eec .PdfObject ]struct{},_dfcgd bool )_eec .PdfObject {_daace :=!_bbeceb ._gadfca &&_aggab !=nil ;if _eeeg ,_facea :=_edcaa [_debea ];_facea {if _daace &&!_dfcgd {delete (_aggab ,_debea );};return _eeeg ;};_acfcg :=_debea ;switch _gbeab :=_debea .(type ){case *_eec .PdfObjectArray :_afdbd :=_eec .MakeArray ();_acfcg =_afdbd ;_edcaa [_debea ]=_acfcg ;for _ ,_cceea :=range _gbeab .Elements (){_afdbd .Append (_bbeceb .copyObject (_cceea ,_edcaa ,_aggab ,_dfcgd ));};case *_eec .PdfObjectStreams :_cbfdaf :=&_eec .PdfObjectStreams {PdfObjectReference :_gbeab .PdfObjectReference };_acfcg =_cbfdaf ;_edcaa [_debea ]=_acfcg ;for _ ,_geedd :=range _gbeab .Elements (){_cbfdaf .Append (_bbeceb .copyObject (_geedd ,_edcaa ,_aggab ,_dfcgd ));};case *_eec .PdfObjectStream :_bbfdg :=&_eec .PdfObjectStream {Stream :_gbeab .Stream ,PdfObjectReference :_gbeab .PdfObjectReference };_acfcg =_bbfdg ;_edcaa [_debea ]=_acfcg ;_bbfdg .PdfObjectDictionary =_bbeceb .copyObject (_gbeab .PdfObjectDictionary ,_edcaa ,_aggab ,_dfcgd ).(*_eec .PdfObjectDictionary );case *_eec .PdfObjectDictionary :var _aaafc bool ;if _daace &&!_dfcgd {if _dcdcd ,_ :=_eec .GetNameVal (_gbeab .Get ("\u0054\u0079\u0070\u0065"));_dcdcd =="\u0050\u0061\u0067\u0065"{_ ,_dbagc :=_bbeceb ._effa [_gbeab ];_dfcgd =!_dbagc ;_aaafc =_dfcgd ;};};_abbcf :=_eec .MakeDict ();_acfcg =_abbcf ;_edcaa [_debea ]=_acfcg ;for _ ,_bbcad :=range _gbeab .Keys (){_abbcf .Set (_bbcad ,_bbeceb .copyObject (_gbeab .Get (_bbcad ),_edcaa ,_aggab ,_dfcgd ));};if _aaafc {_acfcg =_eec .MakeNull ();_dfcgd =false ;};case *_eec .PdfIndirectObject :_cfbge :=&_eec .PdfIndirectObject {PdfObjectReference :_gbeab .PdfObjectReference };_acfcg =_cfbge ;_edcaa [_debea ]=_acfcg ;_cfbge .PdfObject =_bbeceb .copyObject (_gbeab .PdfObject ,_edcaa ,_aggab ,_dfcgd );case *_eec .PdfObjectString :_ccgefd :=*_gbeab ;_acfcg =&_ccgefd ;_edcaa [_debea ]=_acfcg ;case *_eec .PdfObjectName :_dggfc :=*_gbeab ;_acfcg =&_dggfc ;_edcaa [_debea ]=_acfcg ;case *_eec .PdfObjectNull :_acfcg =_eec .MakeNull ();_edcaa [_debea ]=_acfcg ;case *_eec .PdfObjectInteger :_ecfe :=*_gbeab ;_acfcg =&_ecfe ;_edcaa [_debea ]=_acfcg ;case *_eec .PdfObjectReference :_fcfae :=*_gbeab ;_acfcg =&_fcfae ;_edcaa [_debea ]=_acfcg ;case *_eec .PdfObjectFloat :_cfbbb :=*_gbeab ;_acfcg =&_cfbbb ;_edcaa [_debea ]=_acfcg ;case *_eec .PdfObjectBool :_gaffg :=*_gbeab ;_acfcg =&_gaffg ;_edcaa [_debea ]=_acfcg ;case *pdfSignDictionary :_gbfff :=&pdfSignDictionary {PdfObjectDictionary :_eec .MakeDict (),_fffdd :_gbeab ._fffdd ,_eegbf :_gbeab ._eegbf };_acfcg =_gbfff ;_edcaa [_debea ]=_acfcg ;for _ ,_accae :=range _gbeab .Keys (){_gbfff .Set (_accae ,_bbeceb .copyObject (_gbeab .Get (_accae ),_edcaa ,_aggab ,_dfcgd ));};default:_bfg .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_debea );};if _daace &&_dfcgd {_aggab [_debea ]=struct{}{};};return _acfcg ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _eec .PdfObject ;ColorSpace _eec .PdfObject ;Pattern _eec .PdfObject ;Shading _eec .PdfObject ;XObject _eec .PdfObject ;Font _eec .PdfObject ;ProcSet _eec .PdfObject ;Properties _eec .PdfObject ;_daab *_eec .PdfObjectDictionary ;_efgdg *PdfPageResourcesColorspaces ;};var _fdcb =_ef .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_caa FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_caa .Mask ()|fl .Mask ())};func _abbc (_efdadg *_eec .PdfObjectStream )(*PdfFunctionType0 ,error ){_dadae :=&PdfFunctionType0 {};_dadae ._deae =_efdadg ;_efbb :=_efdadg .PdfObjectDictionary ;_ebac ,_egggf :=_eec .TraceToDirectObject (_efbb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_eec .PdfObjectArray );if !_egggf {_bfg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _ebac .Len ()< 0||_ebac .Len ()%2!=0{_bfg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fe .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dadae .NumInputs =_ebac .Len ()/2;_abcec ,_bgbb :=_ebac .ToFloat64Array ();if _bgbb !=nil {return nil ,_bgbb ;};_dadae .Domain =_abcec ;_ebac ,_egggf =_eec .TraceToDirectObject (_efbb .Get ("\u0052\u0061\u006eg\u0065")).(*_eec .PdfObjectArray );if !_egggf {_bfg .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _ebac .Len ()< 0||_ebac .Len ()%2!=0{return nil ,_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dadae .NumOutputs =_ebac .Len ()/2;_ffgdc ,_bgbb :=_ebac .ToFloat64Array ();if _bgbb !=nil {return nil ,_bgbb ;};_dadae .Range =_ffgdc ;_ebac ,_egggf =_eec .TraceToDirectObject (_efbb .Get ("\u0053\u0069\u007a\u0065")).(*_eec .PdfObjectArray );if !_egggf {_bfg .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_abeaa ,_bgbb :=_ebac .ToIntegerArray ();if _bgbb !=nil {return nil ,_bgbb ;};if len (_abeaa )!=_dadae .NumInputs {_bfg .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dadae .Size =_abeaa ;_eacce ,_egggf :=_eec .TraceToDirectObject (_efbb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_eec .PdfObjectInteger );if !_egggf {_bfg .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_fe .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if *_eacce !=1&&*_eacce !=2&&*_eacce !=4&&*_eacce !=8&&*_eacce !=12&&*_eacce !=16&&*_eacce !=24&&*_eacce !=32{_bfg .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_eacce );return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dadae .BitsPerSample =int (*_eacce );_dadae .Order =1;_ceda ,_egggf :=_eec .TraceToDirectObject (_efbb .Get ("\u004f\u0072\u0064e\u0072")).(*_eec .PdfObjectInteger );if _egggf {if *_ceda !=1&&*_ceda !=3{_bfg .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_ceda );return nil ,_fe .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dadae .Order =int (*_ceda );};_ebac ,_egggf =_eec .TraceToDirectObject (_efbb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_eec .PdfObjectArray );if _egggf {_aeeec ,_adfbd :=_ebac .ToFloat64Array ();if _adfbd !=nil {return nil ,_adfbd ;};_dadae .Encode =_aeeec ;};_ebac ,_egggf =_eec .TraceToDirectObject (_efbb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_eec .PdfObjectArray );if _egggf {_efdf ,_gcgfe :=_ebac .ToFloat64Array ();if _gcgfe !=nil {return nil ,_gcgfe ;};_dadae .Decode =_efdf ;};_efggag ,_bgbb :=_eec .DecodeStream (_efdadg );if _bgbb !=nil {return nil ,_bgbb ;};_dadae ._bfgd =_efggag ;return _dadae ,nil ;};func (_aefab *PdfReader )buildPageList (_cfggd *_eec .PdfIndirectObject ,_egcfd *_eec .PdfIndirectObject ,_egaeg map[_eec .PdfObject ]struct{})error {if _cfggd ==nil {return nil ;};if _ ,_bebbc :=_egaeg [_cfggd ];_bebbc {_bfg .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_cfggd .ObjectNumber );return nil ;};_egaeg [_cfggd ]=struct{}{};_gccgd ,_fgdd :=_cfggd .PdfObject .(*_eec .PdfObjectDictionary );if !_fgdd {return _fe .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_abedg ,_fgdd :=(*_gccgd ).Get ("\u0054\u0079\u0070\u0065").(*_eec .PdfObjectName );if !_fgdd {if _gccgd .Get ("\u004b\u0069\u0064\u0073")==nil {return _fe .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_bfg .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");_abedg =_eec .MakeName ("\u0050\u0061\u0067e\u0073");_gccgd .Set ("\u0054\u0079\u0070\u0065",_abedg );};_bfg .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_abedg ,_cfggd );if *_abedg =="\u0050\u0061\u0067\u0065"{_ecaf ,_fdgae :=_aefab .newPdfPageFromDict (_gccgd );if _fdgae !=nil {return _fdgae ;};_ecaf .setContainer (_cfggd );if _egcfd !=nil {_gccgd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_egcfd );};_aefab ._bcaa =append (_aefab ._bcaa ,_cfggd );_aefab .PageList =append (_aefab .PageList ,_ecaf );return nil ;};if *_abedg !="\u0050\u0061\u0067e\u0073"{_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_abedg );return _fe .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");};if _egcfd !=nil {_gccgd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_egcfd );};if !_aefab ._bceb {_fcbad :=_aefab .traverseObjectData (_cfggd );if _fcbad !=nil {return _fcbad ;};};_ceggf ,_fcfad :=_aefab ._ggagaa .Resolve (_gccgd .Get ("\u004b\u0069\u0064\u0073"));if _fcfad !=nil {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _fcfad ;};var _cceag *_eec .PdfObjectArray ;_cceag ,_fgdd =_ceggf .(*_eec .PdfObjectArray );if !_fgdd {_gbgcg ,_abgb :=_ceggf .(*_eec .PdfIndirectObject );if !_abgb {return _fe .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_cceag ,_fgdd =_gbgcg .PdfObject .(*_eec .PdfObjectArray );if !_fgdd {return _fe .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_bfg .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_cceag );for _dgbf ,_eadcg :=range _cceag .Elements (){_ecae ,_eeaec :=_eec .GetIndirect (_eadcg );if !_eeaec {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_ecae );return _fe .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_cceag .Set (_dgbf ,_ecae );_fcfad =_aefab .buildPageList (_ecae ,_cfggd ,_egaeg );if _fcfad !=nil {return _fcfad ;};};return nil ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};func (_dgcbc fontCommon )isCIDFont ()bool {if _dgcbc ._bgga ==""{_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgcbc );};_gecb :=false ;switch _dgcbc ._bgga {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_gecb =true ;};_bfg .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_gecb ,_dgcbc );return _gecb ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_ebbga *PdfPage )GetAllContentStreams ()(string ,error ){_dgabc ,_bcdcf :=_ebbga .GetContentStreams ();if _bcdcf !=nil {return "",_bcdcf ;};return _beb .Join (_dgabc ,"\u0020"),nil ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_cfbc *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _cfbc .Range };

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _eec .PdfObject ;B _eec .PdfObject ;};func (_aaacb *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};func (_cdda *DSS )addOCSPs (_feca [][]byte )([]*_eec .PdfObjectStream ,error ){return _cdda .add (&_cdda .OCSPs ,_cdda ._ebca ,_feca );};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _bf .Time ){_aafbed .Lock ();defer _aafbed .Unlock ();_gagf =modifiedDate ;};func (_dfagd *PdfWriter )writeBytes (_ddec []byte ){if _dfagd ._ceagg !=nil {return ;};_gbfbaf ,_eefcaa :=_dfagd ._bccga .Write (_ddec );_dfagd ._afeba +=int64 (_gbfbaf );_dfagd ._ceagg =_eefcaa ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_dbag :=NewPdfAnnotation ();_fced :=&PdfAnnotationPolygon {};_fced .PdfAnnotation =_dbag ;_fced .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dbag .SetContext (_fced );return _fced ;};func _gcgac ()string {_aafbed .Lock ();defer _aafbed .Unlock ();return _egedc };

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_acaee []byte )(_dagba int ,_dfacf error );};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_aefgd *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_aefgd .ToPdfOutline ().PdfOutlineTreeNode ;};var (ErrRequiredAttributeMissing =_fe .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_fe .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_fe .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_eebdf =_fe .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_fe .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_fe .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_fg .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_eec .ErrNotSupported );ErrType1CFontNotSupported =_fg .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_eec .ErrNotSupported );ErrType3FontNotSupported =_fg .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_eec .ErrNotSupported );ErrTTCmapNotSupported =_fg .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_eec .ErrNotSupported );ErrSignNotEnoughSpace =_fg .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");ErrSignNoCertificates =_fg .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// SetFontByName sets the font specified by keyName to the given object.
func (_cebff *PdfPageResources )SetFontByName (keyName _eec .PdfObjectName ,obj _eec .PdfObject )error {if _cebff .Font ==nil {_cebff .Font =_eec .MakeDict ();};_afffa ,_aebc :=_eec .TraceToDirectObject (_cebff .Font ).(*_eec .PdfObjectDictionary );if !_aebc {_bfg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_eec .TraceToDirectObject (_cebff .Font ));return _eec .ErrTypeError ;};_afffa .Set (keyName ,obj );return nil ;};func _fbcg (_dedc *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_dedc }};func (_eadeg *pdfCIDFontType0 )baseFields ()*fontCommon {return &_eadeg .fontCommon };

// ToPdfObject implements interface PdfModel.
func (_gdfg *PdfAnnotationRichMedia )ToPdfObject ()_eec .PdfObject {_gdfg .PdfAnnotation .ToPdfObject ();_daef :=_gdfg ._dge ;_dcfg :=_daef .PdfObject .(*_eec .PdfObjectDictionary );_dcfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_eec .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));_dcfg .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_gdfg .RichMediaSettings );_dcfg .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_gdfg .RichMediaContent );return _daef ;};func _geaga ()_bf .Time {_aafbed .Lock ();defer _aafbed .Unlock ();return _bgbag };