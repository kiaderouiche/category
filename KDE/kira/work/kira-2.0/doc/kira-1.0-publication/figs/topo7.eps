%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 86 664 367 769
%%HiResBoundingBox: 86.000000 664.500000 366.500000 768.500000
%%Creator: dvips(k) 5.995 Copyright 2015 Radical Eye Software
%%Title: topoG.dvi
%%CreationDate: Fri May  5 22:11:05 2017
%%PageOrder: Ascend
%%DocumentFonts: rtxmi NimbusRomNo9L-ReguItal NimbusRomNo9L-Regu rtxr
%%+ txsy
%%DocumentPaperSizes: a4
%%EndComments
% EPSF created by ps2eps 1.68
%%BeginProlog
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: /usr/bin/dvips -o topoG.ps topoG.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.05.05:2211
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def
%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end
%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end
%%EndProcSet
TeXDict begin @defspecial
 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse
 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 /pi 3.141592 def /ed{exch def}def /gs{gsave dup scale}def /gsw{ gs
/width ed width setlinewidth }def /p1{/y1 ed /x1 ed}def /p2{/y2 ed
/x2 ed}def /p3{/y3 ed /x3 ed}def /p4{/y4 ed /x4 ed}def /garrow{/arrowpos
ed /arrowspec ed}def /setabs{ dup load abs def }def /normalizearc {
translate exch dup rotate sub 3 2 roll { neg 1 -1 scale } if dup abs
360 ge { pop 360 } { dup dup 0 lt { 360 sub } if 360 div truncate 360
mul sub dup 0.1 lt { pop 360 } if }ifelse } def /normalizeline { 3
index 3 index translate 2 index sub exch 3 index sub 2 copy atan rotate
dup mul exch dup mul add sqrt 3 1 roll pop pop } def /abox{ newpath
x1 y1 moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto closepath }def
/atriangle{ newpath x1 y1 moveto x2 y2 lineto x3 y3 lineto closepath
}def /abezier{ newpath x1 y1 moveto x2 y2 x3 y3 x4 y4 curveto }def
/distance{ dup 3 index sub dup mul 2 index 5 index sub dup mul add
sqrt } def
 /arrowVTriangle { /arrowinset ed /arrowlength ed /arrowwidth ed /arrowstroke
ed newpath 0 arrowlength -0.5 mul moveto arrowwidth arrowlength rlineto
arrowwidth -1 mul arrowlength arrowinset mul -1 mul rlineto arrowwidth
-1 mul arrowlength arrowinset mul rlineto closepath arrowstroke 0 ne
{ gsave arrowstroke setlinewidth stroke grestore } if fill } def /arrow1
{ gsave rotate exec grestore } def
 /fixdash{ 2 copy gt 1 index 0 ne and { 2 copy 2 mul div 0.5 sub round
dup 0 le { pop 0 } if 2 mul 1 add exch pop div dup 2 array astore 0
setdash } { pop pop [] 0 setdash } ifelse } def
 /dashline{ gsave distance dsize fixdash newpath moveto lineto stroke
grestore } def
 /dasharc{ gsave 3 copy sub abs pi mul 180 div mul 3 index angdsize
mul fixdash newpath arc stroke grestore } def
 /doublegluon{ gsw /linesep ed /num ed /ampi ed normalizeline /dr ed
linesep 0 eq { 0 0 dr 0 ampi num gluon1 } { 0 linesep 2 div dup dr
exch ampi num gluon1 0 linesep -2 div dup dr exch ampi num gluon1 }
ifelse grestore } def
 /gluon1{ gsave /num ed /ampi ed normalizeline /dr ed /num num 0.5
sub round def /inc dr num 2 mul 2 add div def /amp8 ampi 0.9 mul def
amp8 0 lt {/amp8 amp8 neg def} if /x1 inc 2 mul def newpath 0 0 moveto
inc 0.1 mul ampi 0.5 mul inc 0.5 mul ampi inc 1.4 mul ampi curveto
x1 amp8 add dup ampi exch ampi neg dup x1 exch curveto 2 1 num { pop
x1 amp8 sub dup ampi neg exch ampi dup x1 inc add exch curveto /x1
x1 inc dup add add def x1 amp8 add dup ampi exch ampi neg dup x1 exch
curveto } for x1 amp8 sub dup ampi neg exch ampi dup x1 inc 0.6 mul
add exch curveto x1 inc 1.5 mul add ampi dr inc 0.1 mul sub ampi 0.5
mul dr 0 curveto stroke grestore } def
 /doublephoton{ gsw /linesep ed /num ed /ampi ed normalizeline /dr
ed linesep 0 eq { 0 0 dr 0 ampi num photon1 } { 0 linesep 2 div dup
dr exch ampi num photon1 0 linesep -2 div dup dr exch ampi num photon1
} ifelse grestore } def
 /photon1{ gsave /num1 ed /ampi1 ed normalizeline /dr ed /num1 num1
2 mul 0.5 sub round def /x2 dr num1 div def /sign 1 def 1 1 num1 {
pop newpath 0 0 moveto 4 3 div x2 mul pi div dup neg x2 add 4 3 div
ampi1 sign mul mul dup 3 1 roll x2 0 curveto stroke /sign sign neg
def x2 0 translate } for grestore } def
 /zigzag{ gsw /num ed /ampi ed normalizeline /dr ed /num num 2 mul
0.5 sub round def /x2 dr num div def /sign 1 def 1 1 num { pop newpath
0 0 moveto x2 2 div ampi sign mul lineto x2 0 lineto stroke /sign sign
neg def x2 0 translate } for grestore } def
 /doublephotonarc{ gsw normalizearc /darc ed /radius ed /linesep ed
/num ed /ampli ed /num num 2 mul round def /darc1 darc num div def
/cp darc1 cos def /sp darc1 sin def darc1 2 div dup /cp2 exch cos def
/sp2 exch sin def linesep 0 eq { radius photonarc1 } { linesep 2 div
radius add photonarc1 linesep -2 div radius add photonarc1 } ifelse
grestore } def
 /photonarc1{ gsave /radius1 ed /ampli1 ampli def newpath 1 1 num {
pop radius1 0 moveto /beta radius1 darc1 mul 180 ampli1 mul div def
/tt sp cp beta mul sub cp sp beta mul add div def /amp1 radius1 ampli1
add 8 mul beta cp2 mul sp2 sub mul beta 4 cp add mul tt cp mul 3 mul
sp 4 mul sub add radius1 mul sub beta tt sub 3 mul div def radius1
ampli1 add 8 mul cp2 mul 1 cp add radius1 mul sub 3 div amp1 sub dup
radius1 sub beta mul amp1 dup radius1 cp mul sub tt mul radius1 sp
mul add radius1 cp mul radius1 sp mul curveto /ampli1 ampli1 neg def
darc1 rotate } for stroke grestore } def
 /doublegluearc{ gsw normalizearc /darc ed /radius ed /linesep ed /num
ed /ampi ed /num num 0.5 sub round def linesep 0 eq { radius gluearc1
} { linesep 2 div radius add gluearc1 linesep -2 div radius add gluearc1
} ifelse grestore } def
 /gluearc1{ gsave /radius1 ed /dr radius1 darc mul pi mul 180 div def
/const darc dr div def darc 360 lt { /inc dr num 2 mul 2 add div def
} { /inc dr num 2 mul div def } ifelse /amp8 ampi 0.9 mul def /amp1
radius1 ampi add def /amp2 radius1 ampi sub def /amp3 radius1 ampi
2 div add def /amp4 amp1 inc amp8 add const mul cos div def /amp5 amp2
amp8 const mul cos div def /amp6 amp1 inc 0.6 mul amp8 add const mul
cos div def /amp7 amp1 inc 0.9 mul const mul cos div def amp8 0 lt
{/amp8 amp8 neg def} if newpath darc 360 lt { /x1 inc 2 mul def radius1
0 moveto inc 0.1 mul const mul dup cos amp3 mul exch sin amp3 mul inc
0.5 mul const mul dup cos amp7 mul exch sin amp7 mul inc 1.4 mul const
mul dup cos amp1 mul exch sin amp1 mul curveto x1 amp8 add const mul
dup cos amp6 mul exch sin amp6 mul x1 amp8 add const mul dup cos amp5
mul exch sin amp5 mul x1 const mul dup cos amp2 mul exch sin amp2 mul
curveto 2 1 num } { /x1 0 def amp2 0 moveto 1 1 num } ifelse { pop
x1 amp8 sub const mul dup cos amp5 mul exch sin amp5 mul x1 amp8 sub
const mul dup cos amp4 mul exch sin amp4 mul x1 inc add const mul dup
cos amp1 mul exch sin amp1 mul curveto /x1 x1 inc dup add add def x1
amp8 add const mul dup cos amp4 mul exch sin amp4 mul x1 amp8 add const
mul dup cos amp5 mul exch sin amp5 mul x1 const mul dup cos amp2 mul
exch sin amp2 mul curveto } for darc 360 lt { x1 amp8 sub const mul
dup cos amp5 mul exch sin amp5 mul x1 amp8 sub const mul dup cos amp6
mul exch sin amp6 mul x1 inc 0.6 mul add const mul dup cos amp1 mul
exch sin amp1 mul curveto x1 inc 1.5 mul add const mul dup cos amp7
mul exch sin amp7 mul dr inc 0.1 mul sub const mul dup cos amp3 mul
exch sin amp3 mul dr const mul dup cos radius1 mul exch sin radius1
mul curveto } if stroke grestore } def
 /dasharrowdoubleline{ gsw normalizeline /dr ed /dsize ed /linesep
ed /flip ed garrow /linesep setabs /linewidth width def /y11 linesep
0.5 mul def /y22 linesep -0.5 mul def 0 y11 dr arrowpos mul y11 dashline
linesep 0 ne { 0 y22 dr arrowpos mul y22 dashline } if dr arrowpos
mul 0 translate /arrowspec load flip { -90 }{ 90 } ifelse arrow1 0
y11 dr 1 arrowpos sub mul y11 dashline linesep 0 ne { 0 y22 dr 1 arrowpos
sub mul y22 dashline } if grestore } def
 /arc2{ gsw normalizearc /darc ed /radius ed /dsize ed /linesep ed
/angdsize dsize radius div def /flip ed garrow /arcmid darc arrowpos
mul def dsize 0 eq { linesep 0 eq { 0 0 radius 0 darc dasharc } { 0
0 radius linesep 2 div add 0 darc dasharc 0 0 radius linesep -2 div
add 0 darc dasharc } ifelse } { linesep 0 eq { 0 0 radius 0 arcmid
dasharc 0 0 radius arcmid darc dasharc } { 0 0 radius linesep 2 div
add 0 arcmid dasharc 0 0 radius linesep -2 div add 0 arcmid dasharc
0 0 radius linesep 2 div add arcmid darc dasharc 0 0 radius linesep
-2 div add arcmid darc dasharc } ifelse } ifelse arcmid rotate radius
0 translate /arrowspec load flip { 0 } { 180 } ifelse arrow1 grestore
} def
 /vertex{ gs /dotsize ed translate newpath 0 0 dotsize 0 360 arc fill
stroke grestore } def
 /bcirc{ gsw /radius ed translate gsave 1 setgray newpath 0 0 radius
0 360 arc fill grestore newpath 0 0 radius 0 360 arc stroke grestore
} def
 /gcirc{ gsw /gcolor ed /radius ed translate 1 setgray newpath 0 0
radius 0 360 arc fill gcolor setgray newpath 0 0 radius 0 360 arc fill
0 setgray newpath 0 0 radius 0 360 arc stroke grestore } def
 /ccirc1{ gsw /radius ed translate newpath 0 0 radius 0 360 arc fill
grestore } def
 /ccirc2{ gsw /radius ed translate newpath 0 0 radius 0 360 arc stroke
grestore } def
 /box{ gsw p2 p1 abox stroke grestore } def
 /bbox{ gsw p2 p1 gsave 1 setgray abox fill grestore abox stroke grestore
} def
 /gbox{ gsw /gcolor ed p2 p1 1 setgray abox fill gcolor setgray abox
fill 0 setgray abox stroke grestore } def
 /cbox1{ gsw p2 p1 abox fill grestore } def
 /cbox2{ gsw p2 p1 abox stroke grestore } def
 /triangle{ gsw p3 p2 p1 atriangle stroke grestore } def
 /btriangle{ gsw p3 p2 p1 gsave 1 setgray atriangle fill grestore atriangle
stroke grestore } def
 /gtriangle{ gsw /gcolor ed p3 p2 p1 1 setgray atriangle fill gcolor
setgray atriangle fill 0 setgray atriangle stroke grestore } def
 /ctriangle1{ gsw p3 p2 p1 atriangle fill grestore } def
 /ctriangle2{ gsw p3 p2 p1 atriangle stroke grestore } def
 /btext{ gsw /fsize ed /thetext ed translate /hsize thetext stringwidth
pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul 3 div neg
def /x2 x1 neg def /y2 y1 neg def gsave 1 setgray abox fill grestore
abox stroke hsize 2 div neg fsize 3 div neg moveto thetext show grestore
} def
 /b2text{ gsw /fsize ed /text2 ed /text1 ed translate /hsize1 text1
stringwidth pop def /hsize2 text2 stringwidth pop def hsize1 hsize2
lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize fsize
add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def /y2
y1 neg def gsave 1 setgray abox fill grestore abox stroke hsize1 2
div neg fsize 6 div moveto text1 show hsize2 2 div neg fsize 5 mul
6 div neg moveto text2 show grestore } def
 /gtext{ gsw /fsize ed /thetext ed /graysc ed translate /hsize thetext
stringwidth pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul
3 div neg def /x2 x1 neg def /y2 y1 neg def graysc setgray abox fill
0 setgray abox stroke hsize 2 div neg fsize 3 div neg moveto thetext
show grestore } def
 /ctext1{ gsw /fsize ed /thetext ed translate /hsize thetext stringwidth
pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul 3 div neg
def /x2 x1 neg def /y2 y1 neg def abox fill grestore } def
 /ctext2{ gsw /fsize ed /thetext ed translate /hsize thetext stringwidth
pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul 3 div neg
def /x2 x1 neg def /y2 y1 neg def abox stroke hsize 2 div neg fsize
3 div neg moveto thetext show grestore } def
 /g2text{ gsw /fsize ed /text2 ed /text1 ed /graysc ed translate /hsize1
text1 stringwidth pop def /hsize2 text2 stringwidth pop def hsize1
hsize2 lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize
fsize add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def
/y2 y1 neg def graysc setgray abox fill 0 setgray abox stroke hsize1
2 div neg fsize 6 div moveto text1 show hsize2 2 div neg fsize 5 mul
6 div neg moveto text2 show grestore } def
 /c2text1{ gsw /fsize ed /text2 ed /text1 ed translate /hsize1 text1
stringwidth pop def /hsize2 text2 stringwidth pop def hsize1 hsize2
lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize fsize
add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def /y2
y1 neg def abox fill grestore } def
 /c2text2{ gsw /fsize ed /text2 ed /text1 ed translate /hsize1 text1
stringwidth pop def /hsize2 text2 stringwidth pop def hsize1 hsize2
lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize fsize
add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def /y2
y1 neg def abox stroke hsize1 2 div neg fsize 6 div moveto text1 show
hsize2 2 div neg fsize 5 mul 6 div neg moveto text2 show grestore }
def
 /ptext{ gs /text ed /fsize ed /mode ed 3 1 roll translate rotate mode
3 lt { 0 fsize neg translate } { mode 6 lt { /mode mode 3 sub def 0
fsize 2 div neg translate } { /mode mode 6 sub def } ifelse } ifelse
/fsize text stringwidth pop def mode 1 eq { fsize 2 div neg 0 translate
} { mode 2 eq { fsize neg 0 translate } if } ifelse 0 0 moveto text
show grestore } def
 /goval{ gsw /gcolor ed /x1 ed /x2 ed /radius ed translate x1 rotate
x2 radius div 1.0 scale 1 setgray newpath 0 0 radius 0 360 arc fill
gcolor setgray newpath 0 0 radius 0 360 arc fill 0 setgray newpath
0 0 radius 0 360 arc stroke grestore } def
 /coval1{ gsw /x1 ed /x2 ed /radius ed translate x1 rotate x2 radius
div 1.0 scale newpath 0 0 radius 0 360 arc fill grestore } def
 /coval2{ gsw /x1 ed /x2 ed /radius ed translate x1 rotate x2 radius
div 1.0 scale newpath 0 0 radius 0 360 arc stroke grestore } def
 /oval{ gsw /x1 ed /x2 ed /radius ed translate x1 rotate x2 radius
div 1.0 scale newpath 0 0 radius 0 360 arc stroke grestore } def
 /docurve{ x1 2 mul x2 add 3 div y1 y0 sub x1 x0 sub div x2 x0 sub
mul y2 y0 sub x2 x0 sub div x1 x0 sub mul add y1 add y0 2 mul add 3
div x1 x2 2 mul add 3 div y2 y3 sub x2 x3 sub div x1 x3 sub mul y1
y3 sub x1 x3 sub div x2 x3 sub mul add y2 add y3 2 mul add 3 div x2
y2 curveto } def
 /makecurve{ gsw /points ed /ss points length 2 idiv 2 mul def newpath
ss 4 gt { /x1 points 0 get def /y1 points 1 get def /x2 points 2 get
def /y2 points 3 get def /x3 points 4 get def /y3 points 5 get def
/x0 x1 2 mul x2 sub def /y0 y3 y2 sub x3 x2 sub div y2 y1 sub x2 x1
sub div sub 2 mul x2 x1 sub dup mul x3 x1 sub div mul y1 2 mul add
y2 sub def x1 y1 moveto docurve 0 2 ss 8 sub { /ii ed /x0 points ii
get def /y0 points ii 1 add get def /x1 points ii 2 add get def /y1
points ii 3 add get def /x2 points ii 4 add get def /y2 points ii 5
add get def /x3 points ii 6 add get def /y3 points ii 7 add get def
docurve } for /x0 points ss 6 sub get def /y0 points ss 5 sub get def
/x1 points ss 4 sub get def /y1 points ss 3 sub get def /x2 points
ss 2 sub get def /y2 points ss 1 sub get def /x3 x2 2 mul x1 sub def
/y3 y2 y1 sub x2 x1 sub div y1 y0 sub x1 x0 sub div sub 2 mul x2 x1
sub dup mul x2 x0 sub div mul y2 2 mul add y1 sub def docurve } { ss
4 eq { points 0 get points 1 get moveto points 2 get points 3 get lineto
} if } ifelse stroke grestore } def
 /makedashcurve{ gsw /dsize ed /points ed /ss points length 2 idiv
2 mul def newpath ss 4 gt { /x1 points 0 get def /y1 points 1 get def
/x2 points 2 get def /y2 points 3 get def /x3 points 4 get def /y3
points 5 get def /x0 x1 2 mul x2 sub def /y0 y3 y2 sub x3 x2 sub div
y2 y1 sub x2 x1 sub div sub 2 mul x2 x1 sub dup mul x3 x1 sub div mul
y1 2 mul add y2 sub def x1 y1 moveto docurve 0 2 ss 8 sub { /ii ed
/x0 points ii get def /y0 points ii 1 add get def /x1 points ii 2 add
get def /y1 points ii 3 add get def /x2 points ii 4 add get def /y2
points ii 5 add get def /x3 points ii 6 add get def /y3 points ii 7
add get def docurve } for /x0 points ss 6 sub get def /y0 points ss
5 sub get def /x1 points ss 4 sub get def /y1 points ss 3 sub get def
/x2 points ss 2 sub get def /y2 points ss 1 sub get def /x3 x2 2 mul
x1 sub def /y3 y2 y1 sub x2 x1 sub div y1 y0 sub x1 x0 sub div sub
2 mul x2 x1 sub dup mul x2 x0 sub div mul y2 2 mul add y1 sub def docurve
} { ss 4 eq { points 0 get points 1 get moveto points 2 get points
3 get lineto } if } ifelse centerdash stroke grestore } def
 /pathlength{ flattenpath /dist 0 def { /yfirst ed /xfirst ed /ymoveto
yfirst def /xmoveto xfirst def } { /ynext ed /xnext ed /dist dist ynext
yfirst sub dup mul xnext xfirst sub dup mul add sqrt add def /yfirst
ynext def /xfirst xnext def } {} {/ynext ymoveto def /xnext xmoveto
def /dist ynext yfirst sub dup mul xnext xfirst sub dup mul add sqrt
add def /yfirst ynext def /xfirst xnext def } pathforall dist } def
 /centerdash{ /pathlen pathlength def /jj pathlen dsize div 2.0 div
cvi def /ddsize pathlen jj 2.0 mul div def [ddsize] ddsize 2 div setdash
} def
 /logaxis{ gsw /offset ed /hashsize ed /nlogs ed normalizeline /rr
ed offset 0 ne { /offset offset ln 10 ln div def } if /offset offset
dup cvi sub def newpath 0 0 moveto rr 0 lineto /lsize rr nlogs div
def 0 1 nlogs { /x2 ed x2 offset ge { /y2 x2 offset sub lsize mul def
y2 rr le { y2 0 moveto y2 hashsize 1.2 mul lineto } if } if } for stroke
width 0.6 mul setlinewidth newpath 0 1 nlogs { /x2 ed 2 1 9 { ln 10
ln div x2 add /xx2 ed xx2 offset ge { /y2 xx2 offset sub lsize mul
def y2 rr le { y2 0 moveto y2 hashsize 0.8 mul lineto } if } if } for
} for stroke grestore } def
 /linaxis{ gsw /offset ed /hashsize ed /perdec ed /numdec ed normalizeline
/rr ed newpath 0 0 moveto rr 0 lineto /x1 rr numdec perdec mul div
def /y1 rr numdec div def /offset offset x1 mul def 0 1 numdec { y1
mul offset sub dup 0 ge { dup rr le { dup 0 moveto hashsize 1.2 mul
lineto } if } if } for stroke width 0.6 mul setlinewidth newpath offset
cvi 1 numdec perdec mul offset add { x1 mul offset sub dup 0 ge { dup
rr le { dup 0 moveto hashsize 0.8 mul lineto } if } if } for stroke
grestore } def
 /dashbezier{ gsw /dsize ed p4 p3 p2 p1 dsize 0 ne { [dsize dsize]
0 setdash } if abezier stroke grestore } def
 
@fedspecial end
%%BeginFont: txsy
%!PS-AdobeFont-1.0: txsy 3.0
%%CreationDate: 12/14/2000 at 12:00 PM
%%VMusage: 1024 24296
20 dict begin
/FontInfo 16 dict dup begin
/version (3.0) readonly def
/FullName (txsy) readonly def
/FamilyName (txsy) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Notice (Version 3.0, GPL) readonly def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/FontName /txsy def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/FontBBox{-22 -944 1227 866}readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
02843723FD4914EA94CF5C86363F39B548A806C44FEA1B6940CE940D9715AC10
A3E7AB0FA0A6414E9568953B7FC56D7431153CDCC1DA51CB651758F01C2BE266
586E297B3119AEE2A2D643C4C75FFC401D0B85884FDF6B65F382C4274641C911
1BFA560173294C16E51F7607EDD8C402A8ACE5B8A757F2ABA6F4ED61F15798F0
710DA8F3DEA618CF1E90303ADD6DF296225CAAA74E80F135E221CC1E0CACD211
99537E50D75DC58C3DFBB212E785396B0A36C81DB4AEEB785DEB75ADF0F0818F
C0FB1D416B07244E77B355ADE61403965BF62486A2F6897C1B44E77EC37A5188
0FE0639ECE50EC308B192067C33CF1FC03C00F8630FD348DE9C17F718B341DFE
884BBB3257BB82CC9D3C52651490F47275A7DF2497B77BFA57DE4264E2D20C09
5D2C4A821CEBE92376A69C2DFA38B618BB72913813B481A979C3E5F3CD8A5CEA
C2C5726EB95C76E024C833799ACACB28A6201C90A53CDB394D570DC876A0ECE3
8ED2A82F7A1A617781BBE5E7ECA9F99198A39BE62AF74FDE0B44B1A0745D88ED
AB8F6003C4E5E9DC24349F29614784C3339DBF666B175FDD64D631625F0E0B56
B04333BA9D637A85D3C074F14F586FF842605965ABBFCF9DA50EA1C7765A1428
3858DC0B087E1633F36B0D94CBB58FA686C55114AA66B7329E036D1206A47B88
7BC73925E28B2154B2E33717A4A898FA95761E066F7FCA3E5744D229EF0A22A1
342C7C932B10DEDC2D401AFB98CFBDDF1C2408D0B24FCC82EFE8C41D40D27459
81633535923C454EF473264491BF4C932C20A40454D3AE5A79080527EBD453B7
5D33E95D26A1FCC3075BD5B962023191EB1A75BF470A021C7A9661
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%BeginFont: rtxr
%!PS-AdobeFont-1.0: rtxr 3.0
%%CreationDate: 12/14/2000 at 12:00 PM
%%VMusage: 1024 12232
20 dict begin
/FontInfo 16 dict dup begin
/version (3.0) readonly def
/FullName (rtxr) readonly def
/FamilyName (rtxr) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Notice (Version 3.0, GPL) readonly def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/FontName /rtxr def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 61 /equal put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/FontBBox{-70 -218 792 683}readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
02843723FD4914EA94CF5C86363ACC3A819F74D19694FEF234D46B09D261A206
5701088EA26D9FBD7C085BC1BE69A98068A62C38375BEEB488ED9AAABE84885E
92C1CA8A2A04C7636B2416F5656B25F234780C40924DA825DBEF32B5BEEABA3B
F239D8F0580B97C841973AE184074B483616AF2BD12551EEFBE3C7107D4D2322
110CF853935BFE09E91AC0CF4CEEDBAF98555A52FFEDFF13AFEC32AC694F7A82
B84D6A8F2C8168C77F9AF7DF345C94CC8EEFCCE85DD9F27B3E14356C210333CF
AFEF14B68EEF92C9C3FEEE99CC8AEBC18EBF6AE9787B44B831C81C2551BCD812
CF2CA815BA62008B7D5C06B101121955417C2A6EEAA45C132B4A8856EC2E62D4
72128A3C944384B506B6C4E079463DE45A6731B09D0DAB6B4A65AAD9B7082F09
9178921759E33B5A56E29A3FCA902ECAD8F941830563BC975934FFF213A53713
34CDC01EFB70FF309B17857B6CC4FAD4F46784C7C819A79252A2D5C2C733780A
7FAFA6329B3C002901E3C4D85A8C953D34044EA7CC95E0E08A723F6E00269A60
8FCB8BAA2419D4B6FADE7350CEDE8D8720A80DB951D1D9FAC8C7E3AFE68DE85A
9D8171A082030465C70F7C1A5A3958968E7757E912B187C98F17D57CBC36BD9A
87B95F13E3415E4568AB38EA66E305A8046EE6BD103B28F442C64081D8AD2E5B
6B39DA700DD581893F67FA5F4E60886F8AA51D2487FEF260D4358ACB9EF0A4C7
BDD2ADF5D0FF2BD948B3F870C99F48B6D3DCDC2F0A01F9BFDC19CCF5B0C6F75B
793893247A05D4E4FDF9485E244F6B86ACB4078DB9AB5389E105068073A87730
15EEB8E720D2EACFB73F0D0A43860374CB58797BD98C9E372DC2B1095FDFDF99
ACCDB67FF7E5CAEEA78239A553ABE32CBB6C0DBE9A0003916C664F7FFAAC715E
FB857822C26CC60EE89DD442AE68E0696131D08B9F60A5A9298689E10AC98CC4
F30EE910D46B0337E0542405EF30093F549D58ED7DEF193A76
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE5E62E2047EEFA9FBBDF1CFB4A0AB
DA5F989871CCE60042E36D70206FADD1E9257889BD9DCB210F48CDD4739E61BF
DB57FE6275D187BEE37F22403CC98E1AF521B1426BFCA80A2E23211930F1457C
E395DFB07B15DE7E2D6A621BB1B3E49E42E7B668D992F7E0E38A9B29771F8BF4
2D24FB73665D5B382583F9567D93C7A50E38948E5E5B97C73C59B32CE73C6D50
50670940D1DC902204F359CB4473250995375C2C020D721E0C4D0063EC306C40
31E6273DFE32298D838C4CC8486BEF7EC22EECDF4256EE26B5AAAB9582854820
F6B7304D62DD9582B5AA9F3C74B2E629B67C0291219D69E339BBBB3BB5521C91
6756E1D1EAE5E08ACA1087C1AACA706905D26465A3B7C450A014437F725424AA
9031A630224BBB20D3F475386774DF84A0ADF72B71CACD4DC8FAC79445022143
ADC35E8C3374C39148A9CE74956B9710B511786D16AD37FF922FD1C6C68FCC05
5C8429CAA48D7F0CC2A89AACE481F0EC5A615FEC6E400C8B9C861B872E8A9E89
B5CC9C5F0C57E2CDBCCB8CEC46CFE54B52F8C876E223F30470187653FECC228F
2DE7338BEC2D2329C05037A08A106A8C9067ABC073261F8509CF34DD4CA030A9
BAA2CE9DF14BA13BEEBFC5D58DE386354C7236EF66606522945C4DDAD84D9921
AF3EAA0A37B35DCD74CB6529B2CF2CE866778A27C716E8808B6355431547202E
0714ED434EE3A82BE31ED756645949706C496AA5726593228DBBC57C4F6CAAD5
BC349FE760C43953621C6770077DE62CB873B31254100C0AA753AF58473F9AFF
DB32CBAA3563A481B1D5C4C7D89077AA974CFBF4CB050D6F57B6D89D09B66984
77A24819BC87F01E1FC2D67980C6565A978F71782CCB500634B614E9DD3C7C18
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC463B1AFEE36C1C3B9E85BD54EB70431575E
BF28ECC41A6A0A5E89FD2B68A2F70C638789E364846C907E143CF1D3FC1360C1
D342C94322EEC1547E7ADF123582F655B10A77CD82EB3C0FB8C09606DFD022C0
BB2449CFA284AB052240413FEE760A8C80ABA4CBCA22DADA1349ECC4A9950C85
78B6D7B384C4A037A848A335E8D451109CAAE2811E499C038D545584A870538E
2AE9A38C509097D2E55E6C7A52C3C7106FE2658CCCC0E009FCD0D66C0F9656E4
7E98A214318EAB91191B962D6EDBB5B03576BE188F8A87EDCC0E550DB1D88A78
A306ED8D2DC700CB7782113A1C2469DDB654DD3B851D01B563FB3A21150ECB02
E34FB17C3017641863900200F291B2E624482DCAF786C10BEDB739584F60DB12
106932087FF4370D1C25711478FD4AC8E03BE4A2885A935A1CB7E6B2B198EB6F
00A9B4C5CB1FDE6F0DE21DEA2126F3A9076269B99888609B62B7CBA5C6A21609
CB4D90B6068A5235A94489F21B514032F3FBAC45690A84EF3A2C0D17C269633D
AE67C713FEA091BCC7C6AF76A0DF223531C12CDEC349D2325D6FAAC3C1EBA008
0CF4DFCACEE5513EAF3E903BAB38790E8729740D29D27C8018BECD829ACB6C3D
9129E976A242787A0C37B62D3D1BF8537CFCE40CA18283494E800D98DF7E1AFA
EF792660158797BACFBD7CD6FBB41FF7BB607868D480DF6C530C83A874B32A4C
E1F47F0B7609CEC5EE646AE2E2DF81E278A3AB9359A878A64E913E84134B1C53
AF1802803BAF5597570A8C6B0B4A5E0E827FBE0C3CFF9C5CAD1CB5BA1AF1B6A8
D13F6A0D3FC382598F6790F69D1C986A64F25CE29C161D1DFED4E056C49EC385
0D88DBE34BE839D3F2F36EE30695E71BBC1DDCDBC1B006CFE5A032B95CA40F19
FE0EEEAD466FE804591317688C32F948B47DA046070E46E4BA1A3FD355B1DE1D
32145D39243D0590A90F1C4EC2C69A385600773A0ACAE6D25FAA0A36D430519C
2A613E030279B44188897585385A1BD3C350F31F6E61A7345E056E01C1A481E9
45FD890AA23745900DF0B0C182FB0A973DDC9DB6DE7E7596528D2582B82FBA9F
E336EA62CB55BE2301E115BF38D18AE8461F466E2076146451C2AF25E5EBA344
D34F8CDFBC3BF32EBB01BD69C0C8F8C4FCBCE04F3C65EA91889541467D451A5E
A81586D2E91844C22A3CDE0856BD8640D2B9B1844E01CD39ADC11FA69DDC5020
CC3C14EACE61BCE6EC7A9934BE9DF8E2797BB52CA05603870FE7C734D80223EB
23468A199E5E7725983CFD34457404F15BA85E1CD860E7D74A4E73C9B32EA493
E60787AF090ECB75DCE07F74902F732C9E1B3968F594AA5479AB954F72A540B1
BEFBA37CBCC7A0DE20F697627A5CB22BB3868497D46B779C8609E85E4BCFE843
19532B3AC9D62BD415A25B68882F9207ED34F28DFB622BEE85BFEF35A03C057C
572BA8BE7D6136C56B289D8E66A4AD0D7458BD45FC3FD89AE09FF322EB01B122
2EF05EC89BF7023BCE3A87C3DE5937D454593751EDD711F21B6DCFE6A1DB13D8
60842BAEC5EB5C217FC685C06C5AE447C9961E1030F6CC9B504E1FFFCCA35243
1A0D5BFCFCFAD4393EF292A9E582B78DD2BBE4BABAC7DD277FC23AA04E5B6192
2DC4A068F35B9E7EB17E895A9862CA1C88661E11898952F1317E3BC8F70579EA
CA82C64B7ABE1ACE4ABFBFA159B07ED5C93D976CCAD20691B072DC9825E72438
0AE722EDA58756E4FA9184D9C324D2DBBC3165BB4DE936CC3A4BF19EA1C5D6C0
D79F9DB3B3B5C8C868FB6AFAADECA9158EC9419109D47C0ACEAD4681E28A7E1B
43265201F1B4C49A4EE76448D1CD1B73EA13910335910CA61F5B4984C9A127C4
BFEF9A390D3C95A9938EF236F4147C250F6D7F8459AC97D8256B54704294478B
4C661D4A4E9FA155F8AEC542E986811C3A1053C9A032767CA766CC888BB33D40
9B06DAD10E52E08CFBF052D1DB422D245201FBD6463F31D42D64C0D7063F30CA
EE917F0AF9AA32B6AB21FF4CEC183963E8A9EF7165583B1AE09C3F12BAA82365
202F0415EFAD684EA2927843B2F5BAD762873DA182659D73D6C906AB9675F371
970948CD728899E17FA0F906097F360422F59F50625FAE9DD08A8BB3C39D282B
7915AB2936FB2FC5B96B4DBD2887DFAFFDC16ACC01828F9C7F90C99D1F049A3D
2DB0551C289422591AA1BD4AE7A04965F292B0C09FAA9B9B21285CF0544EE7E1
72BD7D555403B83025FC259D4ABAD69050D64014F76E93A2B631360664A35CE2
BF47D21F6A7D4E95C2B710B3A1FC467F98A7E2F4511DEB9FBAB2FEDC321C73F7
2392A08E129B014465B50CD7EF528214F30327AEC7B0075FAA6FE3D21E5C1928
F4167F45530C20E87B8406B811C05B6AF2EBF80DD90786B4C19754DFBE077816
64EC5561996C797412E8EB7FE362AE5F0C086F5BC7EAABE035F2A19ADAE898B7
F06CE566B5620FDC1AC05004B25B3433DB6921D7696DB969049031B0C248B08D
70E5C8DEF0073B297683F806A2A2C038FAFDB85461241002CC42F60DAA610BB3
944222C01F0BA2705924E9FF4B42159E5978724D0874215B49AC3C17312BBC0F
0F89FE477C2413903A61E139B0D0A1F460ECF609047DB5AB1D11EF4A587E569A
48CB41939045764304941D884646C328C7B77E1C3FD22A147E3E4F8C65DAF13D
26C24BC276BC5F72AC1343EE49D70EC1043D8EF7F37CBC224FCC922D1C39AC96
7B02ED9D8943984239EFBC4A36C40D9A406871E2FDE9D7A8A0D4E11DD6435FC6
A7C2B91B672FA23D9F875C001E76E6E28F3D4072572E95531C63E1E76AA34EE0
AC72369B7871669DCA948F18341306C3422922BCF391BE9C9CEE1C46D517324A
5E6FF1135DDEA77C3A81634324B4770748064D77BF335721FFFB55A4D879BB5C
BE06DFE7929DC4A9F5B183E06D2DE8EE9FB83985B96CA9D3F1F499C10BBFBDCF
134E1D1EB8B31461018367344C3A3B4C13236CBCC78A8F93CC75F90C9189297B
EEECB8C34E8AE8162B8FB4D09237C2396A5A7BD8631FB4CCF61612DF8E6B72A5
B8C1F72A3001FCD5BAAE8A4A437F56424EF20F1E31501B20811C18584A9796D3
3103F21D4F5ADEB711A5D5D489D543B8A20F0278602EA080B3586895F8027972
5720B9AD79FA4B7452B2C7D408B8000BD3E97F2E173BDD0A4632BBD84EDC3F4E
9EDD96EBFEDAB3222EDD152AD19C307118AC0086653521EA59D676C7B7EAA1C9
95B7D1A07FF0F73B0283C8843E9A3001BD0DA6A627FE21EA8A6CD551D9E05641
1524F1AC2C3EBF469B29D7F6B88EA20514F3453A08F1898F30FB9588358DA2E4
9C9CA1CDAECC0FFB2C3B2EF0396CBE6E45181AC2C15BE5D92123D613716CD806
27501DBE50DE2B82BD246771CBF0AF8D53B79FF544A0C6F98C72AB9F84F3C0C7
423DFEC10FF237E38BC8E19B81502A19E0BD113AFF050B916B01C3A6062F7A3B
C54250B62CEF85C03F169FF04E8803F18A2569F67BF88C6CAA306AF4B343BB10
D5B4BDAEA5C4120096F0216A62A4CCE62E5E2182AF738D2758D7F8607219A13C
7B03257D8CD384F37EF0877323A48B12F59FCECF6F9848B491C64BE4F4D111C5
CA3DD242C187C1B92746E8267FA78B9321B7497195A0D094FF24FB58E569E393
72E34E3FF5AD87298C696722D1D5662B8CF7953F411544E56FCC098DD1C6BA94
A6B454A7501CEA0439044F73C9458752ED9C2228B62440412E3624EEC2D3DC1D
B94102FB88F631211557D3A4F79A8E5FD8BA70F2AB65B7BDC9F704E15D8F7E4D
E009307129C046364E334E9CB20A617275B4BEB257C6238D56A1FD2E9EEEE549
930010080C12CC74EB8C5288E168E18C8694A3A60432CDB7BC5DD0E9B0DA3088
D62C10DA3AD6350EBB51A395BECF08C2BAD47CA484F64080B76D7947EFF83227
04A9DB9B12A5D759909821BB1FAA64201B5D909232820E8A655C5D91AC7F8E69
FFE57EC149A6A210BFDE7BD15B3F305CA59C6A6AAF73B486BDF80A6EE4E6568B
2061CDA5F0B9477E6F64C0AA0C5F1ED2BC24B77548F1E6C67F761C40DBE2A9AD
81F7002A27F2EDE3459E49C27454556FE08DD26E0EC1C981E7703D9DFE30FC3F
11D3578EEC2EF284C2DAE08E3664B7D51FC34898B2382F1AF48808C9649573B0
2EDE5223B3FCA7E79729589AF81DF99BA85776A791518DFDFF3D6671646667CE
C7A329460CF59E2E28900B405ED2A710AC5AC35FCB40D12D438193ACABA56212
3D7FA27FC52055EA2FF6E380D151BD5AA336EA78098A3F8AECAEA9B09CD6E7AB
F07C57E0B3AB0EDE469EF4701DF14A5D1953B73FE8347E6783ECD1F29975D364
140FB12BCDB0EF3628333B14CF83A6F42D05FB7C2FCCB653FD0BEF369BB22003
820632BECB858FDC3F640D21EAAF1333A7FE1DDB81E04861EC244271FAE09541
4F956BCABA7F25705308821F105AAD8F008A01ECC02E7933E19CDA965A8A23F2
F822994D21D9B4EAEAF81C3AE8C464A89F33E4D70F38FD9E69AC60D04886D106
3742D723EB1C06B948EDD36650BF28ECC41A6A0A5E8978DCB334435B815D0AF7
2C8E55B4A781ADCE73A0EDF0957C9C1DE3C78A0AAF7E65650403683A29AB26EE
2212F88A0FE66EC27CBD74FB02835FB59561573AA857702B2A8F48F563EDA3F7
39266BBB88BB2F98BDC3B721DB34D4C6186E5CB2E597FE20553FA152186EF35D
59BB974980F8D0478935C577AACAEDD35143A0999BF1041A4DCB811174154991
2A1F4858DA0F136625FE274C6AC706B516CBF14C54000BC2B7B48A9BF5545EF3
80958DB049BFF3E0257C0292C8A10A9199E2A7AFC5E8194110F5C510EA23F492
5336C274C5E67B8398D53B2729CD435B3D4CF636309618BFC9F587586ED39FF4
6ED6F6C0C6A0354772A5A0FCAA65BA0898D529203740495AE54B9F7AB02D39F1
AB053C54F5D0C3AF355020492B6BA0F434F3AB155DB0AEB7E887ADD1557D5055
95DE8FD007E12096B272293182534F8D777BC3437D5EAC0348706DAD0FEF5DA8
76D26283F419A5A13BAE808D92139426BAAD81B3E75DA2D72DADFBADBA62C9F5
3E6C508E4DF7A1CB20C9F30CA6A6A02A6A02F2CEBEEA1466CD7710A6F66E940A
641C3CFED53452A8AC69B03596B8349918BD7675636690E37D713DC7AC738158
677295C357D8C7D3000C4B0DAA1BF366E49FB01458A5A34A7F0484BCF2DBD725
F2004C073D803909DE8452987342EE9330D4C833CD6F4FD4D95A00D43F895CFB
A4195AFEB928FEBE40EDBF2FEC0650506B0314C2229FBD68B98D0387BC99C7EF
3AFEC9B5417C5D3364E00DE6EF5D2102286B2EFA5F9E04AE74A150DD150C0C02
17AF99F4EA2A4AEB1986BBE9E1D3730C5136F268AE1AE63357715502D30B3B32
01627D2A92CF3A53FF6C3632C3C2864C63C76882450D8191BC6548842282625B
BCE7EDD57C557159FFF25B5CD6BC1C005F1BC4F827AADB5C1A9C74BDAAA51CC4
D5D44E7A8E0F76E1C8ACEBCB308FB911D056976ADC00BC47D5880731C976C9A5
309251BD76818BA9D780B7D7244101481A284729947F117650E3540D3961636F
F5D3402D969687F5650D5326F90D583F6FD7F502C3AF2D85566AF33BF647CAFF
262E020B32378C61CFB86B5DAECB7912E429BF1F6581BE59576756E4775531BD
58CB44638C5F5DABDA0EE19BF90FC0DE00C44219376CCD878010D21F62FC70F9
2E7907ADB31D2A99E5730BE97912B53A56BC33D7626B8EBADEEECE2DEE6E62F5
BEC9F2C5A440C3B0B66F437139F759C9BDB4F3A986732F2E635D7FE969D3FABE
94024EC4B7DAC979188A1B5738D31856F0E47F51C33813C216079C8BE50D5B75
39BB5E8E54F88061140627B806E13328F9B2D92C8EF7F5B53F2A2E15064661E2
30E2F10440AEB848AC2306DFFC414970FDE221A081B616269FEB5AFA565BF1A7
21B21C3A34D99099F9AE21A8B31ECAF20EE15F98A4010CA4A12B74E2416D48A0
6C66E987C2BEE43B5FD8890A1E11FCF4E0548E2019418437B4BC7A92174B7D5D
8F4E9E98F487764A8F8FAECC601230B6B12F8025CB849B3EF3D26CD434E62ACC
F1855301CC136ADACBCA5A67FDEB6B452FE81C36FE18B6A1756424CE138B1E28
3B7F3A50
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
TeXDict begin 39158278 55380994 1000 600 600 (topoG.dvi)
@start /Fa 255[63{}1 99.6264 /txsy rf /Fb 194[63 17[63
43[{}2 99.6264 /rtxr rf /Fc 207[50 48[{ TeXBase1Encoding ReEncodeFont }
1 99.6264 /NimbusRomNo9L-Regu rf /Fd 205[37 37 49[{
 TeXBase1Encoding ReEncodeFont }2 74.7198 /NimbusRomNo9L-Regu
rf /Fe 142[50 50 2[72 1[44 107[{ TeXBase1Encoding ReEncodeFont }4
99.6264 /NimbusRomNo9L-ReguItal rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 12 -355
a
SDict begin H.S end
 12 -355 a 12 -355 a
SDict begin H.R end
 12 -355 a 12 -355 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 12 -355 a 
Black  Black 20 -15 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 20 -15 a 20 -15 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 20 -15 a 20 -15
a
SDict begin H.S end
 20 -15 a 20 -15 a
SDict begin 14.5 H.A end
 20 -15 a 20 -15 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 20 -15 a 120 732
a @beginspecial @setspecial
Black   {  1 2  2 2 mul 1.25 mul  0.2 arrowVTriangle  } 0.5  false
2  0 0 0 add 70 0 add 60 0 add 70 0 add 0.5  1.0  dasharrowdoubleline
 
@endspecial 213 98 a Fe(q)263
62 y Fd(2)263 134 y(1)326 98 y Fb(=)23 b Fe(m)484 62
y Fd(2)484 134 y(1)120 732 y @beginspecial @setspecial
Black 60 0 add 70 0 add 2 1.0 vertex
@endspecial @beginspecial @setspecial
Black   { 1 0.5  1 add 1.2 mul 1 mul dup 2 mul 1.25 mul 0.2 arrowVTriangle
 } 0.5  false 0 0 140 0 add 70 0 add 60 0 add 70 0 add 0.5  1.0  dasharrowdoubleline
 
@endspecial 686
105 a Fa(\000)p Fe(k)793 120 y Fd(1)848 105 y Fb(+)e
Fe(p)982 120 y Fd(1)1038 105 y Fb(+)g Fe(p)1172 120 y
Fd(2)120 732 y @beginspecial @setspecial
Black 140 0 add 70 0 add 2 1.0 vertex
 
@endspecial
@beginspecial @setspecial
Black   { 1 0.5  1 add 1.2 mul 1 mul dup 2 mul 1.25 mul 0.2 arrowVTriangle
 } 0.5  false 0 0 140 0 add 70 0 add 220 0 add 70 0 add 0.5  1.0  dasharrowdoubleline
 
@endspecial 1381 105 a Fe(k)1425
120 y Fd(2)1481 105 y Fa(\000)g Fe(p)1615 120 y Fd(1)1671
105 y Fa(\000)g Fe(p)1805 120 y Fd(2)120 732 y @beginspecial
@setspecial
Black 220 0 add 70 0 add 2 1.0 vertex
 
@endspecial @beginspecial @setspecial
Black   { 1 0.5  1 add 1.2 mul 1 mul dup 2 mul 1.25 mul 0.2 arrowVTriangle
 } 0.5  false 0 0 280 0 add 70 0 add 220 0 add 70 0 add 0.5  1.0  dasharrowdoubleline
 
@endspecial
2074 98 a Fe(p)2124 62 y Fd(2)2124 134 y(1)2188 98 y
Fb(=)i Fc(0)120 732 y @beginspecial @setspecial
Black   { 1 0.5  1 add 1.2 mul 1 mul dup 2 mul 1.25 mul 0.2 arrowVTriangle
 } 0.5  false 0 0 0 0 add 0 0 add 60 0 add 0 0 add 0.5  1.0  dasharrowdoubleline
 
@endspecial
244 843 a Fe(q)294 807 y Fd(2)294 879 y(2)358 843 y Fb(=)f
Fc(0)120 732 y @beginspecial @setspecial
Black 60 0 add 0 0 add 2 1.0 vertex
 
@endspecial
@beginspecial @setspecial
Black   { 1 0.5  1 add 1.2 mul 1 mul dup 2 mul 1.25 mul 0.2 arrowVTriangle
 } 0.5  false 0 0 60 0 add 0 0 add 140 0 add 0 0 add 0.5  1.0  dasharrowdoubleline
 
@endspecial 875 841 a Fa(\000)p
Fe(k)982 856 y Fd(1)120 732 y @beginspecial @setspecial
Black 140 0 add 0 0 add 2 1.0 vertex
@endspecial @beginspecial @setspecial
Black   { 1 0.5  1 add 1.2 mul 1 mul dup 2 mul 1.25 mul 0.2 arrowVTriangle
 } 0.5  false 0 0 220 0 add 0 0 add 140 0 add 0 0 add 0.5  1.0  dasharrowdoubleline
 
@endspecial 1571
841 a Fe(k)1615 856 y Fd(2)120 732 y @beginspecial @setspecial
Black 220 0 add 0 0 add 2 1.0 vertex
@endspecial @beginspecial @setspecial
Black   { 1 0.5  1 add 1.2 mul 1 mul dup 2 mul 1.25 mul 0.2 arrowVTriangle
 } 0.5  false 0 0 280 0 add 0 0 add 220 0 add 0 0 add 0.5  1.0  dasharrowdoubleline
 
@endspecial 2074
843 a Fe(p)2124 807 y Fd(2)2124 879 y(2)2188 843 y Fb(=)h
Fc(0)120 732 y @beginspecial @setspecial
Black   {  1 2  2 2 mul 1.25 mul  0.2 arrowVTriangle  } 0.5  false
2  0 60 0 add 0 0 add 60 0 add 70 0 add 0.5  1.0  dasharrowdoubleline
 
@endspecial
659 473 a Fe(k)703 488 y Fd(1)759 473 y Fb(+)14 b Fe(q)886
488 y Fd(2)479 464 y Fe(m)551 479 y Fd(2)120 732 y @beginspecial
@setspecial
Black   { 1 0.5  1 add 1.2 mul 1 mul dup 2 mul 1.25 mul 0.2 arrowVTriangle
 } 0.5  false 0 0 140 0 add 0 0 add 140 0 add 70 0 add 0.5  1.0  dasharrowdoubleline
 
@endspecial 1324 476 a Fa(\000)p Fe(k)1431
491 y Fd(1)1486 476 y Fb(+)g Fe(k)1607 491 y Fd(2)120
732 y @beginspecial @setspecial
Black   { 1 0.5  1 add 1.2 mul 1 mul dup 2 mul 1.25 mul 0.2 arrowVTriangle
 } 0.5  false 0 0 220 0 add 70 0 add 220 0 add 0 0 add 0.5  1.0  dasharrowdoubleline
 
@endspecial 1988 473
a Fe(k)2032 488 y Fd(2)2087 473 y Fa(\000)21 b Fe(p)2221
488 y Fd(2)p Black Black eop end
%%Trailer
userdict /end-hook known{end-hook}if
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
