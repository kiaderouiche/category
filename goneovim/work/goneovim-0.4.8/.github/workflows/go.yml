name: test and build
on: [push, pull_request]
jobs:
  test-and-build-linux:
    strategy:
      matrix:
        # go-version: [1.12.x, 1.13.x]
        go-version: [1.12.x]
        platform: [ubuntu-latest] #, windows-latest]
        qtversion: [5.13.0, 5.14.1, 5.15.1]
    runs-on: ${{ matrix.platform }}
    env:
      GOPATH: ${{ github.workspace }}
      QT_DIR: ${{ github.workspace }}/Qt
      QT_VERSION: ${{ matrix.qtversion }}
      QT_API: 5.13.0
      GO111MODULE: off
      GOPROXY: https://goproxy.io
    steps:
    - name: Linux prerequisites 
      run: |
        sudo apt update
        sudo apt-get -y install build-essential libglu1-mesa-dev libpulse-dev libglib2.0-dev

    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install Qt for linux
      uses: jurplel/install-qt-action@v2.7.1
      with:
        version: ${{ matrix.qtversion }}
        host: linux
        target: desktop
        dir: ${{ github.workspace }}
        modules: 'qtcharts qtdatavis3d qtpurchasing qtvirtualkeyboard qtwebengine qtnetworkauth qtwebglplugin qtscript'

    - name: Get Qt binding for Go
      run: |
        go get -v github.com/therecipe/qt/cmd/...

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        path: ./src/github.com/${{ github.repository }}

    - name: Free disk space
      run: |
        sudo swapoff -a
        sudo rm -f /swapfile
        sudo apt clean
  
    - name: Generate Qt bindings
      run: $(go env GOPATH)/bin/qtsetup -test=false

    - name: Get dependencies
      run: |
        go get -v -t -d github.com/${{ github.repository }}/editor
        cd ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim
        $(go env GOPATH)/bin/qtmoc

    - name: Test
      run: go test github.com/${{ github.repository }}/editor

    - name: Build
      run: |
        cd ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim
        $(go env GOPATH)/bin/qtdeploy build desktop

    - name: Add executable
      run: |
        cd ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim/deploy/linux
        chmod u+x goneovim QtWebEngineProcess

    - name: Upload for linux
      uses: actions/upload-artifact@v1
      with:
        name: Goneovim-latest-linux-${{ matrix.qtversion }}
        path: ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim/deploy/linux


  test-and-build-macos:
    strategy:
      matrix:
        # go-version: [1.12.x, 1.13.x]
        go-version: [1.12.x]
        platform: [macos-latest]
        qtversion: [5.13.0, 5.14.1, 5.15.1]
    runs-on: ${{ matrix.platform }}
    env:
      GOPATH: ${{ github.workspace }}
      QT_DIR: ${{ github.workspace }}/Qt
      QT_VERSION: ${{ matrix.qtversion }}
      QT_API: 5.13.0
      GO111MODULE: off
      GOPROXY: https://goproxy.io
    steps:

    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}

    - name: Install Qt for macOS
      uses: jurplel/install-qt-action@v2.7.1
      with:
        version: ${{ matrix.qtversion }}
        host: mac
        target: desktop
        dir: ${{ github.workspace }}
        modules: 'qtcharts qtdatavis3d qtpurchasing qtvirtualkeyboard qtwebengine qtnetworkauth qtwebglplugin qtscript'

    - name: Get Qt binding for Go
      run: |
        go get -v github.com/therecipe/qt/cmd/...

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        path: ./src/github.com/${{ github.repository }}

    - name: Generate Qt bindings
      continue-on-error: true
      run: $(go env GOPATH)/bin/qtsetup -test=false

    - name: Get dependencies
      run: |
        go get -v -t -d github.com/${{ github.repository }}/editor
        cd ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim
        $(go env GOPATH)/bin/qtmoc

    - name: Test
      run: go test github.com/${{ github.repository }}/editor

    - name: Build
      run: |
        cd ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim
        $(go env GOPATH)/bin/qtdeploy build desktop

    - name: Upload for macos
      uses: actions/upload-artifact@v1
      with:
        name: Goneovim-latest-macos-${{ matrix.qtversion }}
        path: ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim/deploy/darwin

  #test-and-build-windows:
  build-windows:
    strategy:
      matrix:
        platform: [windows-latest]
        qtversion: [5.13.0, 5.14.1]
    runs-on: ${{ matrix.platform }}
    env:
      GOPATH: ${{ github.workspace }}
      GOROOT: ${{ github.workspace }}\go-root
      GOROOT_BOOTSTRAP: ${{ github.workspace }}\go-boot
      GOROOT_FINAL: ${{ github.workspace }}\go-boot
      GOVSVARSPATH: ${{ github.workspace }}\BuildTools\VC\Auxiliary\Build\vcvars64.bat
      QT_API: 5.13.0
      QT_VERSION: ${{ matrix.qtversion }}
      QT_DIR: ${{ github.workspace }}\Qt
      QT_MSVC: true
      GO111MODULE: off
      #CGO_ENABLED: 1
    steps:

    - name: Intall MSVC 2017 Visual C++ Buildtools
      run : |
        curl -sL --retry 10 --retry-delay 60 -O https://aka.ms/vs/15/release/vs_buildtools.exe
        New-Item -Path BuildTools -ItemType Directory 
        .\vs_BuildTools.exe --quiet --wait --norestart --nocache --installPath ${{ github.workspace }}\BuildTools --add Microsoft.VisualStudio.Workload.VCTools --includeOptional
        Start-Sleep -s 720

    - name: Check MSVC 2017 Visual C++ Buildtools installation
      run : |
        dir ${{ github.workspace }}\
        dir ${{ github.workspace }}\BuildTools
        dir ${{ github.workspace }}\BuildTools\VC
        dir ${{ github.workspace }}\BuildTools\VC\Tools
        dir ${{ github.workspace }}\BuildTools\VC\Tools\MSVC
        dir ${{ github.workspace }}\BuildTools\VC\Tools\MSVC\14.16.27023
        dir ${{ github.workspace }}\BuildTools\VC\Tools\MSVC\14.16.27023\bin
        dir ${{ github.workspace }}\BuildTools\VC\Tools\MSVC\14.16.27023\bin\Hostx64
        dir ${{ github.workspace }}\BuildTools\VC\Tools\MSVC\14.16.27023\bin\Hostx64\x64

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.7.1
      with:
        version: ${{ matrix.qtversion }}
        host: windows
        target: desktop
        modules: 'qtcharts qtdatavis3d qtpurchasing qtvirtualkeyboard qtwebengine qtnetworkauth qtwebglplugin qtscript'
        arch: 'win64_msvc2017_64'
        install-deps: 'true'
        dir: ${{ github.workspace }}

    - name: Install Go
      continue-on-error: true
      run: |
        curl -sL --retry 10 --retry-delay 60 -O https://dl.google.com/go/go1.11.9.windows-amd64.zip
        expand-archive -path go1.11.9.windows-amd64.zip -destinationpath .
        Move-Item -Path go -Destination go-root

    - name: Get Qt binding for Go
      run: |
        ${{ github.workspace }}\go-root\bin\go.exe get -v -tags=no_env github.com/therecipe/qt/cmd/...

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        path: .\src\github.com\${{ github.repository }}

    - name: Set PATH
      run: |
        $env:PATH = "${{ github.workspace }}\\go-root\\bin;$env:PATH"
        $env:PATH = "${{ github.workspace }}\\BuildTools\\VC\\Tools\\MSVC\\14.16.27023\\bin\\Hostx64\\x64;$env:PATH"
        echo "::set-env name=PATH::$env:PATH"

    - name: Enable experimental Go features Step.1
      continue-on-error: true
      run: |
        git clone https://github.com/golang/go.git ${{ github.workspace }}\go-msvc
        cd ${{ github.workspace }}\go-msvc
        git fetch "https://go.googlesource.com/go" refs/changes/46/133946/5
        Git checkout FETCH_HEAD
        echo "devel +6741b7009d" > VERSION

    - name: Enable experimental Go features Step.2
      continue-on-error: true
      run: |
        cd ${{ github.workspace }}\go-msvc
        curl -sL --retry 10 --retry-delay 60 https://github.com/golang/go/commit/e4535772ca3f11084ee5fa4d4bd3a542e143b80f.patch | patch -p1 -R

    - name: Enable experimental Go features Step.3
      continue-on-error: true
      run: |
        cd ${{ github.workspace }}\go-msvc
        curl -sL --retry 10 --retry-delay 60 https://github.com/golang/go/commit/f10815898c0732e2e6cdb697d6f95f33f8650b4e.patch | patch -p1 -R

    - name: Enable experimental Go features Step.4
      continue-on-error: true
      run: |
        cd ${{ github.workspace }}
        Move-Item -Path go-root -Destination go-boot
        Move-Item -Path go-msvc -Destination go-root
        cd ${{ github.workspace }}\go-root\src
        .\make.bat

    - name: Generate Qt bindings
      run: ${{ github.workspace }}\bin\qtsetup.exe -test=false
      shell: cmd

    - name: Retrieving dependencies
      continue-on-error: true
      run: |
        go get -v -d github.com/${{ github.repository }}/editor
        cd ${{ github.workspace }}\src\github.com\${{ github.repository }}\cmd\goneovim
        ${{ github.workspace }}\bin\qtmoc.exe

    # - name: Test
    #   run: go test github.com/${{ github.repository }}/editor

    - name: Build
      run: |
        cd ${{ github.workspace }}\src\github.com\${{ github.repository }}\cmd\goneovim
        ${{ github.workspace }}\bin\qtdeploy build desktop

    - name: Remove unnecessary modules
      run: |
        cd ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim/deploy/windows
        Remove-Item -Path bearer -Recurse
        Remove-Item -Path iconengines -Recurse
        Remove-Item -Path imageformats -Recurse
        Remove-Item -Path platforminputcontexts -Recurse
        Remove-Item -Path position -Recurse
        Remove-Item -Path printsupport -Recurse
        Remove-Item -Path qmltooling -Recurse
        Remove-Item -Path resources -Recurse
        Remove-Item -Path scenegraph -Recurse
        Remove-Item -Path translations -Recurse
        Remove-Item -Path virtualkeyboard -Recurse

    - name: Upload for windows
      uses: actions/upload-artifact@v1
      with:
        name: Goneovim-latest-win64-${{ matrix.qtversion }}
        path: ${{ github.workspace }}/src/github.com/${{ github.repository }}/cmd/goneovim/deploy/windows
