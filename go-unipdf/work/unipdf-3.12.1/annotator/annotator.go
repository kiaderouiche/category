//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_d "bytes";_bc "errors";_e "github.com/unidoc/unipdf/v3/common";_ed "github.com/unidoc/unipdf/v3/contentstream";_ef "github.com/unidoc/unipdf/v3/contentstream/draw";_db "github.com/unidoc/unipdf/v3/core";_ag "github.com/unidoc/unipdf/v3/internal/textencoding";_ae "github.com/unidoc/unipdf/v3/model";_f "math";_b "strings";_g "unicode";);

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_ae .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_ae .PdfColorDeviceRGB ;Opacity float64 ;};func (_bfbc *AppearanceStyle )applyRotation (_gbbg *_db .PdfObjectDictionary ,_cde ,_gbdc float64 ,_ffdc *_ed .ContentCreator )(float64 ,float64 ){if !_bfbc .AllowMK {return _cde ,_gbdc ;};if _gbbg ==nil {return _cde ,_gbdc ;};_bbe ,_ :=_db .GetNumberAsFloat (_gbbg .Get ("\u0052"));if _bbe ==0{return _cde ,_gbdc ;};_ada :=-_bbe ;_eegf :=_ef .Path {Points :[]_ef .Point {_ef .NewPoint (0,0).Rotate (_ada ),_ef .NewPoint (_cde ,0).Rotate (_ada ),_ef .NewPoint (0,_gbdc ).Rotate (_ada ),_ef .NewPoint (_cde ,_gbdc ).Rotate (_ada )}}.GetBoundingBox ();_ffdc .RotateDeg (_bbe );_ffdc .Translate (_eegf .X ,_eegf .Y );return _eegf .Width ,_eegf .Height ;};func _deg (_dfgfc *_ae .PdfField )string {if _dfgfc ==nil {return "";};_daae ,_fgb :=_dfgfc .GetContext ().(*_ae .PdfFieldText );if !_fgb {return _deg (_dfgfc .Parent );};if _daae .DA !=nil {return _daae .DA .Str ();};return _deg (_daae .Parent );};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_ae .PdfAnnotation ,error ){_ggdd :=_ae .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_edf ,_cbgd ,_dab :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();_ggdd .C =_db .MakeArrayFromFloats ([]float64 {_edf ,_cbgd ,_dab });_edae :=_ae .NewBorderStyle ();_edae .SetBorderWidth (rectDef .BorderWidth );_ggdd .BS =_edae .ToPdfObject ();};if rectDef .FillEnabled {_dbdf ,_dfe ,_aea :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();_ggdd .IC =_db .MakeArrayFromFloats ([]float64 {_dbdf ,_dfe ,_aea });}else {_ggdd .IC =_db .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_ggdd .CA =_db .MakeFloat (rectDef .Opacity );};_ccfc ,_fae ,_fced :=_dba (rectDef );if _fced !=nil {return nil ,_fced ;};_ggdd .AP =_ccfc ;_ggdd .Rect =_db .MakeArrayFromFloats ([]float64 {_fae .Llx ,_fae .Lly ,_fae .Urx ,_fae .Ury });return _ggdd .PdfAnnotation ,nil ;};

// SetStyle applies appearance `style` to `fa`.
func (_cf *FieldAppearance )SetStyle (style AppearanceStyle ){_cf ._gg =&style };

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_ae .PdfAnnotation ,error ){_gggb :=_ae .NewPdfAnnotationLine ();_gggb .L =_db .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_ccg :=_db .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle1 ==_ef .LineEndingStyleArrow {_ccg =_db .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_deca :=_db .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_ef .LineEndingStyleArrow {_deca =_db .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_gggb .LE =_db .MakeArray (_ccg ,_deca );if lineDef .Opacity < 1.0{_gggb .CA =_db .MakeFloat (lineDef .Opacity );};_gac ,_gdgf ,_dbb :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_gggb .IC =_db .MakeArrayFromFloats ([]float64 {_gac ,_gdgf ,_dbb });_gggb .C =_db .MakeArrayFromFloats ([]float64 {_gac ,_gdgf ,_dbb });_gae :=_ae .NewBorderStyle ();_gae .SetBorderWidth (lineDef .LineWidth );_gggb .BS =_gae .ToPdfObject ();_cbg ,_efge ,_bdef :=_gbc (lineDef );if _bdef !=nil {return nil ,_bdef ;};_gggb .AP =_cbg ;_gggb .Rect =_db .MakeArrayFromFloats ([]float64 {_efge .Llx ,_efge .Lly ,_efge .Urx ,_efge .Ury });return _gggb .PdfAnnotation ,nil ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_ae .PdfAnnotation ,error ){_fd :=_ae .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_edb ,_agf ,_c :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_fd .C =_db .MakeArrayFromFloats ([]float64 {_edb ,_agf ,_c });_ad :=_ae .NewBorderStyle ();_ad .SetBorderWidth (circDef .BorderWidth );_fd .BS =_ad .ToPdfObject ();};if circDef .FillEnabled {_fdc ,_ec ,_ee :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_fd .IC =_db .MakeArrayFromFloats ([]float64 {_fdc ,_ec ,_ee });}else {_fd .IC =_db .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_fd .CA =_db .MakeFloat (circDef .Opacity );};_bd ,_ea ,_ff :=_dc (circDef );if _ff !=nil {return nil ,_ff ;};_fd .AP =_bd ;_fd .Rect =_db .MakeArrayFromFloats ([]float64 {_ea .Llx ,_ea .Lly ,_ea .Urx ,_ea .Ury });return _fd .PdfAnnotation ,nil ;};func _bg (_fabdg *_ed .ContentCreator ,_bgc AppearanceStyle ,_bcd ,_ebf float64 ){_fabdg .Add_q ().Add_re (0,0,_bcd ,_ebf ).Add_w (_bgc .BorderSize ).SetStrokingColor (_bgc .BorderColor ).SetNonStrokingColor (_bgc .FillColor ).Add_B ().Add_Q ();};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_ae .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_ae .NewPdfColorDeviceGray (0),BorderColor :_ae .NewPdfColorDeviceGray (0),FillColor :_ae .NewPdfColorDeviceGray (1)};};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};func (_febf *AppearanceStyle )applyAppearanceCharacteristics (_efed *_db .PdfObjectDictionary ,_geb *_db .PdfObjectDictionary ,_gbb *_ae .PdfFont )error {if !_febf .AllowMK {return nil ;};if _geb !=nil {if _dcea ,_abd :=_db .GetNumberAsFloat (_geb .Get ("\u0057"));_abd ==nil {_febf .BorderSize =_dcea ;};};if CA ,_gbd :=_db .GetString (_efed .Get ("\u0043\u0041"));_gbd &&_gbb !=nil {_effdb :=CA .Bytes ();if len (_effdb )!=0{_ced :=[]rune (_gbb .Encoder ().Decode (_effdb ));if len (_ced )==1{_febf .CheckmarkRune =_ced [0];};};};if BC ,_gcaa :=_db .GetArray (_efed .Get ("\u0042\u0043"));_gcaa {_eed ,_cfbc :=BC .ToFloat64Array ();if _cfbc !=nil {return _cfbc ;};switch len (_eed ){case 1:_febf .BorderColor =_ae .NewPdfColorDeviceGray (_eed [0]);case 3:_febf .BorderColor =_ae .NewPdfColorDeviceRGB (_eed [0],_eed [1],_eed [2]);case 4:_febf .BorderColor =_ae .NewPdfColorDeviceCMYK (_eed [0],_eed [1],_eed [2],_eed [3]);default:_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_eed ));};};if BG ,_abge :=_db .GetArray (_efed .Get ("\u0042\u0047"));_abge {_bfc ,_cfaf :=BG .ToFloat64Array ();if _cfaf !=nil {return _cfaf ;};switch len (_bfc ){case 1:_febf .FillColor =_ae .NewPdfColorDeviceGray (_bfc [0]);case 3:_febf .FillColor =_ae .NewPdfColorDeviceRGB (_bfc [0],_bfc [1],_bfc [2]);case 4:_febf .FillColor =_ae .NewPdfColorDeviceCMYK (_bfc [0],_bfc [1],_bfc [2],_bfc [3]);default:_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_bfc ));};};return nil ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};func _bf (_gfe *_ae .PdfAnnotationWidget ,_agg *_ae .PdfFieldText ,_ebb *_ae .PdfPageResources ,_agb AppearanceStyle )(*_db .PdfObjectDictionary ,error ){_ffe :=_ae .NewPdfPageResources ();_gcg ,_dga :=_db .GetArray (_gfe .Rect );if !_dga {return nil ,_bc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ebg ,_dfb :=_ae .NewPdfRectangle (*_gcg );if _dfb !=nil {return nil ,_dfb ;};_efb ,_ega :=_ebg .Width (),_ebg .Height ();_afa ,_acc :=_efb ,_ega ;_bag ,_agd :=_db .GetDict (_gfe .MK );if _agd {_fcc ,_ :=_db .GetDict (_gfe .BS );_gaa :=_agb .applyAppearanceCharacteristics (_bag ,_fcc ,nil );if _gaa !=nil {return nil ,_gaa ;};};_aeb ,_dfb :=_ed .NewContentStreamParser (_deg (_agg .PdfField )).Parse ();if _dfb !=nil {return nil ,_dfb ;};_efa :=_ed .NewContentCreator ();if _agb .BorderSize > 0{_bg (_efa ,_agb ,_efb ,_ega );};if _agb .DrawAlignmentReticle {_adc :=_agb ;_adc .BorderSize =0.2;_fbgc (_efa ,_adc ,_efb ,_ega );};_efa .Add_BMC ("\u0054\u0078");_efa .Add_q ();_efb ,_ega =_agb .applyRotation (_bag ,_efb ,_ega ,_efa );_efa .Add_BT ();_gab ,_gee ,_dfb :=_agb .processDA (_agg .PdfField ,_aeb ,_ebb ,_ffe ,_efa );if _dfb !=nil {return nil ,_dfb ;};_fca :=_gab .Font ;_fge :=_gab .Size ;_abg :=_db .MakeName (_gab .Name );_egc :=_fge ==0;if _egc &&_gee {_fge =_ega *_agb .AutoFontSizeFraction ;};_fdcc :=_fca .Encoder ();if _fdcc ==nil {_e .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_fdcc =_ag .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_agdg ,_dfb :=_fca .GetFontDescriptor ();if _dfb !=nil {_e .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _bce string ;if _bcb ,_ece :=_db .GetString (_agg .V );_ece {_bce =_bcb .Decoded ();};if len (_bce )==0{return nil ,nil ;};_fdce :=[]string {_bce };_ffa :=false ;if _agg .Flags ().Has (_ae .FieldFlagMultiline ){_ffa =true ;_bce =_b .Replace (_bce ,"\u000d\u000a","\u000a",-1);_bce =_b .Replace (_bce ,"\u000d","\u000a",-1);_fdce =_b .Split (_bce ,"\u000a");};_ace :=0.0;_de :=0;if _fdcc !=nil {_acbe :=len (_fdce );_ggc :=0;for _ggc < _acbe {var _dee float64 ;_cga :=-1;_dca :=0.0;for _fff ,_afg :=range _fdce [_ggc ]{if _afg ==' '{_cga =_fff ;_dee =_dca ;};_eeg ,_gb :=_fca .GetRuneMetrics (_afg );if !_gb {_e .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_afg );continue ;};_dca +=_eeg .Wx ;if _ffa &&!_egc &&_fge *_dca /1000.0> _efb &&_cga > 0{_eab :=_fdce [_ggc ][_cga +1:];if _ggc < len (_fdce )-1{_fdce [_ggc +1]+=_eab ;}else {_fdce =append (_fdce ,_eab );_acbe ++;};_fdce [_ggc ]=_fdce [_ggc ][0:_cga ];_dca =_dee ;break ;};};if _dca > _ace {_ace =_dca ;};_fdce [_ggc ]=string (_fdcc .Encode (_fdce [_ggc ]));if len (_fdce [_ggc ])> 0{_de ++;};_ggc ++;};};_fce :=2.0;if _fge ==0||_egc &&_ace > 0&&_fce +_ace *_fge /1000.0> _efb {_fge =0.95*1000.0*(_efb -_fce )/_ace ;};_gfa :=_cg ;{if _cc ,_afe :=_db .GetIntVal (_agg .Q );_afe {switch _cc {case 0:_gfa =_cg ;case 1:_gfa =_ab ;case 2:_gfa =_df ;default:_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_cc );};};};_efg :=_agb .MultilineLineHeight ;_eff :=_fge ;if _ffa &&_de > 1{_eff =_efg *_fge ;};var _agda float64 ;if _agdg !=nil {_agda ,_dfb =_agdg .GetCapHeight ();if _dfb !=nil {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_dfb );};};if int (_agda )<=0{_e .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_agda =1000;};_dgb :=_agda /1000.0*_fge ;_dgf :=0.0;{_aga :=float64 (_de )*_eff ;if _egc &&_dgf +_aga > _ega {_fge =0.95*(_ega -_dgf )/float64 (_de );_eff =_fge ;if _ffa &&_de > 1{_eff =_efg *_fge ;};_dgb =_agda /1000.0*_fge ;_aga =float64 (_de )*_eff ;};if _ega > _aga {if _ffa {if _agb .MultilineVAlignMiddle {_fcg :=(_ega -_aga )/2.0;_fgd :=_fcg +_aga -_eff ;_dgf =_fgd ;}else {_dgf =_ega -_eff ;_dgf -=_fge *0.5;};}else {_dgf =(_ega -_dgb )/2.0;};};};_efa .Add_Tf (*_abg ,_fge );_efa .Add_Td (_fce ,_dgf );_bcf :=_fce ;_fea :=_fce ;for _gag ,_gcf :=range _fdce {_ffc :=0.0;for _ ,_fa :=range _gcf {_feg ,_edga :=_fca .GetRuneMetrics (_fa );if !_edga {continue ;};_ffc +=_feg .Wx ;};_ecb :=_ffc /1000.0*_fge ;_cd :=_efb -_ecb ;var _fga float64 ;switch _gfa {case _cg :_fga =_bcf ;case _ab :_fga =_cd /2;case _df :_fga =_cd ;};_fce =_fga -_fea ;if _fce > 0.0{_efa .Add_Td (_fce ,0);};_fea =_fga ;_efa .Add_Tj (*_db .MakeString (_gcf ));if _gag < len (_fdce )-1{_efa .Add_Td (0,-_eff *_efg );};};_efa .Add_ET ();_efa .Add_Q ();_efa .Add_EMC ();_dbe :=_ae .NewXObjectForm ();_dbe .Resources =_ffe ;_dbe .BBox =_db .MakeArrayFromFloats ([]float64 {0,0,_afa ,_acc });_dbe .SetContentStream (_efa .Bytes (),_gbde ());_gabe :=_db .MakeDict ();_gabe .Set ("\u004e",_dbe .ToPdfObject ());return _gabe ,nil ;};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_ae .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _ef .LineEndingStyle ;LineEndingStyle2 _ef .LineEndingStyle ;};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specify a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_ae .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_ae .PdfFieldSignature ,error ){if signature ==nil {return nil ,_bc .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_aeec ,_dcca :=_effdc (lines ,opts );if _dcca !=nil {return nil ,_dcca ;};_aaf :=_ae .NewPdfFieldSignature (signature );_aaf .Rect =_db .MakeArrayFromFloats (opts .Rect );_aaf .AP =_aeec ;return _aaf ,nil ;};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_ae .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_ae .PdfFieldChoice ,error ){if page ==nil {return nil ,_bc .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_bc .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_bc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_gdac :=_ae .NewPdfField ();_dgd :=&_ae .PdfFieldChoice {};_gdac .SetContext (_dgd );_dgd .PdfField =_gdac ;_dgd .T =_db .MakeString (name );_dgd .Opt =_db .MakeArray ();for _ ,_dgeb :=range opt .Choices {_dgd .Opt .Append (_db .MakeString (_dgeb ));};_dgd .SetFlag (_ae .FieldFlagCombo );_eec :=_ae .NewPdfAnnotationWidget ();_eec .Rect =_db .MakeArrayFromFloats (rect );_eec .P =page .ToPdfObject ();_eec .F =_db .MakeInteger (4);_eec .Parent =_dgd .ToPdfObject ();_dgd .Annotations =append (_dgd .Annotations ,_eec );return _dgd ,nil ;};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_ecdf FieldAppearance )GenerateAppearanceDict (form *_ae .PdfAcroForm ,field *_ae .PdfField ,wa *_ae .PdfAnnotationWidget )(*_db .PdfObjectDictionary ,error ){_e .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );_ ,_da :=field .GetContext ().(*_ae .PdfFieldText );_acb ,_cb :=_db .GetDict (wa .AP );if _cb &&_ecdf .OnlyIfMissing &&(!_da ||!_ecdf .RegenerateTextFields ){_e .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");return _acb ,nil ;};if form .DR ==nil {form .DR =_ae .NewPdfPageResources ();};switch _fc :=field .GetContext ().(type ){case *_ae .PdfFieldText :_dbg :=_fc ;switch {case _dbg .Flags ().Has (_ae .FieldFlagPassword ):return nil ,nil ;case _dbg .Flags ().Has (_ae .FieldFlagFileSelect ):return nil ,nil ;case _dbg .Flags ().Has (_ae .FieldFlagComb ):if _dbg .MaxLen !=nil {_egf ,_ba :=_daa (wa ,_dbg ,form .DR ,_ecdf .Style ());if _ba !=nil {return nil ,_ba ;};return _egf ,nil ;};};_ge ,_ce :=_bf (wa ,_dbg ,form .DR ,_ecdf .Style ());if _ce !=nil {return nil ,_ce ;};return _ge ,nil ;case *_ae .PdfFieldButton :_fdbg :=_fc ;if _fdbg .IsCheckbox (){_gf ,_fg :=_adfb (wa ,_fdbg ,form .DR ,_ecdf .Style ());if _fg !=nil {return nil ,_fg ;};return _gf ,nil ;};_e .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_fdbg .GetType ());case *_ae .PdfFieldChoice :_cae :=_fc ;switch {case _cae .Flags ().Has (_ae .FieldFlagCombo ):_ggg ,_ga :=_eaba (form ,wa ,_cae ,_ecdf .Style ());if _ga !=nil {return nil ,_ga ;};return _ggg ,nil ;default:_e .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_cae .Flags ().String ());};default:_e .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_fc );};return nil ,nil ;};func _dc (_eb CircleAnnotationDef )(*_db .PdfObjectDictionary ,*_ae .PdfRectangle ,error ){_gd :=_ae .NewXObjectForm ();_gd .Resources =_ae .NewPdfPageResources ();_eg :="";if _eb .Opacity < 1.0{_fb :=_db .MakeDict ();_fb .Set ("\u0063\u0061",_db .MakeFloat (_eb .Opacity ));_fb .Set ("\u0043\u0041",_db .MakeFloat (_eb .Opacity ));_ca :=_gd .Resources .AddExtGState ("\u0067\u0073\u0031",_fb );if _ca !=nil {_e .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_ca ;};_eg ="\u0067\u0073\u0031";};_dg ,_dge ,_adg ,_gdd :=_fdb (_eb ,_eg );if _gdd !=nil {return nil ,nil ,_gdd ;};_gdd =_gd .SetContentStream (_dg ,nil );if _gdd !=nil {return nil ,nil ,_gdd ;};_gd .BBox =_dge .ToPdfObject ();_ead :=_db .MakeDict ();_ead .Set ("\u004e",_gd .ToPdfObject ());return _ead ,_adg ,nil ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_ae .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_ae .PdfColorDeviceRGB ;Opacity float64 ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_bff FieldAppearance )WrapContentStream (page *_ae .PdfPage )error {_ecg ,_effc :=page .GetAllContentStreams ();if _effc !=nil {return _effc ;};_ddafb :=_ed .NewContentStreamParser (_ecg );_dcf ,_effc :=_ddafb .Parse ();if _effc !=nil {return _effc ;};_dcf .WrapIfNeeded ();_bbg :=[]string {_dcf .String ()};return page .SetContentStreams (_bbg ,_gbde ());};func _eae (_gbae *_ae .PdfField ,_gca ,_eef float64 ,_fcdg string ,_dfgfa AppearanceStyle ,_dff *_ed .ContentStreamOperations ,_bfg *_ae .PdfPageResources ,_adgc *_db .PdfObjectDictionary )(*_ae .XObjectForm ,error ){_bbcc :=_ae .NewPdfPageResources ();_bcg ,_dgbc :=_gca ,_eef ;_babd :=_ed .NewContentCreator ();if _dfgfa .BorderSize > 0{_bg (_babd ,_dfgfa ,_gca ,_eef );};if _dfgfa .DrawAlignmentReticle {_bdfc :=_dfgfa ;_bdfc .BorderSize =0.2;_fbgc (_babd ,_bdfc ,_gca ,_eef );};_babd .Add_BMC ("\u0054\u0078");_babd .Add_q ();_babd .Add_BT ();_gca ,_eef =_dfgfa .applyRotation (_adgc ,_gca ,_eef ,_babd );_gcd ,_dbf ,_gcgb :=_dfgfa .processDA (_gbae ,_dff ,_bfg ,_bbcc ,_babd );if _gcgb !=nil {return nil ,_gcgb ;};_dbef :=_gcd .Font ;_ecf :=_gcd .Size ;_efeg :=_db .MakeName (_gcd .Name );_fdd :=_ecf ==0;if _fdd &&_dbf {_ecf =_eef *_dfgfa .AutoFontSizeFraction ;};_gde :=_dbef .Encoder ();if _gde ==nil {_e .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_gde =_ag .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_fcdg )==0{return nil ,nil ;};_geed :=2.0;_bad :=0.0;if _gde !=nil {for _ ,_dac :=range _fcdg {_gdg ,_ede :=_dbef .GetRuneMetrics (_dac );if !_ede {_e .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_dac );continue ;};_bad +=_gdg .Wx ;};_fcdg =string (_gde .Encode (_fcdg ));};if _ecf ==0||_fdd &&_bad > 0&&_geed +_bad *_ecf /1000.0> _gca {_ecf =0.95*1000.0*(_gca -_geed )/_bad ;};_fgae :=1.0*_ecf ;_ccd :=2.0;{_eefc :=_fgae ;if _fdd &&_ccd +_eefc > _eef {_ecf =0.95*(_eef -_ccd );_fgae =1.0*_ecf ;_eefc =_fgae ;};if _eef > _eefc {_ccd =(_eef -_eefc )/2.0;_ccd +=1.50;};};_babd .Add_Tf (*_efeg ,_ecf );_babd .Add_Td (_geed ,_ccd );_babd .Add_Tj (*_db .MakeString (_fcdg ));_babd .Add_ET ();_babd .Add_Q ();_babd .Add_EMC ();_bfe :=_ae .NewXObjectForm ();_bfe .Resources =_bbcc ;_bfe .BBox =_db .MakeArrayFromFloats ([]float64 {0,0,_bcg ,_dgbc });_bfe .SetContentStream (_babd .Bytes (),_gbde ());return _bfe ,nil ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_fe FieldAppearance )Style ()AppearanceStyle {if _fe ._gg !=nil {return *_fe ._gg ;};return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_ae .NewPdfColorDeviceGray (0),FillColor :_ae .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true };};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_ae .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_ae .PdfFieldButton ,error ){if page ==nil {return nil ,_bc .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_bc .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_bc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_gdae ,_babb :=_ae .NewStandard14Font (_ae .ZapfDingbatsName );if _babb !=nil {return nil ,_babb ;};_cgaa :=_ae .NewPdfField ();_fbdd :=&_ae .PdfFieldButton {};_cgaa .SetContext (_fbdd );_fbdd .PdfField =_cgaa ;_fbdd .T =_db .MakeString (name );_fbdd .SetType (_ae .ButtonTypeCheckbox );_gga :="\u004f\u0066\u0066";if opt .Checked {_gga ="\u0059\u0065\u0073";};_fbdd .V =_db .MakeName (_gga );_ceg :=_ae .NewPdfAnnotationWidget ();_ceg .Rect =_db .MakeArrayFromFloats (rect );_ceg .P =page .ToPdfObject ();_ceg .F =_db .MakeInteger (4);_ceg .Parent =_fbdd .ToPdfObject ();_bcedc :=rect [2]-rect [0];_ccc :=rect [3]-rect [1];var _ebe _d .Buffer ;_ebe .WriteString ("\u0071\u000a");_ebe .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_ebe .WriteString ("\u0042\u0054\u000a");_ebe .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_ebe .WriteString ("\u0045\u0054\u000a");_ebe .WriteString ("\u0051\u000a");_bba :=_ed .NewContentCreator ();_bba .Add_q ();_bba .Add_rg (0,0,1);_bba .Add_BT ();_bba .Add_Tf (*_db .MakeName ("\u005a\u0061\u0044\u0062"),12);_bba .Add_Td (0,0);_bba .Add_ET ();_bba .Add_Q ();_beea :=_ae .NewXObjectForm ();_beea .SetContentStream (_bba .Bytes (),_db .NewRawEncoder ());_beea .BBox =_db .MakeArrayFromFloats ([]float64 {0,0,_bcedc ,_ccc });_beea .Resources =_ae .NewPdfPageResources ();_beea .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_gdae .ToPdfObject ());_bba =_ed .NewContentCreator ();_bba .Add_q ();_bba .Add_re (0,0,_bcedc ,_ccc );_bba .Add_W ().Add_n ();_bba .Add_rg (0,0,1);_bba .Translate (0,3.0);_bba .Add_BT ();_bba .Add_Tf (*_db .MakeName ("\u005a\u0061\u0044\u0062"),12);_bba .Add_Td (0,0);_bba .Add_Tj (*_db .MakeString ("\u0034"));_bba .Add_ET ();_bba .Add_Q ();_fcb :=_ae .NewXObjectForm ();_fcb .SetContentStream (_bba .Bytes (),_db .NewRawEncoder ());_fcb .BBox =_db .MakeArrayFromFloats ([]float64 {0,0,_bcedc ,_ccc });_fcb .Resources =_ae .NewPdfPageResources ();_fcb .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_gdae .ToPdfObject ());_ecfe :=_db .MakeDict ();_ecfe .Set ("\u004f\u0066\u0066",_beea .ToPdfObject ());_ecfe .Set ("\u0059\u0065\u0073",_fcb .ToPdfObject ());_gfdf :=_db .MakeDict ();_gfdf .Set ("\u004e",_ecfe );_ceg .AP =_gfdf ;_ceg .AS =_db .MakeName (_gga );_fbdd .Annotations =append (_fbdd .Annotations ,_ceg );return _fbdd ,nil ;};const (_cg quadding =0;_ab quadding =1;_df quadding =2;);

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_gg *AppearanceStyle ;};func (_acf *AppearanceStyle )processDA (_faa *_ae .PdfField ,_cef *_ed .ContentStreamOperations ,_cba ,_baf *_ae .PdfPageResources ,_efc *_ed .ContentCreator )(*AppearanceFont ,bool ,error ){var _afef *AppearanceFont ;var _egb bool ;if _acf .Fonts !=nil {if _acf .Fonts .Fallback !=nil {_afef =_acf .Fonts .Fallback ;};if _ecc :=_acf .Fonts .FieldFallbacks ;_ecc !=nil {if _efaf ,_bed :=_ecc [_faa .PartialName ()];_bed {_afef =_efaf ;}else if _fcef ,_gge :=_faa .FullName ();_gge ==nil {if _ged ,_fcgg :=_ecc [_fcef ];_fcgg {_afef =_ged ;};};};_egb =_acf .Fonts .ForceReplace ;};var _gfab string ;var _dbdg float64 ;var _bage bool ;if _cef !=nil {for _ ,_ecbb :=range *_cef {if _ecbb .Operand =="\u0054\u0066"&&len (_ecbb .Params )==2{if _egcc ,_aedg :=_db .GetNameVal (_ecbb .Params [0]);_aedg {_gfab =_egcc ;};if _fcfd ,_dde :=_db .GetNumberAsFloat (_ecbb .Params [1]);_dde ==nil {_dbdg =_fcfd ;};_bage =true ;continue ;};_efc .AddOperand (*_ecbb );};};var _ecbg *AppearanceFont ;var _ccf _db .PdfObject ;if _egb &&_afef !=nil {_ecbg =_afef ;}else {if _cba !=nil &&_gfab !=""{if _dfd ,_ffdd :=_cba .GetFontByName (*_db .MakeName (_gfab ));_ffdd {if _cbe ,_abga :=_ae .NewPdfFontFromPdfObject (_dfd );_abga ==nil {_ccf =_dfd ;_ecbg =&AppearanceFont {Name :_gfab ,Font :_cbe ,Size :_dbdg };}else {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_abga );};};};if _ecbg ==nil &&_afef !=nil {_ecbg =_afef ;};if _ecbg ==nil {_acg ,_beba :=_ae .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _beba !=nil {return nil ,false ,_beba ;};_ecbg =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_acg ,Size :_dbdg };};};_ebbb :=*_db .MakeName (_ecbg .Name );if _ccf ==nil {_ccf =_ecbg .Font .ToPdfObject ();};if _cba !=nil &&!_cba .HasFontByName (_ebbb ){_cba .SetFontByName (_ebbb ,_ccf );};if _baf !=nil &&!_baf .HasFontByName (_ebbb ){_baf .SetFontByName (_ebbb ,_ccf );};return _ecbg ,_bage ,nil ;};

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_ae .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If size is 0, a default font size will be used.
// The default font size is calculated using the available annotation
// height and the AutoFontSizeFraction of the AppearanceStyle.
Size float64 ;};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_ae .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_ae .PdfFieldText ,error ){if page ==nil {return nil ,_bc .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_bc .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_bc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_afag :=_ae .NewPdfField ();_eea :=&_ae .PdfFieldText {};_afag .SetContext (_eea );_eea .PdfField =_afag ;_eea .T =_db .MakeString (name );if opt .MaxLen > 0{_eea .MaxLen =_db .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_eea .V =_db .MakeString (opt .Value );};_cbad :=_ae .NewPdfAnnotationWidget ();_cbad .Rect =_db .MakeArrayFromFloats (rect );_cbad .P =page .ToPdfObject ();_cbad .F =_db .MakeInteger (4);_cbad .Parent =_eea .ToPdfObject ();_eea .Annotations =append (_eea .Annotations ,_cbad );return _eea ,nil ;};type quadding int ;func _gbc (_adgg LineAnnotationDef )(*_db .PdfObjectDictionary ,*_ae .PdfRectangle ,error ){_fadd :=_ae .NewXObjectForm ();_fadd .Resources =_ae .NewPdfPageResources ();_adge :="";if _adgg .Opacity < 1.0{_fcba :=_db .MakeDict ();_fcba .Set ("\u0063\u0061",_db .MakeFloat (_adgg .Opacity ));_fdg :=_fadd .Resources .AddExtGState ("\u0067\u0073\u0031",_fcba );if _fdg !=nil {_e .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_fdg ;};_adge ="\u0067\u0073\u0031";};_bcee ,_gdda ,_deag ,_cfg :=_egbf (_adgg ,_adge );if _cfg !=nil {return nil ,nil ,_cfg ;};_cfg =_fadd .SetContentStream (_bcee ,nil );if _cfg !=nil {return nil ,nil ,_cfg ;};_fadd .BBox =_gdda .ToPdfObject ();_efgdg :=_db .MakeDict ();_efgdg .Set ("\u004e",_fadd .ToPdfObject ());return _efgdg ,_deag ,nil ;};func _daa (_caf *_ae .PdfAnnotationWidget ,_gea *_ae .PdfFieldText ,_feb *_ae .PdfPageResources ,_ffab AppearanceStyle )(*_db .PdfObjectDictionary ,error ){_bdf :=_ae .NewPdfPageResources ();_cfb ,_fed :=_db .GetArray (_caf .Rect );if !_fed {return nil ,_bc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_fbc ,_be :=_ae .NewPdfRectangle (*_cfb );if _be !=nil {return nil ,_be ;};_fbd ,_aac :=_fbc .Width (),_fbc .Height ();_effd ,_cbd :=_fbd ,_aac ;_dd ,_eee :=_db .GetDict (_caf .MK );if _eee {_dcd ,_ :=_db .GetDict (_caf .BS );_bac :=_ffab .applyAppearanceCharacteristics (_dd ,_dcd ,nil );if _bac !=nil {return nil ,_bac ;};};_gagd ,_eee :=_db .GetIntVal (_gea .MaxLen );if !_eee {return nil ,_bc .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _gagd <=0{return nil ,_bc .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_aacc :=float64 (_fbd )/float64 (_gagd );_fbe ,_be :=_ed .NewContentStreamParser (_deg (_gea .PdfField )).Parse ();if _be !=nil {return nil ,_be ;};_ebd :=_ed .NewContentCreator ();if _ffab .BorderSize > 0{_bg (_ebd ,_ffab ,_fbd ,_aac );};if _ffab .DrawAlignmentReticle {_dcg :=_ffab ;_dcg .BorderSize =0.2;_fbgc (_ebd ,_dcg ,_fbd ,_aac );};_ebd .Add_BMC ("\u0054\u0078");_ebd .Add_q ();_fbd ,_aac =_ffab .applyRotation (_dd ,_fbd ,_aac ,_ebd );_ebd .Add_BT ();_bdb ,_ddf ,_be :=_ffab .processDA (_gea .PdfField ,_fbe ,_feb ,_bdf ,_ebd );if _be !=nil {return nil ,_be ;};_cea :=_bdb .Font ;_afb :=_db .MakeName (_bdb .Name );_cab :=_bdb .Size ;_aee :=_cab ==0;if _aee &&_ddf {_cab =_aac *_ffab .AutoFontSizeFraction ;};_aeea :=_cea .Encoder ();if _aeea ==nil {_e .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_aeea =_ag .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _cbf string ;if _cad ,_fbg :=_db .GetString (_gea .V );_fbg {_cbf =_cad .Decoded ();};_ebd .Add_Tf (*_afb ,_cab );var _adb float64 ;for _ ,_dcb :=range _cbf {_caff ,_cbfc :=_cea .GetRuneMetrics (_dcb );if !_cbfc {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_dcb );continue ;};_dad :=_caff .Wy ;if int (_dad )<=0{_dad =_caff .Wx ;};if _dad > _adb {_adb =_dad ;};};if int (_adb )==0{_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");_adb =1000;};_bb ,_be :=_cea .GetFontDescriptor ();if _be !=nil {_e .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _eba float64 ;if _bb !=nil {_eba ,_be =_bb .GetCapHeight ();if _be !=nil {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_be );};};if int (_eba )<=0{_e .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_eba =1000.0;};_bab :=_eba /1000.0*_cab ;_adf :=0.0;_gcc :=1.0*_cab *(_adb /1000.0);{_efe :=_gcc ;if _aee &&_adf +_efe > _aac {_cab =0.95*(_aac -_adf );_gcc =1.0*_cab ;_efe =_gcc ;_bab =_eba /1000.0*_cab ;};if _aac > _bab {_adf =(_aac -_bab )/2.0;};};_ebd .Add_Td (0,_adf );if _dec ,_ddg :=_db .GetIntVal (_gea .Q );_ddg {switch _dec {case 2:if len (_cbf )< _gagd {_gad :=float64 (_gagd -len (_cbf ))*_aacc ;_ebd .Add_Td (_gad ,0);};};};for _ebc ,_aed :=range _cbf {_fac :=2.0;_gba :=string (_aed );if _aeea !=nil {_efea ,_efgd :=_cea .GetRuneMetrics (_aed );if !_efgd {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_aed );continue ;};_gba =string (_aeea .Encode (_gba ));_aacg :=_cab *_efea .Wx /1000.0;_gef :=(_aacc -_aacg )/2;_fac =_gef ;};_ebd .Add_Td (_fac ,0);_ebd .Add_Tj (*_db .MakeString (_gba ));if _ebc !=len (_cbf )-1{_ebd .Add_Td (_aacc -_fac ,0);};};_ebd .Add_ET ();_ebd .Add_Q ();_ebd .Add_EMC ();_aec :=_ae .NewXObjectForm ();_aec .Resources =_bdf ;_aec .BBox =_db .MakeArrayFromFloats ([]float64 {0,0,_effd ,_cbd });_aec .SetContentStream (_ebd .Bytes (),_gbde ());_afc :=_db .MakeDict ();_afc .Set ("\u004e",_aec .ToPdfObject ());return _afc ,nil ;};func _dba (_eefe RectangleAnnotationDef )(*_db .PdfObjectDictionary ,*_ae .PdfRectangle ,error ){_ccb :=_ae .NewXObjectForm ();_ccb .Resources =_ae .NewPdfPageResources ();_ebed :="";if _eefe .Opacity < 1.0{_aedc :=_db .MakeDict ();_aedc .Set ("\u0063\u0061",_db .MakeFloat (_eefe .Opacity ));_aedc .Set ("\u0043\u0041",_db .MakeFloat (_eefe .Opacity ));_bbgb :=_ccb .Resources .AddExtGState ("\u0067\u0073\u0031",_aedc );if _bbgb !=nil {_e .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_bbgb ;};_ebed ="\u0067\u0073\u0031";};_ecdff ,_fgeb ,_bfcb ,_gbce :=_cfdg (_eefe ,_ebed );if _gbce !=nil {return nil ,nil ,_gbce ;};_gbce =_ccb .SetContentStream (_ecdff ,nil );if _gbce !=nil {return nil ,nil ,_gbce ;};_ccb .BBox =_fgeb .ToPdfObject ();_eac :=_db .MakeDict ();_eac .Set ("\u004e",_ccb .ToPdfObject ());return _eac ,_bfcb ,nil ;};func _fdb (_aeg CircleAnnotationDef ,_af string )([]byte ,*_ae .PdfRectangle ,*_ae .PdfRectangle ,error ){_efd :=_ef .Circle {X :_aeg .X ,Y :_aeg .Y ,Width :_aeg .Width ,Height :_aeg .Height ,FillEnabled :_aeg .FillEnabled ,FillColor :_aeg .FillColor ,BorderEnabled :_aeg .BorderEnabled ,BorderWidth :_aeg .BorderWidth ,BorderColor :_aeg .BorderColor ,Opacity :_aeg .Opacity };_ecd ,_aa ,_ac :=_efd .Draw (_af );if _ac !=nil {return nil ,nil ,nil ,_ac ;};_gc :=&_ae .PdfRectangle {};_gc .Llx =_aeg .X +_aa .Llx ;_gc .Lly =_aeg .Y +_aa .Lly ;_gc .Urx =_aeg .X +_aa .Urx ;_gc .Ury =_aeg .Y +_aa .Ury ;return _ecd ,_aa ,_gc ,nil ;};func _eaba (_fde *_ae .PdfAcroForm ,_bbc *_ae .PdfAnnotationWidget ,_fffe *_ae .PdfFieldChoice ,_dfg AppearanceStyle )(*_db .PdfObjectDictionary ,error ){_bcba ,_efff :=_db .GetArray (_bbc .Rect );if !_efff {return nil ,_bc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ddd ,_ddaf :=_ae .NewPdfRectangle (*_bcba );if _ddaf !=nil {return nil ,_ddaf ;};_afd ,_ceag :=_ddd .Width (),_ddd .Height ();_e .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_bbc .BS );_fded ,_ddaf :=_ed .NewContentStreamParser (_deg (_fffe .PdfField )).Parse ();if _ddaf !=nil {return nil ,_ddaf ;};_fabd ,_cdg :=_db .GetDict (_bbc .MK );if _cdg {_bced ,_ :=_db .GetDict (_bbc .BS );_fcd :=_dfg .applyAppearanceCharacteristics (_fabd ,_bced ,nil );if _fcd !=nil {return nil ,_fcd ;};};_ceb :=_db .MakeDict ();for _ ,_ggb :=range _fffe .Opt .Elements (){if _cgac ,_aacff :=_db .GetArray (_ggb );_aacff &&_cgac .Len ()==2{_ggb =_cgac .Get (1);};var _dgae string ;if _bfa ,_fcf :=_db .GetString (_ggb );_fcf {_dgae =_bfa .Decoded ();}else if _deef ,_geea :=_db .GetName (_ggb );_geea {_dgae =_deef .String ();}else {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_ggb );return nil ,_bc .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_dgae )> 0{_fffc ,_dbd :=_eae (_fffe .PdfField ,_afd ,_ceag ,_dgae ,_dfg ,_fded ,_fde .DR ,_fabd );if _dbd !=nil {return nil ,_dbd ;};_ceb .Set (*_db .MakeName (_dgae ),_fffc .ToPdfObject ());};};_daf :=_db .MakeDict ();_daf .Set ("\u004e",_ceb );return _daf ,nil ;};func _effdc (_agfc []*SignatureLine ,_cfe *SignatureFieldOpts )(*_db .PdfObjectDictionary ,error ){if _cfe ==nil {_cfe =NewSignatureFieldOpts ();};var _dgc error ;var _gade *_db .PdfObjectName ;_fabf :=_cfe .Font ;if _fabf !=nil {_facg ,_ :=_fabf .GetFontDescriptor ();if _facg !=nil {if _bfd ,_gbbe :=_facg .FontName .(*_db .PdfObjectName );_gbbe {_gade =_bfd ;};};if _gade ==nil {_gade =_db .MakeName ("\u0046\u006f\u006et\u0031");};}else {if _fabf ,_dgc =_ae .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_dgc !=nil {return nil ,_dgc ;};_gade =_db .MakeName ("\u0048\u0065\u006c\u0076");};_ecgb :=_cfe .FontSize ;if _ecgb <=0{_ecgb =10;};if _cfe .LineHeight <=0{_cfe .LineHeight =1;};_caa :=_cfe .LineHeight *_ecgb ;_bbf ,_bdfcd :=_fabf .GetRuneMetrics (' ');if !_bdfcd {return nil ,_bc .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");};_adgb :=_bbf .Wx ;var _gefa float64 ;var _egccg []string ;for _ ,_ffea :=range _agfc {if _ffea .Text ==""{continue ;};_cafg :=_ffea .Text ;if _ffea .Desc !=""{_cafg =_ffea .Desc +"\u003a\u0020"+_cafg ;};_egccg =append (_egccg ,_cafg );var _cfc float64 ;for _ ,_cfd :=range _cafg {_badc ,_fad :=_fabf .GetRuneMetrics (_cfd );if !_fad {continue ;};_cfc +=_badc .Wx ;};if _cfc > _gefa {_gefa =_cfc ;};};_gefa =_gefa *_ecgb /1000.0;_edc :=float64 (len (_egccg ))*_caa ;_aeee :=_cfe .Rect ;if _aeee ==nil {_aeee =[]float64 {0,0,_gefa ,_edc };_cfe .Rect =_aeee ;};_cbfcd :=_aeee [2]-_aeee [0];_age :=_aeee [3]-_aeee [1];var _dea float64 ;if _cfe .AutoSize {if _gefa > _cbfcd ||_edc > _age {_badf :=_f .Min (_cbfcd /_gefa ,_age /_edc );_ecgb *=_badf ;};_caa =_cfe .LineHeight *_ecgb ;_dea +=(_age -float64 (len (_egccg ))*_caa )/2;};_ggd :=_ed .NewContentCreator ();if _cfe .BorderSize <=0{_cfe .BorderSize =0;_cfe .BorderColor =_ae .NewPdfColorDeviceGray (1);};if _cfe .BorderColor ==nil {_cfe .BorderColor =_ae .NewPdfColorDeviceGray (1);};if _cfe .FillColor ==nil {_cfe .FillColor =_ae .NewPdfColorDeviceGray (1);};_ggd .Add_q ().SetNonStrokingColor (_cfe .FillColor ).SetStrokingColor (_cfe .BorderColor ).Add_w (_cfe .BorderSize ).Add_re (_aeee [0],_aeee [1],_cbfcd ,_age ).Add_B ().Add_Q ();_ggd .Add_q ();_ggd .Translate (_aeee [0],_aeee [3]-_caa -_dea );_ggd .Add_BT ();_dcdb :=_fabf .Encoder ();for _ ,_gecg :=range _egccg {var _gff []byte ;for _ ,_fbge :=range _gecg {if _g .IsSpace (_fbge ){if len (_gff )> 0{_ggd .SetNonStrokingColor (_cfe .TextColor ).Add_Tf (*_gade ,_ecgb ).Add_TL (_caa ).Add_TJ ([]_db .PdfObject {_db .MakeStringFromBytes (_gff )}...);_gff =nil ;};_ggd .Add_Tf (*_gade ,_ecgb ).Add_TL (_caa ).Add_TJ ([]_db .PdfObject {_db .MakeFloat (-_adgb )}...);}else {_gff =append (_gff ,_dcdb .Encode (string (_fbge ))...);};};if len (_gff )> 0{_ggd .SetNonStrokingColor (_cfe .TextColor ).Add_Tf (*_gade ,_ecgb ).Add_TL (_caa ).Add_TJ ([]_db .PdfObject {_db .MakeStringFromBytes (_gff )}...);};_ggd .Add_Td (0,-_caa );};_ggd .Add_ET ();_ggd .Add_Q ();_ceaf :=_ae .NewPdfPageResources ();_ceaf .SetFontByName (*_gade ,_fabf .ToPdfObject ());_cgcc :=_ae .NewXObjectForm ();_cgcc .Resources =_ceaf ;_cgcc .BBox =_db .MakeArrayFromFloats (_aeee );_cgcc .SetContentStream (_ggd .Bytes (),_gbde ());_gcgd :=_db .MakeDict ();_gcgd .Set ("\u004e",_cgcc .ToPdfObject ());return _gcgd ,nil ;};func _fbgc (_dcc *_ed .ContentCreator ,_bfb AppearanceStyle ,_gcda ,_afae float64 ){_dcc .Add_q ().Add_re (0,0,_gcda ,_afae ).Add_re (0,_afae /2,_gcda ,_afae /2).Add_re (0,0,_gcda ,_afae ).Add_re (_gcda /2,0,_gcda /2,_afae ).Add_w (_bfb .BorderSize ).SetStrokingColor (_bfb .BorderColor ).SetNonStrokingColor (_bfb .FillColor ).Add_B ().Add_Q ();};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_ae .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _ae .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _ae .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _ae .PdfColor ;};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _ae .PdfColor ;FillColor _ae .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;};func _cfdg (_bbab RectangleAnnotationDef ,_bcfg string )([]byte ,*_ae .PdfRectangle ,*_ae .PdfRectangle ,error ){_dfa :=_ef .Rectangle {X :0,Y :0,Width :_bbab .Width ,Height :_bbab .Height ,FillEnabled :_bbab .FillEnabled ,FillColor :_bbab .FillColor ,BorderEnabled :_bbab .BorderEnabled ,BorderWidth :2*_bbab .BorderWidth ,BorderColor :_bbab .BorderColor ,Opacity :_bbab .Opacity };_bfce ,_fgbe ,_fba :=_dfa .Draw (_bcfg );if _fba !=nil {return nil ,nil ,nil ,_fba ;};_gfb :=&_ae .PdfRectangle {};_gfb .Llx =_bbab .X +_fgbe .Llx ;_gfb .Lly =_bbab .Y +_fgbe .Lly ;_gfb .Urx =_bbab .X +_fgbe .Urx ;_gfb .Ury =_bbab .Y +_fgbe .Ury ;return _bfce ,_fgbe ,_gfb ,nil ;};func _egbf (_abe LineAnnotationDef ,_eeac string )([]byte ,*_ae .PdfRectangle ,*_ae .PdfRectangle ,error ){_cdb :=_ef .Line {X1 :0,Y1 :0,X2 :_abe .X2 -_abe .X1 ,Y2 :_abe .Y2 -_abe .Y1 ,LineColor :_abe .LineColor ,Opacity :_abe .Opacity ,LineWidth :_abe .LineWidth ,LineEndingStyle1 :_abe .LineEndingStyle1 ,LineEndingStyle2 :_abe .LineEndingStyle2 };_gaf ,_aae ,_eced :=_cdb .Draw (_eeac );if _eced !=nil {return nil ,nil ,nil ,_eced ;};_ageg :=&_ae .PdfRectangle {};_ageg .Llx =_abe .X1 +_aae .Llx ;_ageg .Lly =_abe .Y1 +_aae .Lly ;_ageg .Urx =_abe .X1 +_aae .Urx ;_ageg .Ury =_abe .Y1 +_aae .Ury ;return _gaf ,_aae ,_ageg ,nil ;};func _adfb (_faf *_ae .PdfAnnotationWidget ,_cgf *_ae .PdfFieldButton ,_bee *_ae .PdfPageResources ,_ebbf AppearanceStyle )(*_db .PdfObjectDictionary ,error ){_abb ,_cgc :=_db .GetArray (_faf .Rect );if !_cgc {return nil ,_bc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ffd ,_decb :=_ae .NewPdfRectangle (*_abb );if _decb !=nil {return nil ,_decb ;};_adfd ,_fab :=_ffd .Width (),_ffd .Height ();_fceb ,_cfa :=_adfd ,_fab ;_e .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_faf .BS );_fafd ,_decb :=_ae .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _decb !=nil {return nil ,_decb ;};_aadg ,_fdf :=_db .GetDict (_faf .MK );if _fdf {_bde ,_ :=_db .GetDict (_faf .BS );_dgfg :=_ebbf .applyAppearanceCharacteristics (_aadg ,_bde ,_fafd );if _dgfg !=nil {return nil ,_dgfg ;};};_afgb :=_ae .NewXObjectForm ();{_fede :=_ed .NewContentCreator ();if _ebbf .BorderSize > 0{_bg (_fede ,_ebbf ,_adfd ,_fab );};if _ebbf .DrawAlignmentReticle {_ddga :=_ebbf ;_ddga .BorderSize =0.2;_fbgc (_fede ,_ddga ,_adfd ,_fab );};_adfd ,_fab =_ebbf .applyRotation (_aadg ,_adfd ,_fab ,_fede );_beb :=_ebbf .AutoFontSizeFraction *_fab ;_dce ,_gabf :=_fafd .GetRuneMetrics (_ebbf .CheckmarkRune );if !_gabf {return nil ,_bc .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ebad :=_fafd .Encoder ();_efdd :=_ebad .Encode (string (_ebbf .CheckmarkRune ));_aacf :=_dce .Wx *_beb /1000.0;_dfc :=705.0;_afba :=_dfc /1000.0*_beb ;_fcab :=2.0;_cbfa :=1.0;if _aacf < _adfd {_fcab =(_adfd -_aacf )/2.0;};if _afba < _fab {_cbfa =(_fab -_afba )/2.0;};_fede .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_beb ).Add_Td (_fcab ,_cbfa ).Add_Tj (*_db .MakeStringFromBytes (_efdd )).Add_ET ().Add_Q ();_afgb .Resources =_ae .NewPdfPageResources ();_afgb .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_fafd .ToPdfObject ());_afgb .BBox =_db .MakeArrayFromFloats ([]float64 {0,0,_fceb ,_cfa });_afgb .SetContentStream (_fede .Bytes (),_gbde ());};_dda :=_ae .NewXObjectForm ();{_dcbg :=_ed .NewContentCreator ();if _ebbf .BorderSize > 0{_bg (_dcbg ,_ebbf ,_adfd ,_fab );};_dda .BBox =_db .MakeArrayFromFloats ([]float64 {0,0,_fceb ,_cfa });_dda .SetContentStream (_dcbg .Bytes (),_gbde ());};_cec :=_db .MakeDict ();_cec .Set ("\u004f\u0066\u0066",_dda .ToPdfObject ());_cec .Set ("\u0059\u0065\u0073",_afgb .ToPdfObject ());_gda :=_db .MakeDict ();_gda .Set ("\u004e",_cec );return _gda ,nil ;};func _gbde ()_db .StreamEncoder {return _db .NewFlateEncoder ()};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};