#include <QtCore/QString>
#include <QtCore/QByteArray>




QByteArray returns_byte_array() { return {}; }
void receivesQString(const QString &) {}







void test()
{
    QByteArray bytearray;
    QString s1(QString::fromLatin1("test"));
    QString s2(QString::fromLatin1(bytearray));
    QString s3(QString::fromLatin1(bytearray + bytearray));
    QString s4 = QString::fromLatin1("test");
    QString s5 = QString::fromLatin1(bytearray);
    QString s6 = QString::fromLatin1(bytearray + bytearray);
    QString s7 = QString(); // OK
    QString s8 = QString(QString()); // OK
    s1 = QString::fromLatin1("test");
    s1 = QString::fromLatin1("test"
          "bar");
    s1 = QString::fromLatin1(bytearray);

    if (s1 == QString::fromLatin1("test")) {}
    if (s1 == QString::fromLatin1(bytearray)) {}
    if (s1 == QString::fromLatin1(bytearray + "test")) {}

    s1 = QString::fromLatin1(bytearray + bytearray);
    s1 += QString::fromLatin1(bytearray);
    s1 += QString::fromLatin1(bytearray + bytearray);
    s1.append(QString::fromLatin1("foo"));
    s1.prepend(QString::fromLatin1(bytearray));
    s1 = QString::fromLatin1(true ? "foo" : "bar");

    QString s9(QString::fromLatin1(returns_byte_array() + bytearray));
    s1.append(QString::fromLatin1(returns_byte_array()));

    receivesQString(QString::fromLatin1("test"));
}
